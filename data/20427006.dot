digraph {
	node [shape=circle style=filled]
	compound -> _holder_n_of [label=ARG1]
	"_tell_v_1-fn.Attempt" -> "named(Kornreich)" [label="ARG1-fn.Agent"]
	_for_p -> _holder_n_of [label=ARG2]
	appos -> _attorney_n_1 [label=ARG2]
	compound -> "named(Jones)" [label=ARG1]
	_a_q -> _attorney_n_1 [label=BV]
	_for_p -> _attorney_n_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	proper_q -> "named(Kornreich)" [label=BV]
	proper_q -> "named(Hartnett)" [label=BV]
	udef_q -> _judge_n_of [label=BV]
	compound -> _offer_n_1 [label=ARG1]
	compound -> "named(Kornreich)" [label=ARG1]
	compound -> "named(Robert)" [label=ARG2]
	compound -> "named(Telerate)" [label=ARG2]
	"_tell_v_1-fn.Attempt" -> "named(Hartnett)" [label="ARG2-fn.Goal"]
	proper_q -> "named(Jones)" [label=BV]
	proper_q -> "named(Dow)" [label=BV]
	"_be_v_id-fn.Name_conferral" -> _offer_n_1 [label="ARG1-fn.Entity"]
	_the_q -> _offer_n_1 [label=BV]
	compound -> "named(Dow)" [label=ARG2]
	_the_q -> _holder_n_of [label=BV]
	proper_q -> "named(Robert)" [label=BV]
	proper_q -> "named(Telerate)" [label=BV]
	appos -> "named(Kornreich)" [label=ARG1]
	compound -> "named(Hartnett)" [label=ARG1]
	"_tell_v_1-fn.Attempt" -> "_be_v_id-fn.Name_conferral" [label="ARG3-fn.Outcome"]
	"_be_v_id-fn.Name_conferral" -> _and_c [label="ARG2-fn.Name"]
	compound -> _judge_n_of [label=ARG2]
}
