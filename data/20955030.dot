digraph {
	node [shape=circle style=filled]
	"_contend_v_1-fn.Statement" -> loc_nonsp [label="ARG2-fn.Theme"]
	"_contend_v_1-fn.Statement" -> generic_entity [label="ARG1-fn.Agent"]
	loc_nonsp -> pron [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_hinder_v_1-fn.Hindering" -> "named(SEC)" [label="ARG2-fn.Theme"]
	loc_nonsp -> time_n [label=ARG2]
	_the_q -> "named(SEC)" [label=BV]
	proper_q -> "named(Washington)" [label=BV]
	pronoun_q -> pron [label=BV]
	comp_too -> _soon_p [label=ARG1]
	"_hinder_v_1-fn.Hindering" -> "named(Breeden)" [label="ARG1-fn.Agent"]
	comp_too -> _tell_v_1 [label=ARG2]
	_some_q -> generic_entity [label=BV]
	_tell_v_1 -> _or_c [label=ARG2]
	proper_q -> "named(Breeden)" [label=BV]
	_soon_p -> time_n [label=ARG1]
	"_help_v_1-fn.Assistance" -> "named(SEC)" [label="ARG2-fn.Theme"]
	_in_p -> generic_entity [label=ARG1]
	_in_p -> "named(Washington)" [label=ARG2]
	compound -> "named(Breeden)" [label=ARG1]
	"_help_v_1-fn.Assistance" -> "named(Breeden)" [label="ARG1-fn.Agent"]
	def_implicit_q -> time_n [label=BV]
}
