digraph {
	node [shape=circle style=filled]
	focus_d -> _in_p_state [label=ARG2]
	udef_q -> _textile_n_1 [label=BV]
	"_focus_v_on-fn.Perception_active" -> part_of [label="ARG1-fn.Perceiver_agentive"]
	compound -> _core_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_because_x -> "_allow_v_1-fn.State_continue" [label=ARG2]
	"_focus_v_on-fn.Perception_active" -> _activity_n_1 [label="ARG2-fn.Phenomenon"]
	_the_q -> _business_n_1 [label=BV]
	_because_x -> _logical_a_for [label=ARG1]
	_in_p_state -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> _addition_n_1 [label=BV]
	"_allow_v_1-fn.State_continue" -> "_focus_v_on-fn.Perception_active" [label="ARG3-fn.Time"]
	"_say_v_to-fn.Have_as_requirement" -> _because_x [label="ARG2-fn.Requirement"]
	udef_q -> _and_c [label=BV]
	udef_q -> _chemical_n_1 [label=BV]
	comp -> _close_a_to [label=ARG1]
	compound -> _and_c [label=ARG2]
	udef_q -> _core_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Courtaulds)" [label="ARG1-fn.Dependent"]
	pronoun_q -> pron [label=BV]
	_close_a_to -> "_focus_v_on-fn.Perception_active" [label=ARG1]
	proper_q -> "named(Courtaulds)" [label=BV]
	_both_q -> part_of [label=BV]
	"_allow_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	_in_p_state -> _addition_n_1 [label=ARG2]
	"_allow_v_1-fn.State_continue" -> part_of [label="ARG2-fn.State"]
	compound -> _business_n_1 [label=ARG1]
	part_of -> _business_n_1 [label=ARG1]
	_logical_a_for -> _move_n_1 [label=ARG1]
	udef_q -> _activity_n_1 [label=BV]
	_the_q -> _move_n_1 [label=BV]
	compound -> _activity_n_1 [label=ARG1]
}
