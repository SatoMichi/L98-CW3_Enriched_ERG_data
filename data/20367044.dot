digraph {
	node [shape=circle style=filled]
	_only_x_deg -> udef_q [label=ARG1]
	_previously_p -> "_make_v_1-fn.Manufacturing" [label=ARG1]
	proper_q -> "named(Trek)" [label=BV]
	compound -> _mountain_n_1 [label=ARG2]
	"_take_v_2-fn.Have_as_requirement" -> _change_v_into [label="ARG1-fn.NotExist"]
	compound -> "named(Dick)" [label=ARG2]
	appos -> _president_n_of [label=ARG1]
	focus_d -> "_take_v_2-fn.Have_as_requirement" [label=ARG2]
	compound -> "named(Burke)" [label=ARG1]
	"_make_v_1-fn.Manufacturing" -> _bike_n_1 [label="ARG2-fn.Product"]
	_change_v_into -> _bike_n_1 [label=ARG3]
	"_say_v_to-fn.IN" -> _president_n_of [label="ARG1-fn.Agent"]
	proper_q -> "named(Dick)" [label=BV]
	proper_q -> "named(Burke)" [label=BV]
	_traditional_a_1 -> _bike_n_1 [label=ARG1]
	udef_q -> _bike_n_1 [label=BV]
	compound -> _road_n_1 [label=ARG2]
	appos -> "named(Burke)" [label=ARG2]
	poss -> "named(Trek)" [label=ARG2]
	poss -> _president_n_of [label=ARG1]
	"_make_v_1-fn.Manufacturing" -> "named(Trek)" [label="ARG1-fn.Agent"]
	neg -> "_take_v_2-fn.Have_as_requirement" [label=ARG1]
	def_explicit_q -> _president_n_of [label=BV]
	udef_q -> _road_n_1 [label=BV]
	_a_q -> _bike_n_1 [label=BV]
	"_take_v_2-fn.Have_as_requirement" -> _scientist_n_1 [label="ARG3-fn.NotExist"]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	compound -> _rocket_n_1 [label=ARG2]
	udef_q -> _mountain_n_1 [label=BV]
	_a_q -> _scientist_n_1 [label=BV]
	compound -> _scientist_n_1 [label=ARG1]
	udef_q -> _rocket_n_1 [label=BV]
	compound -> _bike_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
