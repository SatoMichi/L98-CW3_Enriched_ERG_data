digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Lang)" [label=BV]
	compound -> "named(Lang)" [label=ARG1]
	_the_q -> _conversation_n_1 [label=BV]
	proper_q -> "named(Laff)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	parg_d -> "_tape_v_1-fn.NF" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_get_v_cause-fn.IN" -> "named(Lorin)" [label="ARG2-fn.Patient"]
	parg_d -> _conversation_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	_effort_n_1 -> "_get_v_cause-fn.IN" [label=ARG1]
	"_tape_v_1-fn.NF" -> _conversation_n_1 [label="ARG2-fn.Theme"]
	_be_v_id -> _effort_n_1 [label=ARG2]
	_implicate_v_in -> "named(Lorin)" [label=ARG1]
	nominalization -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(Lorin)" [label=BV]
	compound -> "named(Lorin)" [label=ARG1]
	_be_v_id -> thing [label=ARG1]
	"_tape_v_1-fn.NF" -> _investigator_n_1 [label="ARG1-fn.Agent"]
	_a_q -> _effort_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	_federal_a_1 -> _investigator_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Lang)" [label="ARG1-fn.Agent"]
	udef_q -> _investigator_n_1 [label=BV]
	_implicate_v_in -> "named(Laff)" [label=ARG2]
	compound -> "named(Laff)" [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	_in_p -> "_tape_v_1-fn.NF" [label=ARG1]
	"_get_v_cause-fn.IN" -> _implicate_v_in [label="ARG3-fn.NotExist"]
	which_q -> thing [label=BV]
}
