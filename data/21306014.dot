digraph {
	node [shape=circle style=filled]
	udef_q -> "named_n(US)" [label=BV]
	"_need_v_1-fn.Needing" -> "named(Memories)" [label="ARG1-fn.Pivot"]
	"_inspire_v_1-fn.IN" -> pron [label="ARG1-fn.Stimulus"]
	"_in+order+to_x" -> "_inspire_v_1-fn.IN" [label=ARG2]
	"_say_v_to-fn.IN" -> "_need_v_1-fn.Needing" [label="ARG2-fn.NotExist"]
	"_in+order+to_x" -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named_n(US)" [label=ARG2]
	udef_q -> _other_n_1 [label=BV]
	focus_d -> "_need_v_1-fn.Needing" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_inspire_v_1-fn.IN" -> "_join_v_1-fn.Cause_to_amalgamate" [label="ARG3-fn.NotExist"]
	compound -> "named(Memories)" [label=ARG1]
	"_join_v_1-fn.Cause_to_amalgamate" -> _other_n_1 [label="ARG1-fn.Agent"]
	_a_q -> _catalyst_n_1 [label=BV]
	"_need_v_1-fn.Needing" -> _catalyst_n_1 [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	proper_q -> "named(Memories)" [label=BV]
	"_inspire_v_1-fn.IN" -> _other_n_1 [label="ARG2-fn.Experiencer"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
