digraph {
	node [shape=circle style=filled]
	poss -> _plan_n_1 [label=ARG1]
	_relate_v_to -> _business_n_1 [label=ARG2]
	compound -> "named(Scott)" [label=ARG1]
	appos -> "named(Scott)" [label=ARG1]
	_series_n_of -> _business_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	"_follow_v_1-fn.Cotheme" -> _plan_n_1 [label="ARG2-fn.Theme"]
	_able_a_1 -> "_follow_v_1-fn.Cotheme" [label=ARG2]
	poss -> _executive_n_1 [label=ARG1]
	compound -> "named(WCRS)" [label=ARG2]
	parg_d -> _relate_v_to [label=ARG1]
	appos -> _executive_n_1 [label=ARG2]
	def_explicit_q -> _plan_n_1 [label=BV]
	compound -> _executive_n_1 [label=ARG1]
	_now_a_1 -> _able_a_1 [label=ARG1]
	udef_q -> _media_n_1 [label=BV]
	"_follow_v_1-fn.Cotheme" -> "named(Group)" [label="ARG1-fn.Agent"]
	compound -> _holding_n_1 [label=ARG2]
	poss -> _part_n_1 [label=ARG1]
	_for_p -> _company_n_of [label=ARG1]
	proper_q -> "named(Peter)" [label=BV]
	def_explicit_q -> _executive_n_1 [label=BV]
	_of_p -> _plan_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _able_a_1 [label="ARG2-fn.Topic"]
	compound -> _chief_n_1 [label=ARG2]
	compound -> "named(Group)" [label=ARG1]
	compound -> _company_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_for_p -> _series_n_of [label=ARG2]
	compound -> _media_n_1 [label=ARG2]
	compound -> "named(Peter)" [label=ARG2]
	proper_q -> "named(Scott)" [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Scott)" [label="ARG1-fn.Agent"]
	_of_p -> nominalization [label=ARG2]
	_a_q -> _series_n_of [label=BV]
	_become_v_id -> _company_n_of [label=ARG2]
	poss -> _firm_n_1 [label=ARG2]
	proper_q -> "named(WCRS)" [label=BV]
	udef_q -> nominalization [label=BV]
	"_longstanding/jj_u_unknown" -> _plan_n_1 [label=ARG1]
	_a_q -> _company_n_of [label=BV]
	parg_d -> _business_n_1 [label=ARG2]
	_the_q -> _firm_n_1 [label=BV]
	nominalization -> _become_v_id [label=ARG1]
	udef_q -> _business_n_1 [label=BV]
	compound -> _relate_v_to [label=ARG1]
	proper_q -> "named(Group)" [label=BV]
	focus_d -> _able_a_1 [label=ARG2]
	udef_q -> _holding_n_1 [label=BV]
	_for_p -> _part_n_1 [label=ARG2]
	_able_a_1 -> "named(Group)" [label=ARG1]
	_for_p -> "named(Group)" [label=ARG1]
	def_explicit_q -> _part_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
