digraph {
	node [shape=circle style=filled]
	"_in+order+to_x" -> "_hold_v_1-fn.Competition" [label=ARG1]
	parg_d -> "_learn_v_1-fn.Competition" [label=ARG1]
	_early_a_1 -> time_n [label=ARG1]
	_a_q -> _bid_n_1 [label=BV]
	focus_d -> "_learn_v_1-fn.Competition" [label=ARG1]
	_until_p -> "_convene_v_cause-fn.Amounting_to" [label=ARG1]
	udef_q -> _telephone_n_1 [label=BV]
	_on_p -> _situation_n_1 [label=ARG2]
	"_hear_v_1-fn.Expectation" -> _board_n_of [label="ARG1-fn.Cognizer"]
	_until_p -> time_n [label=ARG2]
	"_convene_v_cause-fn.Amounting_to" -> _meeting_n_of [label="ARG2-fn.Attribute"]
	"_learn_v_1-fn.Competition" -> _but_c [label="ARG2-fn.Participant_2"]
	parg_d -> "_convene_v_cause-fn.Amounting_to" [label=ARG1]
	_in_p -> _sign_n_of [label=ARG2]
	"_hold_v_1-fn.Competition" -> _board_n_of [label="ARG1-fn.Participant_1"]
	proper_q -> "dofw(Mon)" [label=BV]
	_likely_a_1 -> "_convene_v_cause-fn.Amounting_to" [label=ARG1]
	_imminent_a_1 -> _bid_n_1 [label=ARG1]
	"_hear_v_1-fn.Expectation" -> _update_n_of [label="ARG2-fn.Phenomenon"]
	loc_nonsp -> _week_n_1 [label=ARG2]
	"_in+order+to_x" -> "_hear_v_1-fn.Expectation" [label=ARG2]
	_the_q -> _board_n_of [label=BV]
	proper_q -> "named(UAL)" [label=BV]
	compound -> _meeting_n_of [label=ARG1]
	loc_nonsp -> "dofw(Mon)" [label=ARG2]
	_a_q -> _meeting_n_of [label=BV]
	compound -> _telephone_n_1 [label=ARG2]
	neg -> _imminent_a_1 [label=ARG1]
	neg -> _likely_a_1 [label=ARG1]
	_the_q -> _situation_n_1 [label=BV]
	focus_d -> _meanwhile_p [label=ARG2]
	_sign_n_of -> neg [label=ARG1]
	def_implicit_q -> _week_n_1 [label=BV]
	udef_q -> _board_n_of [label=BV]
	_in_p -> _meanwhile_p [label=ARG1]
	loc_nonsp -> time_n [label=ARG1]
	compound -> _board_n_of [label=ARG2]
	_new_a_1 -> _bid_n_1 [label=ARG1]
	"_hold_v_1-fn.Competition" -> _meeting_n_of [label="ARG2-fn.Participant_2"]
	_another_q -> _sign_n_of [label=BV]
	_next_a_1 -> _week_n_1 [label=ARG1]
	compound -> "named(UAL)" [label=ARG2]
	loc_nonsp -> "_hold_v_1-fn.Competition" [label=ARG1]
	_formal_a_1 -> _meeting_n_of [label=ARG1]
	_meanwhile_p -> "_learn_v_1-fn.Competition" [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	parg_d -> _meeting_n_of [label=ARG2]
	_a_q -> _update_n_of [label=BV]
	_on_p -> _update_n_of [label=ARG1]
}
