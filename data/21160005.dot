digraph {
	node [shape=circle style=filled]
	_a_q -> _hurry_n_1 [label=BV]
	compound -> _increase_n_1 [label=ARG1]
	superl -> _easy_a_for [label=ARG1]
	_the_q -> _and_c [label=BV]
	udef_q -> _fund_n_1 [label=BV]
	udef_q -> _tax_n_1 [label=BV]
	udef_q -> _sale_n_of [label=BV]
	udef_q -> generic_entity [label=BV]
	_in_p -> _hurry_n_1 [label=ARG2]
	_fast_a_1 -> generic_entity [label=ARG1]
	_easy_a_for -> generic_entity [label=ARG1]
	compound -> _tax_n_1 [label=ARG1]
	"_be_v_id-fn.Cause_to_end" -> _increase_n_1 [label="ARG1-fn.Process"]
	with_p -> _and_c [label=ARG2]
	_in_p -> "_raise_v_cause-fn.Cause_to_end" [label=ARG1]
	"_raise_v_cause-fn.Cause_to_end" -> _fund_n_1 [label="ARG2-fn.Means"]
	_a_q -> _increase_n_1 [label=BV]
	"_appear_v_to-fn.State_continue" -> "_be_v_id-fn.Cause_to_end" [label="ARG2-fn.State"]
	"_be_v_id-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	with_p -> "_raise_v_cause-fn.Cause_to_end" [label=ARG1]
	superl -> _fast_a_1 [label=ARG1]
	compound -> _sale_n_of [label=ARG2]
}
