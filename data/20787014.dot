digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> "named(Brady)" [label="ARG1-fn.Agent"]
	_also_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	poss -> pron [label=ARG2]
	compound -> "named(Brady)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	poss -> _weight_n_of [label=ARG1]
	compound -> "_buy+out_n_1" [label=ARG2]
	parg_d -> "_buy+out_n_1" [label=ARG2]
	udef_q -> "_buy+out_n_1" [label=BV]
	proper_q -> "named(Brady)" [label=BV]
	compound -> _phenomenon_n_1 [label=ARG1]
	parg_d -> _leverage_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_own_a_1 -> _weight_n_of [label=ARG1]
	_under_p -> "_end_v_1-fn.Cause_to_end" [label=ARG1]
	"_end_v_1-fn.Cause_to_end" -> _phenomenon_n_1 [label="ARG1-fn.NotExist"]
	def_explicit_q -> _weight_n_of [label=BV]
	_leverage_v_1 -> "_buy+out_n_1" [label=ARG2]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	_the_q -> _phenomenon_n_1 [label=BV]
	_under_p -> _weight_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> "_expect_v_1-fn.IN" [label="ARG2-fn.Topic"]
	"_expect_v_1-fn.IN" -> "_end_v_1-fn.Cause_to_end" [label="ARG2-fn.Theme"]
}
