digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	_of_p -> _capacity_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	"_tell_v_1-fn.Telling" -> _can_v_modal [label="ARG3-fn.Recipient"]
	parg_d -> "_tell_v_1-fn.Telling" [label=ARG1]
	"_ask_v_1-fn.Questioning" -> "named(Chalabi)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Chalabi)" [label=BV]
	"_tell_v_1-fn.Telling" -> _good_n_1 [label="ARG2-fn.Topic"]
	_already_a_1 -> _produce_v_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _capacity_n_1 [label=BV]
	"card(95)" -> _percent_n_of [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _good_n_1 [label=BV]
	udef_q -> _or_c [label=BV]
	"card(105)" -> _percent_n_of [label=ARG1]
	eventuality -> "_tell_v_1-fn.Telling" [label=ARG1]
	_at_p -> _or_c [label=ARG2]
	_of_p -> _or_c [label=ARG1]
	_produce_v_1 -> pron [label=ARG1]
	_of_p -> _percent_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	parg_d -> _good_n_1 [label=ARG2]
	compound -> "named(Chalabi)" [label=ARG1]
	_if_x_then -> _produce_v_1 [label=ARG2]
	proper_q -> "named(Al)" [label=BV]
	"_ask_v_1-fn.Questioning" -> _if_x_then [label="ARG2-fn.Topic"]
	_be_v_id -> thing [label=ARG1]
	def_explicit_q -> _capacity_n_1 [label=BV]
	poss -> _capacity_n_1 [label=ARG1]
	compound -> "named(Al)" [label=ARG2]
	_at_p -> _percent_n_of [label=ARG2]
	_if_x_then -> _be_v_id [label=ARG1]
	udef_q -> _percent_n_of [label=BV]
	"card(100)" -> _percent_n_of [label=ARG1]
	_can_v_modal -> _produce_v_1 [label=ARG1]
	_be_v_id -> _good_n_1 [label=ARG2]
	_at_p -> _produce_v_1 [label=ARG1]
	which_q -> thing [label=BV]
	focus_d -> "_ask_v_1-fn.Questioning" [label=ARG1]
}
