digraph {
	node [shape=circle style=filled]
	compound -> "named(Betsy)" [label=ARG2]
	compound -> "named(Engelken)" [label=ARG1]
	_when_x_subord -> _about_a_1 [label=ARG2]
	number_q -> "card(50)" [label=BV]
	_when_x_subord -> "_ask_v_1-fn.Questioning" [label=ARG1]
	poss -> pron [label=ARG2]
	poss -> _husband_n_1 [label=ARG1]
	def_explicit_q -> time_n [label=BV]
	"_turn_v_1-fn.Undergo_change" -> _husband_n_1 [label="ARG1-fn.NotExist"]
	def_explicit_q -> _husband_n_1 [label=BV]
	loc_nonsp -> "_ask_v_1-fn.Questioning" [label=ARG1]
	"_ask_v_1-fn.Questioning" -> _question_n_about [label="ARG2-fn.Topic"]
	loc_nonsp -> time_n [label=ARG1]
	proper_q -> "named(Betsy)" [label=BV]
	pronoun_q -> pron [label=BV]
	comp_equal -> _same_a_as [label=ARG1]
	"_turn_v_1-fn.Undergo_change" -> "card(50)" [label="ARG2-fn.Patient"]
	_same_a_as -> _question_n_about [label=ARG1]
	proper_q -> "named(Engelken)" [label=BV]
	loc_nonsp -> _year_n_1 [label=ARG2]
	_early_a_1 -> time_n [label=ARG1]
	_about_a_1 -> _husband_n_1 [label=ARG1]
	_about_a_1 -> "_turn_v_1-fn.Undergo_change" [label=ARG2]
	comp -> _early_a_1 [label=ARG1]
	"_ask_v_1-fn.Questioning" -> "named(Engelken)" [label="ARG1-fn.Agent"]
	_the_q -> _question_n_about [label=BV]
	_this_q_dem -> _year_n_1 [label=BV]
}
