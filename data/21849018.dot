digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _asset_n_1 [label=BV]
	parg_d -> _value_n_1 [label=ARG2]
	"_attach_v_1-fn.Inchoative_attaching" -> _value_n_1 [label="ARG2-fn.Patient"]
	poss -> pron [label=ARG2]
	"_attach_v_1-fn.Inchoative_attaching" -> _to_p [label="ARG3-fn.NotExist"]
	focus_d -> _in_p_state [label=ARG2]
	_a_q -> _firm_n_1 [label=BV]
	_to_p -> _value_n_1 [label=ARG1]
	parg_d -> "_attach_v_1-fn.Inchoative_attaching" [label=ARG1]
	_to_p -> _firm_n_1 [label=ARG2]
	_in_p_state -> "_the+same_a_1" [label=ARG1]
	_the_q -> _cost_n_1 [label=BV]
	_of_p -> _cost_n_1 [label=ARG1]
	_in_p_state -> _theory_n_of [label=ARG2]
	"_replace_v_with-fn.IN" -> _asset_n_1 [label="ARG2-fn.Theme"]
	focus_d -> _should_v_modal [label=ARG1]
	pronoun_q -> pron [label=BV]
	_should_v_modal -> "_the+same_a_1" [label=ARG1]
	_of_p -> nominalization [label=ARG2]
	udef_q -> nominalization [label=BV]
	_the_q -> _value_n_1 [label=BV]
	"_the+same_a_1" -> _and_c [label=ARG1]
	"_attach_v_1-fn.Inchoative_attaching" -> _market_n_1 [label="ARG1-fn.Agent"]
	udef_q -> _theory_n_of [label=BV]
	poss -> _asset_n_1 [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	nominalization -> "_replace_v_with-fn.IN" [label=ARG1]
}
