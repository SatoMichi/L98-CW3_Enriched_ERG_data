digraph {
	node [shape=circle style=filled]
	_after_p -> "_kill_v_1-fn.Killing" [label=ARG1]
	_of_p -> _valuation_n_1 [label=ARG2]
	"_kill_v_1-fn.Killing" -> pron [label="ARG2-fn.Patient"]
	_be_v_id -> _growth_n_of [label=ARG1]
	compound -> _widow_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.NotExist"]
	udef_q -> _male_n_1 [label=BV]
	_to_p -> _spider_n_1 [label=ARG2]
	_female_a_1 -> _spider_n_1 [label=ARG1]
	unknown -> _reference_n_1 [label=ARG]
	_be_v_id -> _widow_n_1 [label=ARG2]
	_strong_a_1 -> _growth_n_of [label=ARG1]
	udef_q -> _valuation_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _widow_n_1 [label=BV]
	_to_p -> _reference_n_1 [label=ARG1]
	_attract_v_1 -> _spider_n_1 [label=ARG1]
	udef_q -> _black_n_1 [label=BV]
	_a_q -> _reference_n_1 [label=BV]
	focus_d -> _growth_n_of [label=ARG2]
	compound -> _black_n_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	_the_q -> _spider_n_1 [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	nominalization -> _mate_v_1 [label=ARG1]
	compound -> _dividend_n_1 [label=ARG2]
	compound -> _growth_n_of [label=ARG1]
	udef_q -> _dividend_n_1 [label=BV]
	"_kill_v_1-fn.Killing" -> _spider_n_1 [label="ARG1-fn.Agent"]
	udef_q -> _growth_n_of [label=BV]
	_after_p -> nominalization [label=ARG2]
	_of_p -> _widow_n_1 [label=ARG1]
	_attract_v_1 -> _male_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
