digraph {
	node [shape=circle style=filled]
	poss -> _plant_n_1 [label=ARG1]
	compound -> "named(KerrMcGee)" [label=ARG2]
	def_explicit_q -> _plant_n_1 [label=BV]
	focus_d -> "_think_v_1-fn.IN" [label=ARG2]
	poss -> pron [label=ARG2]
	parg_d -> "_destroy_v_1-fn.Destroying" [label=ARG1]
	"_think_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_the_q -> _plant_n_1 [label=BV]
	_a_q -> "_spokeswoman/nn_u_unknown" [label=BV]
	_when_x_subord -> "_think_v_1-fn.IN" [label=ARG1]
	_at_p -> _plant_n_1 [label=ARG2]
	every_q -> person [label=BV]
	"_get_v_state-fn.IN" -> person [label="ARG1-fn.NotExist"]
	proper_q -> "named(KerrMcGee)" [label=BV]
	"_think_v_1-fn.IN" -> "_get_v_state-fn.IN" [label="ARG2-fn.NotExist"]
	parg_d -> _plant_n_1 [label=ARG2]
	"_get_v_state-fn.IN" -> _concerned_a_about [label="ARG2-fn.Patient"]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> _when_x_subord [label="ARG2-fn.Topic"]
	comp_equal -> _same_a_as [label=ARG1]
	_concerned_a_about -> person [label=ARG1]
	_would_v_modal -> "_happen_v_1-fn.Event" [label=ARG1]
	"_happen_v_1-fn.Event" -> "_thing_n_of-about" [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> "_spokeswoman/nn_u_unknown" [label="ARG1-fn.Agent"]
	compound -> "_spokeswoman/nn_u_unknown" [label=ARG1]
	_at_p -> "_happen_v_1-fn.Event" [label=ARG1]
	_when_x_subord -> "_destroy_v_1-fn.Destroying" [label=ARG2]
	"_destroy_v_1-fn.Destroying" -> _plant_n_1 [label="ARG2-fn.Patient"]
	_concerned_a_about -> _would_v_modal [label=ARG2]
	_the_q -> "_thing_n_of-about" [label=BV]
	_same_a_as -> "_thing_n_of-about" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
