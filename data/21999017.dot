digraph {
	node [shape=circle style=filled]
	compound -> "named(MCI)" [label=ARG2]
	proper_q -> "named(Akerson)" [label=BV]
	compound -> _chief_n_1 [label=ARG2]
	compound -> _margin_n_1 [label=ARG1]
	udef_q -> _improvement_n_1 [label=BV]
	proper_q -> "named(MCI)" [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	appos -> "named(Akerson)" [label=ARG1]
	nominalization -> _operate_v_1 [label=ARG1]
	udef_q -> _margin_n_1 [label=BV]
	_financial_a_1 -> _officer_n_1 [label=ARG1]
	compound -> nominalization [label=ARG2]
	"_see_v_1-fn.State_continue" -> _improvement_n_1 [label="ARG2-fn.State"]
	_in_p -> _margin_n_1 [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Akerson)" [label="ARG1-fn.Dependent"]
	_further_a_1 -> _improvement_n_1 [label=ARG1]
	proper_q -> "named(Daniel)" [label=BV]
	compound -> "named(Akerson)" [label=ARG1]
	compound -> _officer_n_1 [label=ARG1]
	udef_q -> _officer_n_1 [label=BV]
	comp -> _further_a_1 [label=ARG1]
	_in_p -> _improvement_n_1 [label=ARG1]
	"_see_v_1-fn.State_continue" -> _company_n_of [label="ARG1-fn.Entity"]
	compound -> "named(Daniel)" [label=ARG2]
	appos -> _officer_n_1 [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "_see_v_1-fn.State_continue" [label="ARG2-fn.Requirement"]
	_the_q -> _company_n_of [label=BV]
}
