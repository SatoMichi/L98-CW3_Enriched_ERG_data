digraph {
	node [shape=circle style=filled]
	_same_a_as -> _program_n_of [label=ARG1]
	_before_p -> pron [label=ARG2]
	part_of -> _effort_n_1 [label=ARG1]
	_all_q -> part_of [label=BV]
	_the_q -> _effort_n_1 [label=BV]
	_be_v_id -> nominalization [label=ARG1]
	_into_p -> part_of [label=ARG2]
	_into_p -> _plow_v_1 [label=ARG1]
	nominalization -> "_have_v_prd-fn.IN" [label=ARG1]
	parg_d -> _plow_v_1 [label=ARG1]
	_but_p_except -> _with_p [label=ARG2]
	"much-many_a" -> _resource_n_1 [label=ARG1]
	_plow_v_1 -> _resource_n_1 [label=ARG2]
	"_have_v_prd-fn.IN" -> _before_p [label="ARG3-fn.NotExist"]
	loc_nonsp -> time_n [label=ARG2]
	loc_nonsp -> "_have_v_prd-fn.IN" [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _resource_n_1 [label=BV]
	comp_equal -> _same_a_as [label=ARG1]
	comp -> "much-many_a" [label=ARG1]
	_control_v_1 -> _effort_n_1 [label=ARG2]
	_the_q -> _program_n_of [label=BV]
	_now_a_1 -> time_n [label=ARG1]
	parg_d -> _resource_n_1 [label=ARG2]
	_essentially_x_deg -> _the_q [label=ARG1]
	_but_p_except -> _program_n_of [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_have_v_prd-fn.IN" -> thing [label="ARG2-fn.Theme"]
	_be_v_id -> _program_n_of [label=ARG2]
	_before_p -> thing [label=ARG1]
	_with_p -> _resource_n_1 [label=ARG2]
	"_have_v_prd-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	"_enforce_v_1-fn.NF" -> _effort_n_1 [label="ARG2-fn.NotExist"]
	def_implicit_q -> time_n [label=BV]
	which_q -> thing [label=BV]
}
