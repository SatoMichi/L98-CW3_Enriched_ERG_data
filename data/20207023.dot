digraph {
	node [shape=circle style=filled]
	compound -> _participation_n_in [label=ARG1]
	_get_v_state -> _away_p [label=ARG2]
	udef_q -> _audience_n_1 [label=BV]
	proper_q -> "named(Collins)" [label=BV]
	_would_v_modal -> _get_v_state [label=ARG1]
	compound -> "named(Collins)" [label=ARG1]
	"_feel_v_seem-about-fn.Feeling" -> _compel_v_1 [label="ARG2-fn.NotExist"]
	"_feel_v_seem-about-fn.Feeling" -> pron [label="ARG1-fn.NotExist"]
	_probable_a_1 -> _would_v_modal [label=ARG1]
	parg_d -> _compel_v_1 [label=ARG1]
	def_explicit_q -> _tune_n_1 [label=BV]
	_if_x_then -> _probable_a_1 [label=ARG1]
	compound -> _ms_n_1 [label=ARG2]
	comp_too -> "_mellow/jj_u_unknown" [label=ARG1]
	compound -> _tune_n_1 [label=ARG1]
	_away_p -> pron [label=ARG1]
	_if_x_then -> neg [label=ARG2]
	parg_d -> pron [label=ARG2]
	proper_q -> "named(Grace)" [label=BV]
	_all_a_1 -> "_mellow/jj_u_unknown" [label=ARG1]
	compound -> "named(Amazing)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _ms_n_1 [label=BV]
	proper_q -> "named(Amazing)" [label=BV]
	neg -> "_feel_v_seem-about-fn.Feeling" [label=ARG1]
	_compel_v_1 -> pron [label=ARG2]
	"_mellow/jj_u_unknown" -> pron [label=ARG1]
	_get_v_state -> pron [label=ARG1]
	poss -> _tune_n_1 [label=ARG1]
	"_ask_v_for-fn.Request" -> _participation_n_in [label="ARG3-fn.NotExist"]
	appos -> _tune_n_1 [label=ARG1]
	compound -> _signature_n_1 [label=ARG2]
	compound -> _audience_n_1 [label=ARG2]
	"_ask_v_for-fn.Request" -> pron [label="ARG1-fn.NotExist"]
	comp_too -> _believe_v_1 [label=ARG2]
	udef_q -> _participation_n_in [label=BV]
	udef_q -> _signature_n_1 [label=BV]
	"_add_v_to-fn.Statement" -> _tune_n_1 [label="ARG2-fn.NotExist"]
	_with_p -> pron [label=ARG2]
	"_add_v_to-fn.Statement" -> pron [label="ARG1-fn.NotExist"]
	appos -> "named(Grace)" [label=ARG2]
	poss -> "named(Collins)" [label=ARG2]
	_compel_v_1 -> _and_c [label=ARG3]
	parg_d -> _believe_v_1 [label=ARG1]
	_with_p -> _away_p [label=ARG1]
	compound -> "named(Grace)" [label=ARG1]
}
