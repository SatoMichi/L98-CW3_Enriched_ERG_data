digraph {
	node [shape=circle style=filled]
	udef_q -> "named_n(House)" [label=BV]
	_the_q -> _bill_n_of [label=BV]
	compound -> _capital_n_1 [label=ARG2]
	_to_p -> _or_c [label=ARG1]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> _gain_n_1 [label=BV]
	"_attach_v_1-fn.Inchoative_attaching" -> _to_p [label="ARG3-fn.NotExist"]
	_any_q -> _amendment_n_of [label=BV]
	"_say_v_to-fn.IN" -> "named(Rostenkowski)" [label="ARG1-fn.NotExist"]
	"_want_v_1-fn.Desiring" -> "_attach_v_1-fn.Inchoative_attaching" [label="ARG3-fn.NotExist"]
	compound -> _limit_n_of [label=ARG1]
	nominalization -> _borrow_v_from [label=ARG1]
	_the_q -> _committee_n_of [label=BV]
	_the_q -> _cut_n_1 [label=BV]
	compound -> nominalization [label=ARG2]
	appos -> implicit_conj [label=ARG2]
	proper_q -> "named(Illinois)" [label=BV]
	_raise_v_cause -> _bill_n_of [label=ARG1]
	_to_p -> _bill_n_of [label=ARG2]
	udef_q -> _or_c [label=BV]
	udef_q -> implicit_conj [label=BV]
	"_attach_v_1-fn.Inchoative_attaching" -> _or_c [label="ARG2-fn.Patient"]
	proper_q -> "named(Dan)" [label=BV]
	proper_q -> "named(Rostenkowski)" [label=BV]
	udef_q -> _chairman_n_of [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	parg_d -> "_attach_v_1-fn.Inchoative_attaching" [label=ARG1]
	parg_d -> _or_c [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _tax_n_1 [label=BV]
	compound -> _and_c [label=ARG2]
	_other_a_1 -> _amendment_n_of [label=ARG1]
	compound -> _chairman_n_of [label=ARG2]
	compound -> _cut_n_1 [label=ARG1]
	proper_q -> "named(Ways)" [label=BV]
	udef_q -> nominalization [label=BV]
	compound -> "named_n(House)" [label=ARG2]
	compound -> _gain_n_1 [label=ARG1]
	proper_q -> "named(D)" [label=BV]
	appos -> "named(Rostenkowski)" [label=ARG1]
	_federal_a_1 -> _limit_n_of [label=ARG1]
	_separate_a_from -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _committee_n_of [label=ARG1]
	"_want_v_1-fn.Desiring" -> _or_c [label="ARG2-fn.NotExist"]
	compound -> _tax_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	_of_p -> _committee_n_of [label=ARG2]
	_pending_a_1 -> _bill_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	neg -> "_want_v_1-fn.Desiring" [label=ARG1]
	proper_q -> "named(Means)" [label=BV]
	compound -> "named(Dan)" [label=ARG2]
	_raise_v_cause -> _limit_n_of [label=ARG2]
	_the_q -> _limit_n_of [label=BV]
	compound -> "named(Rostenkowski)" [label=ARG1]
	udef_q -> _capital_n_1 [label=BV]
	_of_p -> "named(Rostenkowski)" [label=ARG1]
}
