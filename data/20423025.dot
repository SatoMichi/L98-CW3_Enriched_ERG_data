digraph {
	node [shape=circle style=filled]
	parg_d -> _interpret_v_1 [label=ARG1]
	_stage_n_of -> _disease_n_1 [label=ARG1]
	_the_q -> _press_n_1 [label=BV]
	_the_q -> _stage_n_of [label=BV]
	_just_a_1 -> "_feel_v_1-fn.Opinion" [label=ARG1]
	_as_x_subord -> _colon_p_namely [label=ARG1]
	parg_d -> _line_n_of [label=ARG2]
	_be_v_there -> _line_n_of [label=ARG1]
	_some_q -> _line_n_of [label=BV]
	_interpret_v_1 -> _line_n_of [label=ARG2]
	"_mis-_a_error" -> _interpret_v_1 [label=ARG1]
	"_un-_a_rvrs" -> _identify_v_1 [label=ARG1]
	"card(1)" -> _official_n_1 [label=ARG1]
	_the_q -> _disease_n_1 [label=BV]
	"_tell_v_1-fn.Telling" -> _official_n_1 [label="ARG1-fn.Agent"]
	parg_d -> _official_n_1 [label=ARG2]
	_in_p -> _stage_n_of [label=ARG2]
	_in_p -> _official_n_1 [label=ARG1]
	parg_d -> _identify_v_1 [label=ARG1]
	_late_a_for -> _stage_n_of [label=ARG1]
	proper_q -> "named(Baker)" [label=BV]
	_could_v_modal -> _and_c [label=ARG1]
	"_seize_v_1-fn.NF" -> _line_n_of [label="ARG2-fn.Theme"]
	parg_d -> "_seize_v_1-fn.NF" [label=ARG1]
	"_tell_v_1-fn.Telling" -> "named_n(Times)" [label="ARG2-fn.NotExist"]
	_in_p -> _line_n_of [label=ARG1]
	udef_q -> _official_n_1 [label=BV]
	_as_x_subord -> "_tell_v_1-fn.Telling" [label=ARG2]
	_colon_p_namely -> "_feel_v_1-fn.Opinion" [label=ARG1]
	"_feel_v_1-fn.Opinion" -> "named(Baker)" [label="ARG1-fn.Agent"]
	"_seize_v_1-fn.NF" -> _press_n_1 [label="ARG1-fn.Agent"]
	"_feel_v_1-fn.Opinion" -> _be_v_there [label="ARG2-fn.Theme"]
	_the_q -> _speech_n_1 [label=BV]
	_in_p -> _speech_n_1 [label=ARG2]
	_the_q -> "named_n(Times)" [label=BV]
	_identify_v_1 -> _official_n_1 [label=ARG2]
	_clear_a_of -> _in_p [label=ARG1]
}
