digraph {
	node [shape=circle style=filled]
	compound -> _sell_n_1 [label=ARG2]
	_the_q -> "named(Board)" [label=BV]
	"_advance_v_1-fn.Competition" -> _issue_n_1 [label="ARG1-fn.Participant_1"]
	udef_q -> _sell_n_1 [label=BV]
	compound -> "named(Big)" [label=ARG2]
	number_q -> "card(700)" [label=BV]
	udef_q -> _index_n_1 [label=BV]
	number_q -> "card(784)" [label=BV]
	_on_p -> "named(Board)" [label=ARG2]
	"_top_v_1-fn.Competition" -> _issue_n_1 [label="ARG1-fn.Participant_1"]
	_late_a_for -> _sell_n_1 [label=ARG1]
	subord -> "_top_v_1-fn.Competition" [label=ARG1]
	udef_q -> _stock_n_1 [label=BV]
	compound -> _program_n_of [label=ARG1]
	"_top_v_1-fn.Competition" -> "_decliners/nns_u_unknown" [label="ARG2-fn.Participant_2"]
	compound -> _stock_n_1 [label=ARG2]
	udef_q -> "_decliners/nns_u_unknown" [label=BV]
	udef_q -> "_arbitrage/nn_u_unknown" [label=BV]
	_the_q -> _program_n_of [label=BV]
	_by_p -> "card(784)" [label=ARG2]
	compound -> "_arbitrage/nn_u_unknown" [label=ARG1]
	_despite_p -> "_top_v_1-fn.Competition" [label=ARG1]
	_to_p -> "_top_v_1-fn.Competition" [label=ARG1]
	compound -> _index_n_1 [label=ARG1]
	proper_q -> "named(Big)" [label=BV]
	_despite_p -> _program_n_of [label=ARG2]
	udef_q -> _issue_n_1 [label=BV]
	"_result_v_from-fn.Verdict" -> "_arbitrage/nn_u_unknown" [label="ARG2-fn.Finding"]
	_by_p -> "_top_v_1-fn.Competition" [label=ARG1]
	compound -> "named(Board)" [label=ARG1]
	subord -> "_result_v_from-fn.Verdict" [label=ARG2]
	_to_p -> "card(700)" [label=ARG2]
	_on_p -> "_top_v_1-fn.Competition" [label=ARG1]
}
