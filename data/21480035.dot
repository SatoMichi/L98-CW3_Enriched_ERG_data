digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	"_generate_v_1-fn.Cause_to_end" -> _return_n_of [label="ARG2-fn.Means"]
	focus_d -> "_be_v_nv-fn.Cause_to_end" [label=ARG2]
	"_tell_v_1-fn.Attempt" -> pron [label="ARG3-fn.Outcome"]
	"_have_v_1-fn.Commerce_collect" -> _ability_n_1 [label="ARG2-fn.Goods"]
	nominalization -> "_tell_v_1-fn.Attempt" [label=ARG1]
	neg -> "_have_v_1-fn.Commerce_collect" [label=ARG1]
	udef_q -> nominalization [label=BV]
	which_q -> thing [label=BV]
	"_have_v_1-fn.Commerce_collect" -> pron [label="ARG1-fn.Buyer"]
	_internal_a_1 -> "_generate_v_1-fn.Cause_to_end" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_high_a_1 -> _return_n_of [label=ARG1]
	_the_q -> _ability_n_1 [label=BV]
	compound -> "named(Sloan)" [label=ARG1]
	comp -> _high_a_1 [label=ARG1]
	proper_q -> "named(Sloan)" [label=BV]
	udef_q -> _return_n_of [label=BV]
	"_say_v_to-fn.Taking" -> "_be_v_nv-fn.Cause_to_end" [label="ARG2-fn.Theme"]
	"_say_v_to-fn.Taking" -> "named(Sloan)" [label="ARG1-fn.Agent"]
	"_be_v_nv-fn.Cause_to_end" -> nominalization [label="ARG1-fn.Process"]
	_ability_n_1 -> "_generate_v_1-fn.Cause_to_end" [label=ARG1]
	"_be_v_nv-fn.Cause_to_end" -> neg [label="ARG2-fn.Means"]
	"_tell_v_1-fn.Attempt" -> thing [label="ARG2-fn.Goal"]
}
