digraph {
	node [shape=circle style=filled]
	"_exist_v_1-fn.Existence" -> _contract_n_1 [label="ARG1-fn.NotExist"]
	_the_q -> _producer_n_of [label=BV]
	_preclude_v_1 -> _contract_n_1 [label=ARG1]
	"_prove_v_to-fn.Reasoning" -> _and_c [label="ARG2-fn.Theme"]
	udef_q -> _executive_n_1 [label=BV]
	_another_q -> _studio_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_intend_v_for-fn.Purpose" [label="ARG2-fn.Topic"]
	compound -> _mister_n_1 [label=ARG2]
	nominalization -> _take_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Smith)" [label="ARG1-fn.Agent"]
	"_intend_v_for-fn.Purpose" -> "_prove_v_to-fn.Reasoning" [label="ARG2-fn.NotExist"]
	udef_q -> _mister_n_1 [label=BV]
	compound -> _post_n_of [label=ARG1]
	proper_q -> "named(Sony)" [label=BV]
	"_intend_v_for-fn.Purpose" -> "named(Sony)" [label="ARG1-fn.NotExist"]
	_even_x_deg -> _the_q [label=ARG1]
	"_prove_v_to-fn.Reasoning" -> "named(Sony)" [label="ARG1-fn.NotExist"]
	_the_q -> _contract_n_1 [label=BV]
	_the_q -> _agreement_n_1 [label=BV]
	_preclude_v_1 -> _producer_n_of [label=ARG2]
	parg_d -> _contract_n_1 [label=ARG2]
	"_in+fact_a_1" -> "_exist_v_1-fn.Existence" [label=ARG1]
	parg_d -> "_write_v_to-fn.Statement" [label=ARG1]
	compound -> "named(Smith)" [label=ARG1]
	"_write_v_to-fn.Statement" -> _contract_n_1 [label="ARG2-fn.Theme"]
	neg -> _preclude_v_1 [label=ARG1]
	_take_v_1 -> _post_n_of [label=ARG2]
	udef_q -> nominalization [label=BV]
	_from_p -> _preclude_v_1 [label=ARG1]
	_from_p -> nominalization [label=ARG2]
	_oral_a_1 -> _agreement_n_1 [label=ARG1]
	proper_q -> "named(Smith)" [label=BV]
	_at_p -> _studio_n_1 [label=ARG2]
	compound -> _executive_n_1 [label=ARG2]
	"_exist_v_1-fn.Existence" -> _agreement_n_1 [label="ARG1-fn.NotExist"]
	_at_p -> _post_n_of [label=ARG1]
	udef_q -> _post_n_of [label=BV]
}
