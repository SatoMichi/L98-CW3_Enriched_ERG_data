digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Laidig)" [label=BV]
	def_explicit_q -> _evening_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _telephone_n_1 [label=BV]
	_as_p -> _friend_n_1 [label=ARG2]
	_with_p -> "named(Laidig)" [label=ARG2]
	def_implicit_q -> "dofw(Mon)" [label=BV]
	_as_p -> "_refer_v_to-fn.State_continue" [label=ARG1]
	"_add_v_to-fn.Cause_to_end" -> "_speak_v_to-fn.Have_as_requirement" [label="ARG2-fn.Means"]
	of_p -> "dofw(Mon)" [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_by_p_means -> "_speak_v_to-fn.Have_as_requirement" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Laidig)" [label=ARG1]
	"_refer_v_to-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	"_speak_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	_a_q -> _friend_n_1 [label=BV]
	"_refer_v_to-fn.State_continue" -> "named(Laidig)" [label="ARG2-fn.State"]
	_with_p -> "_speak_v_to-fn.Have_as_requirement" [label=ARG1]
	loc_nonsp -> _evening_n_of [label=ARG2]
	loc_nonsp -> "_speak_v_to-fn.Have_as_requirement" [label=ARG1]
	of_p -> _evening_n_of [label=ARG1]
	"_add_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	_by_p_means -> _telephone_n_1 [label=ARG2]
}
