digraph {
	node [shape=circle style=filled]
	_bear_v_on -> _law_n_1 [label=ARG2]
	"_in+order+to_x" -> _decide_v_1 [label=ARG2]
	_for_p -> time_n [label=ARG2]
	_other_a_1 -> _law_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _majority_n_of [label="ARG1-fn.Agent"]
	udef_q -> _state_n_of [label=BV]
	udef_q -> _court_n_of [label=BV]
	_the_q -> _court_n_of [label=BV]
	compound -> _state_n_of [label=ARG2]
	_the_q -> _majority_n_of [label=BV]
	compound -> _majority_n_of [label=ARG1]
	_high_a_1 -> _court_n_of [label=ARG1]
	_any_q -> nominalization [label=BV]
	udef_q -> _law_n_1 [label=BV]
	"_in+order+to_x" -> "_up+to_p" [label=ARG1]
	"_say_v_to-fn.IN" -> "_in+order+to_x" [label="ARG2-fn.Topic"]
	_for_p -> "_up+to_p" [label=ARG1]
	"_have_v_1-fn.IN" -> _definition_n_of [label="ARG1-fn.Pivot"]
	pronoun_q -> pron [label=BV]
	_decide_v_1 -> "_have_v_1-fn.IN" [label=ARG2]
	_now_a_1 -> time_n [label=ARG1]
	nominalization -> _bear_v_on [label=ARG1]
	_the_q -> _definition_n_of [label=BV]
	compound -> _law_n_1 [label=ARG1]
	"_up+to_p" -> pron [label=ARG1]
	"_up+to_p" -> _court_n_of [label=ARG2]
	_decide_v_1 -> pron [label=ARG1]
	"_have_v_1-fn.IN" -> nominalization [label="ARG2-fn.Theme"]
	compound -> _court_n_of [label=ARG1]
	def_implicit_q -> time_n [label=BV]
}
