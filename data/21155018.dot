digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Business)" [label=BV]
	compound -> "_supercomputer/nn_u_unknown" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_with_p -> _likes_n_of [label=ARG2]
	compound -> "named(Computer)" [label=ARG1]
	"_note_v_to-fn.Cause_to_end" -> neg [label="ARG2-fn.Means"]
	def_implicit_q -> place_n [label=BV]
	"_compete_v_1-fn.Competition" -> "_supercomputer/nn_u_unknown" [label="ARG1-fn.Participant_1"]
	subord -> "_note_v_to-fn.Cause_to_end" [label=ARG2]
	proper_q -> "named(Machines)" [label=BV]
	proper_q -> "named(Computer)" [label=BV]
	_with_p -> "_compete_v_1-fn.Competition" [label=ARG1]
	"_get_v_state-fn.Assemble" -> "_thing_n_of-about" [label="ARG2-fn.Group"]
	proper_q -> "named(Cray)" [label=BV]
	"_such+a_q" -> _machine_n_1 [label=BV]
	udef_q -> _end_n_of [label=BV]
	idiom_q_i -> _line_n_of [label=BV]
	proper_q -> "named(Convex)" [label=BV]
	_the_q -> _likes_n_of [label=BV]
	_here_a_1 -> place_n [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	"_in+order+to_x" -> "_would_v_modal-fn.Cotheme" [label=ARG1]
	_necessary_a_for -> _machine_n_1 [label=ARG1]
	"_have_v_1-fn.Competition" -> "_supercomputer/nn_u_unknown" [label="ARG2-fn.Participant_2"]
	"_get_v_state-fn.Assemble" -> loc_nonsp [label="ARG3-fn.Party_1"]
	"_say_v_to-fn.Cause_to_end" -> "_in+order+to_x" [label="ARG2-fn.Means"]
	eventuality -> "_compete_v_1-fn.Competition" [label=ARG1]
	"_have_v_1-fn.Competition" -> "named(Cray)" [label="ARG1-fn.Participant_1"]
	compound -> "named(Convex)" [label=ARG2]
	_on_p -> _line_n_of [label=ARG2]
	neg -> "_have_v_1-fn.Competition" [label=ARG1]
	_back_p -> place_n [label=ARG1]
	proper_q -> "named(International)" [label=BV]
	"_would_v_modal-fn.Cotheme" -> _necessary_a_for [label="ARG1-fn.Theme"]
	"_get_v_state-fn.Assemble" -> _machine_n_1 [label="ARG1-fn.Individuals"]
	_on_p -> place_n [label=ARG1]
	compound -> "named(Luber)" [label=ARG1]
	_a_q -> "_supercomputer/nn_u_unknown" [label=BV]
	loc_nonsp -> "_get_v_state-fn.Assemble" [label=ARG1]
	proper_q -> "named(Luber)" [label=BV]
	udef_q -> "_thing_n_of-about" [label=BV]
	loc_nonsp -> "_thing_n_of-about" [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	udef_q -> _corporation_n_1 [label=BV]
	compound -> "named(Business)" [label=ARG1]
	compound -> _end_n_of [label=ARG2]
	subord -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> "named(Luber)" [label="ARG1-fn.Process"]
	"_in+order+to_x" -> "_get_v_state-fn.Assemble" [label=ARG2]
	compound -> "named(Machines)" [label=ARG1]
	_low_a_on -> _end_n_of [label=ARG1]
	compound -> "named(International)" [label=ARG2]
	_likes_n_of -> _and_c [label=ARG1]
}
