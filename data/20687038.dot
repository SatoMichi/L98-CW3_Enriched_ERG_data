digraph {
	node [shape=circle style=filled]
	_in_p -> "named(Ditch)" [label=ARG2]
	_have_v_qmodal -> _as_x_prd [label=ARG1]
	proper_q -> "named(Boston)" [label=BV]
	_in_p -> "_live_v_1-fn.Residence" [label=ARG1]
	_such_q -> _condition_n_1 [label=BV]
	_to_p -> _travel_v_1 [label=ARG1]
	compound -> "named(New)" [label=ARG2]
	proper_q -> "named(New)" [label=BV]
	"_exist_v_1-fn.Existence" -> _problem_n_of [label="ARG1-fn.NotExist"]
	_the_q -> _problem_n_of [label=BV]
	_as_x_prd -> _in_p [label=ARG2]
	_when_x_subord -> "_exist_v_1-fn.Existence" [label=ARG1]
	udef_q -> _or_c [label=BV]
	udef_q -> implicit_conj [label=BV]
	_should_v_modal -> _have_v_qmodal [label=ARG1]
	proper_q -> "named(Washington)" [label=BV]
	compound -> "named(Ditch)" [label=ARG1]
	proper_q -> "named(Ditch)" [label=BV]
	_travel_v_1 -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_live_v_1-fn.Residence" -> person [label="ARG1-fn.Theme"]
	compound -> "named(York)" [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	_poor_a_1 -> _condition_n_1 [label=ARG1]
	_in_p -> _condition_n_1 [label=ARG2]
	compound -> "named(Sugar)" [label=ARG2]
	_no_q -> person [label=BV]
	_to_p -> implicit_conj [label=ARG2]
	_as_x_prd -> "_live_v_1-fn.Residence" [label=ARG1]
	proper_q -> "named(Sugar)" [label=BV]
	proper_q -> "named(York)" [label=BV]
	_when_x_subord -> _travel_v_1 [label=ARG2]
	proper_q -> "named(Chicago)" [label=BV]
	_same_a_as -> _problem_n_of [label=ARG1]
}
