digraph {
	node [shape=circle style=filled]
	"_call_v_name-fn.State_continue" -> "named(Unix)" [label="ARG2-fn.State"]
	parg_d -> "_call_v_name-fn.State_continue" [label=ARG1]
	_for_p -> _standard_n_1 [label=ARG1]
	appos -> _standard_n_1 [label=ARG2]
	compound -> _computer_n_1 [label=ARG2]
	"_agree_v_1-fn.State_continue" -> "_use_v_1-fn.Cause_to_end" [label="ARG2-fn.State"]
	"_call_v_name-fn.State_continue" -> _language_n_1 [label="ARG3-fn.Time"]
	proper_q -> "named(Convex)" [label=BV]
	_also_a_1 -> _recent_a_1 [label=ARG1]
	"_use_v_1-fn.Cause_to_end" -> "named(Posix)" [label="ARG2-fn.Means"]
	parg_d -> _language_n_1 [label=ARG2]
	_recent_a_1 -> "_agree_v_1-fn.State_continue" [label=ARG1]
	appos -> "named(Posix)" [label=ARG1]
	_for_p -> _language_n_1 [label=ARG2]
	_a_q -> _standard_n_1 [label=BV]
	_the_q -> _language_n_1 [label=BV]
	"_use_v_1-fn.Cause_to_end" -> "named(Convex)" [label="ARG1-fn.Process"]
	udef_q -> _computer_n_1 [label=BV]
	proper_q -> "named(Posix)" [label=BV]
	compound -> _language_n_1 [label=ARG1]
	proper_q -> "named(Unix)" [label=BV]
	"_agree_v_1-fn.State_continue" -> "named(Convex)" [label="ARG1-fn.Entity"]
}
