digraph {
	node [shape=circle style=filled]
	_here_a_1 -> place_n [label=ARG1]
	_a_q -> _conference_n_of [label=BV]
	_on_p -> nominalization [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_for_p -> reason [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_be_v_nv -> _factor_n_1 [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	loc_nonsp -> _conference_n_of [label=ARG1]
	comp -> _cheap_a_1 [label=ARG1]
	udef_q -> _university_n_of [label=BV]
	_for_p -> "_give_v_1-fn.Giving" [label=ARG1]
	"_ask_v_1-fn.Questioning" -> _customer_n_of [label="ARG1-fn.Agent"]
	_be_v_nv -> "_ask_v_1-fn.Questioning" [label=ARG2]
	which_q -> reason [label=BV]
	"_give_v_1-fn.Giving" -> _system_n_of [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	_at_p -> _conference_n_of [label=ARG2]
	compound -> _university_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Jobs)" [label="ARG1-fn.Agent"]
	focus_d -> _be_v_nv [label=ARG2]
	proper_q -> "named(Jobs)" [label=BV]
	_another_q -> _factor_n_1 [label=BV]
	udef_q -> _customer_n_of [label=BV]
	compound -> "named(Jobs)" [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_nv [label="ARG2-fn.Topic"]
	_at_p -> "_say_v_to-fn.IN" [label=ARG1]
	nominalization -> _compute_v_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	_a_q -> _system_n_of [label=BV]
	loc_nonsp -> place_n [label=ARG2]
	neg -> "_give_v_1-fn.Giving" [label=ARG1]
	_on_p -> _conference_n_of [label=ARG1]
	_cheap_a_1 -> _system_n_of [label=ARG1]
	compound -> nominalization [label=ARG1]
	"_ask_v_1-fn.Questioning" -> neg [label="ARG2-fn.Topic"]
	"_give_v_1-fn.Giving" -> pron [label="ARG3-fn.Recipient"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
