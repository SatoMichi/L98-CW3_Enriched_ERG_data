digraph {
	node [shape=circle style=filled]
	_that_q_dem -> _possibility_n_of [label=BV]
	compound -> "named(City)" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> _analyst_n_1 [label="ARG1-fn.Dependent"]
	_in_p -> _possibility_n_of [label=ARG1]
	focus_d -> _with_p [label=ARG2]
	udef_q -> _analyst_n_1 [label=BV]
	_positive_a_1 -> _move_n_1 [label=ARG1]
	_for_p -> "named(City)" [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> _first_n_of [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_be_v_id-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	_the_q -> _transaction_n_1 [label=BV]
	compound -> _first_n_of [label=ARG2]
	_in_p -> _mind_n_1 [label=ARG2]
	_with_p -> _possibility_n_of [label=ARG2]
	udef_q -> _mind_n_1 [label=BV]
	_with_p -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_for_p -> _move_n_1 [label=ARG1]
	proper_q -> "named(City)" [label=BV]
	"_be_v_id-fn.Cause_to_end" -> _transaction_n_1 [label="ARG1-fn.Process"]
	_a_q -> _move_n_1 [label=BV]
	"_be_v_id-fn.Cause_to_end" -> _move_n_1 [label="ARG2-fn.Means"]
}
