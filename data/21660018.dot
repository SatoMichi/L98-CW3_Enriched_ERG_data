digraph {
	node [shape=circle style=filled]
	_able_a_1 -> "_compete_v_1-fn.Competition" [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Carrion)" [label=ARG1]
	compound -> _chief_n_1 [label=ARG2]
	_the_q -> _bank_n_of [label=BV]
	_large_a_1 -> _bank_n_of [label=ARG1]
	_able_a_1 -> pron [label=ARG1]
	_as_p_nbar -> "_serve_v_as-fn.State_continue" [label=ARG1]
	udef_q -> _chief_n_1 [label=BV]
	_with_p -> "_compete_v_1-fn.Competition" [label=ARG1]
	_of_p -> _officer_n_1 [label=ARG1]
	udef_q -> _bank_n_of [label=BV]
	udef_q -> _and_c [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_as_p_nbar -> _and_c [label=ARG2]
	pronoun_q -> pron [label=BV]
	_colon_p_namely -> "_add_v_to-fn.Cause_to_end" [label=ARG1]
	udef_q -> _executive_n_1 [label=BV]
	_foreign_a_1 -> _bank_n_of [label=ARG1]
	_of_p -> _bank_n_of [label=ARG2]
	proper_q -> "named(Carrion)" [label=BV]
	_subsidiary_a_1 -> _bank_n_of [label=ARG1]
	"_serve_v_as-fn.State_continue" -> "named(Carrion)" [label="ARG1-fn.Entity"]
	compound -> _officer_n_1 [label=ARG1]
	udef_q -> _officer_n_1 [label=BV]
	"_add_v_to-fn.Cause_to_end" -> "named(Carrion)" [label="ARG1-fn.Process"]
	udef_q -> _president_n_of [label=BV]
	_with_p -> _bank_n_of [label=ARG2]
	_now_a_1 -> "_serve_v_as-fn.State_continue" [label=ARG1]
	compound -> _executive_n_1 [label=ARG2]
	_better_a_1 -> "_compete_v_1-fn.Competition" [label=ARG1]
	"_compete_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
}
