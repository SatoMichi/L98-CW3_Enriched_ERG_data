digraph {
	node [shape=circle style=filled]
	_fall_v_state -> _apart_a_1 [label=ARG2]
	udef_q -> generic_entity [label=BV]
	"_what+s+more_a_1" -> "_say_v_to-fn.IN" [label=ARG1]
	_of_p -> _lack_n_1 [label=ARG1]
	"much-many_a" -> generic_entity [label=ARG1]
	"_stringent/jj_u_unknown" -> _scrutiny_n_of [label=ARG1]
	udef_q -> _state_n_of [label=BV]
	udef_q -> _court_n_of [label=BV]
	_fall_v_state -> generic_entity [label=ARG1]
	compound -> _state_n_of [label=ARG2]
	_for_p -> _and_c [label=ARG2]
	_a_q -> _time_n_of [label=BV]
	_for_p -> _fall_v_state [label=ARG1]
	nominalization -> _finance_v_1 [label=ARG1]
	comp -> "_stringent/jj_u_unknown" [label=ARG1]
	_take_v_2 -> "_conclude_v_1-fn.IN" [label=ARG2]
	_take_v_2 -> _transaction_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_by_p -> _scrutiny_n_of [label=ARG1]
	udef_q -> _scrutiny_n_of [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.NotExist"]
	_of_p -> nominalization [label=ARG2]
	udef_q -> _transaction_n_1 [label=BV]
	_apart_a_1 -> generic_entity [label=ARG1]
	"_conclude_v_1-fn.IN" -> _time_n_of [label="ARG1-fn.Agent"]
	udef_q -> nominalization [label=BV]
	udef_q -> _lack_n_1 [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_by_p -> _court_n_of [label=ARG2]
	_much_x_deg -> comp [label=ARG1]
	_long_a_1 -> _time_n_of [label=ARG1]
	udef_q -> _and_c [label=BV]
	compound -> _court_n_of [label=ARG1]
	comp -> _long_a_1 [label=ARG1]
}
