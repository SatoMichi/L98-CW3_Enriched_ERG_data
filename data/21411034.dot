digraph {
	node [shape=circle style=filled]
	"_like_v_1-fn.Eclipse" -> pron [label="ARG1-fn.Obstruction"]
	"_call_v_1-fn.Competition" -> _desk_n_1 [label="ARG2-fn.Participant_2"]
	_for_p -> _help_n_1 [label=ARG2]
	unspec_manner -> manner [label=ARG2]
	_in_p -> _office_n_of [label=ARG2]
	udef_q -> _front_n_1 [label=BV]
	_in_p -> "_take_v_1-fn.Competition" [label=ARG1]
	nominalization -> implicit_conj [label=ARG1]
	_during_p -> "_get_v_state-fn.Residence" [label=ARG1]
	_early_a_1 -> _visit_n_to [label=ARG1]
	_a_q -> _office_n_of [label=BV]
	"_call_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_take_v_1-fn.Competition" -> _refuge_n_1 [label="ARG2-fn.Participant_2"]
	compound -> _front_n_1 [label=ARG2]
	parg_d -> pron [label=ARG2]
	unspec_manner -> implicit_conj [label=ARG1]
	udef_q -> nominalization [label=BV]
	_during_p -> _visit_n_to [label=ARG2]
	udef_q -> _help_n_1 [label=BV]
	udef_q -> _refuge_n_1 [label=BV]
	_for_p -> "_call_v_1-fn.Competition" [label=ARG1]
	_a_q -> _visit_n_to [label=BV]
	_of_p -> nominalization [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_get_v_state-fn.Residence" -> "_lose_v_1-fn.Competition" [label="ARG2-fn.Location"]
	"_get_v_state-fn.Residence" -> pron [label="ARG1-fn.Resident"]
	_expansive_a_1 -> _ranch_n_1 [label=ARG1]
	compound -> _desk_n_1 [label=ARG1]
	"_like_v_1-fn.Eclipse" -> "_tell_v_1-fn.Competition" [label="ARG2-fn.Eclipsed"]
	_on_p -> "_get_v_state-fn.Residence" [label=ARG1]
	"_tell_v_1-fn.Competition" -> _yarn_n_1 [label="ARG2-fn.Participant_2"]
	_on_p -> _ranch_n_1 [label=ARG2]
	parg_d -> "_lose_v_1-fn.Competition" [label=ARG1]
	"_take_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_tell_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	which_q -> manner [label=BV]
	_of_p -> _yarn_n_1 [label=ARG1]
	_the_q -> _yarn_n_1 [label=BV]
	_the_q -> _ranch_n_1 [label=BV]
	_the_q -> _desk_n_1 [label=BV]
	"_lose_v_1-fn.Competition" -> pron [label="ARG2-fn.Participant_2"]
}
