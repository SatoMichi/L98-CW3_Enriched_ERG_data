digraph {
	node [shape=circle style=filled]
	_into_p -> _agreement_n_1 [label=ARG2]
	_for_p -> _dollar_n_1 [label=ARG2]
	_all_q -> part_of [label=BV]
	_into_p -> "_enter_v_1-fn.Activity_prepare" [label=ARG1]
	_the_q -> _concern_n_1 [label=BV]
	"_begin_v_1-fn.Process_start" -> "named(Ratners)" [label="ARG1-fn.Event"]
	poss -> _share_n_of [label=ARG1]
	_definitive_a_1 -> _agreement_n_1 [label=ARG1]
	_for_p -> part_of [label=ARG2]
	part_of -> _share_n_of [label=ARG1]
	udef_q -> _dollar_n_1 [label=BV]
	"card(2)" -> _concern_n_1 [label=ARG1]
	proper_q -> "named(Weisfield)" [label=BV]
	"_begin_v_1-fn.Process_start" -> _offer_n_1 [label="ARG2-fn.Place"]
	compound -> _tender_n_1 [label=ARG2]
	def_explicit_q -> _share_n_of [label=BV]
	_each_p -> _dollar_n_1 [label=ARG1]
	_common_a_for -> _share_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> _concern_n_1 [label="ARG1-fn.Dependent"]
	compound -> _merger_n_1 [label=ARG2]
	_a_q -> _offer_n_1 [label=BV]
	udef_q -> _tender_n_1 [label=BV]
	_under_p_state -> "_begin_v_1-fn.Process_start" [label=ARG1]
	_under_p_state -> _agreement_n_1 [label=ARG2]
	_for_p -> _offer_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_enter_v_1-fn.Activity_prepare" [label="ARG2-fn.Requirement"]
	"card(57.50)" -> _dollar_n_1 [label=ARG1]
	compound -> _agreement_n_1 [label=ARG1]
	proper_q -> "named(Ratners)" [label=BV]
	udef_q -> _merger_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> _offer_n_1 [label=ARG1]
	_a_q -> _agreement_n_1 [label=BV]
	poss -> "named(Weisfield)" [label=ARG2]
	"_enter_v_1-fn.Activity_prepare" -> pron [label="ARG1-fn.Agent"]
}
