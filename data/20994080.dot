digraph {
	node [shape=circle style=filled]
	_a_q -> _identity_n_1 [label=BV]
	compound -> _vice_n_1 [label=ARG2]
	_any_q -> _casino_n_1 [label=BV]
	_the_q -> _competition_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_get_v_state-fn.IN" [label="ARG2-fn.Topic"]
	"_get_v_state-fn.IN" -> _casino_n_1 [label="ARG1-fn.NotExist"]
	_president_n_of -> "named(Circus)" [label=ARG1]
	parg_d -> _casino_n_1 [label=ARG2]
	proper_q -> "named(Circus)" [label=BV]
	parg_d -> _whack_v_1 [label=ARG1]
	compound -> "named(Glenn)" [label=ARG2]
	_senior_a_1 -> _president_n_of [label=ARG1]
	_without_p -> _identity_n_1 [label=ARG2]
	udef_q -> _vice_n_1 [label=BV]
	_strong_a_1 -> _identity_n_1 [label=ARG1]
	compound -> _casino_n_1 [label=ARG1]
	appos -> _president_n_of [label=ARG2]
	_whack_v_1 -> _competition_n_1 [label=ARG1]
	_without_p -> _casino_n_1 [label=ARG1]
	compound -> _president_n_of [label=ARG1]
	udef_q -> _president_n_of [label=BV]
	focus_d -> "_get_v_state-fn.IN" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Schaeffer)" [label="ARG1-fn.Agent"]
	compound -> "named(Schaeffer)" [label=ARG1]
	"_get_v_state-fn.IN" -> _whack_v_1 [label="ARG2-fn.Patient"]
	compound -> _hotel_n_1 [label=ARG2]
	_whack_v_1 -> _casino_n_1 [label=ARG2]
	proper_q -> "named(Schaeffer)" [label=BV]
	compound -> "named(Circus)" [label=ARG2]
	_new_a_1 -> _competition_n_1 [label=ARG1]
	udef_q -> _hotel_n_1 [label=BV]
	appos -> "named(Schaeffer)" [label=ARG1]
	proper_q -> "named(Glenn)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
