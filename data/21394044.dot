digraph {
	node [shape=circle style=filled]
	"_permit_v_1-fn.Competition" -> _driver_n_of [label="ARG2-fn.Participant_2"]
	_own_a_1 -> _vehicle_n_1 [label=ARG1]
	"_load_v_cause-fn.Cause_to_end" -> _vehicle_n_1 [label="ARG2-fn.Means"]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	compound -> _driver_n_of [label=ARG1]
	parg_d -> _driver_n_of [label=ARG2]
	_at_p -> "_load_v_cause-fn.Cause_to_end" [label=ARG1]
	poss -> _vehicle_n_1 [label=ARG1]
	udef_q -> _package_n_of [label=BV]
	_these_q_dem -> "_couriers/nns_u_unknown" [label=BV]
	"_permit_v_1-fn.Competition" -> "_load_v_cause-fn.Cause_to_end" [label="ARG3-fn.Participants"]
	_in_p -> _load_n_of [label=ARG2]
	_because_x -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	def_explicit_q -> _vehicle_n_1 [label=BV]
	_often_a_1 -> "_get_v_state-fn.Residence" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "_couriers/nns_u_unknown" [label="ARG1-fn.Process"]
	parg_d -> _package_n_of [label=ARG2]
	"_deliver_v_to-fn.Cause_to_end" -> _package_n_of [label="ARG2-fn.Means"]
	parg_d -> "_deliver_v_to-fn.Cause_to_end" [label=ARG1]
	udef_q -> _driver_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_the_q -> _load_n_of [label=BV]
	neg -> "_permit_v_1-fn.Competition" [label=ARG1]
	proper_q -> "named(UPS)" [label=BV]
	"_bury_v_1-fn.Competition" -> _package_n_of [label="ARG2-fn.Participant_2"]
	_at_p -> _depot_n_1 [label=ARG2]
	parg_d -> "_bury_v_1-fn.Competition" [label=ARG1]
	_late_p -> time_n [label=ARG1]
	loc_nonsp -> "_deliver_v_to-fn.Cause_to_end" [label=ARG1]
	_the_q -> _depot_n_1 [label=BV]
	"_get_v_state-fn.Residence" -> _package_n_of [label="ARG1-fn.Resident"]
	parg_d -> "_permit_v_1-fn.Competition" [label=ARG1]
	compound -> "named(UPS)" [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	"_get_v_state-fn.Residence" -> "_bury_v_1-fn.Competition" [label="ARG2-fn.Location"]
	_in_p -> "_bury_v_1-fn.Competition" [label=ARG1]
	"_load_v_cause-fn.Cause_to_end" -> _driver_n_of [label="ARG1-fn.Process"]
	def_implicit_q -> time_n [label=BV]
	_because_x -> neg [label=ARG2]
}
