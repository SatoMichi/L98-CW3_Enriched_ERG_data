digraph {
	node [shape=circle style=filled]
	"_perceive_v_as-fn.Have_as_requirement" -> _owner_n_of [label="ARG1-fn.Dependent"]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(Finks)" [label=BV]
	"_perceive_v_as-fn.Have_as_requirement" -> "named(Finks)" [label="ARG2-fn.Requirement"]
	compound -> _bearer_n_1 [label=ARG1]
	_for_p -> "named(Guard)" [label=ARG2]
	compound -> _standard_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	parg_d -> "named(Finks)" [label=ARG2]
	_a_q -> _bearer_n_1 [label=BV]
	compound -> "named(Guard)" [label=ARG1]
	proper_q -> "named(Old)" [label=BV]
	udef_q -> _standard_n_1 [label=BV]
	_some_q -> _owner_n_of [label=BV]
	parg_d -> "_perceive_v_as-fn.Have_as_requirement" [label=ARG1]
	compound -> "named(Old)" [label=ARG2]
	compound -> "named(Finks)" [label=ARG1]
	"_perceive_v_as-fn.Have_as_requirement" -> _bearer_n_1 [label="ARG3-fn.Degree"]
	_the_q -> "named(Guard)" [label=BV]
	_for_p -> _bearer_n_1 [label=ARG1]
}
