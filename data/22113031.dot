digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Johnny)" [label=BV]
	_for_p -> "_get_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	_so_x -> "_get_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	times -> "card(10)" [label=ARG2]
	neg -> "_be_v_id-fn.Cause_to_end" [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	_for_p -> generic_entity [label=ARG2]
	"_be_v_id-fn.Cause_to_end" -> _dollar_n_1 [label="ARG1-fn.Process"]
	udef_q -> generic_entity [label=BV]
	poss -> generic_entity [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_for_p -> "_be_v_id-fn.Cause_to_end" [label=ARG1]
	"much-many_a" -> generic_entity [label=ARG1]
	"_get_v_1-fn.Change_position_on_a_scale" -> "named(Payson)" [label="ARG1-fn.Attribute"]
	times -> "card(53)" [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	udef_q -> _dollar_n_1 [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	def_implicit_q -> generic_entity [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _so_x [label="ARG2-fn.Requirement"]
	_so_x -> _certain_a_1 [label=ARG2]
	proper_q -> "named(Payson)" [label=BV]
	comp_too -> "much-many_a" [label=ARG1]
	"_be_v_id-fn.Cause_to_end" -> generic_entity [label="ARG2-fn.Means"]
	"_get_v_1-fn.Change_position_on_a_scale" -> _dollar_n_1 [label="ARG2-fn.Item"]
	compound -> "named(Johnny)" [label=ARG2]
	compound -> "named(Payson)" [label=ARG1]
	_certain_a_1 -> neg [label=ARG1]
}
