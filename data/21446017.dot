digraph {
	node [shape=circle style=filled]
	_far_a_1 -> "_involve_v_1-fn.NF" [label=ARG1]
	compound -> _tenant_n_1 [label=ARG1]
	compound -> _landlord_n_1 [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _question_n_about [label=BV]
	udef_q -> _tenant_n_1 [label=BV]
	udef_q -> _problem_n_of [label=BV]
	udef_q -> implicit_conj [label=BV]
	_most_q -> _call_n_1 [label=BV]
	compound -> "named(Cane)" [label=ARG1]
	comp_so -> _far_a_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "_involve_v_1-fn.NF" [label="ARG2-fn.NotExist"]
	udef_q -> _tax_n_1 [label=BV]
	compound -> _problem_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Cane)" [label="ARG1-fn.Agent"]
	compound -> "_probate/nn_u_unknown" [label=ARG2]
	"_involve_v_1-fn.NF" -> implicit_conj [label="ARG2-fn.NotExist"]
	udef_q -> _landlord_n_1 [label=BV]
	"_involve_v_1-fn.NF" -> _call_n_1 [label="ARG1-fn.NotExist"]
	compound -> _question_n_about [label=ARG1]
	proper_q -> "named(Cane)" [label=BV]
	udef_q -> _divorce_n_1 [label=BV]
	compound -> _tax_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	udef_q -> "_probate/nn_u_unknown" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
