digraph {
	node [shape=circle style=filled]
	_a_q -> _bid_n_1 [label=BV]
	compound -> _and_c [label=ARG1]
	compound -> "named(Stephen)" [label=ARG2]
	udef_q -> _broker_n_1 [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "named(Reitman)" [label="ARG1-fn.Process"]
	_full_a_of -> _bid_n_1 [label=ARG1]
	compound -> "named(UBS-)" [label=ARG2]
	udef_q -> _analyst_n_1 [label=BV]
	proper_q -> "named(Drew)" [label=BV]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	compound -> _broker_n_1 [label=ARG1]
	compound -> "named(London)" [label=ARG2]
	"_as+for_p" -> "named(GM)" [label=ARG2]
	compound -> _position_n_of [label=ARG1]
	proper_q -> "named(GM)" [label=BV]
	focus_d -> "_have_v_qmodal-fn.Amounting_to" [label=ARG1]
	refl_mod -> "_be_v_id-fn.Assemble" [label=ARG1]
	_european_a_1 -> _industry_n_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	compound -> "named(Phillips)" [label=ARG1]
	def_explicit_q -> _position_n_of [label=BV]
	"_be_v_id-fn.Assemble" -> _bid_n_1 [label="ARG2-fn.Group"]
	udef_q -> _automobile_n_1 [label=BV]
	compound -> _industry_n_1 [label=ARG1]
	udef_q -> "_fallback/nn_u_unknown" [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Phillips)" [label=BV]
	poss -> pron [label=ARG2]
	_at_p -> _analyst_n_1 [label=ARG1]
	appos -> "named(Reitman)" [label=ARG1]
	poss -> _position_n_of [label=ARG1]
	proper_q -> "named(Stephen)" [label=BV]
	_at_p -> _and_c [label=ARG2]
	proper_q -> "named(UBS-)" [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	compound -> _analyst_n_1 [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "_have_v_qmodal-fn.Amounting_to" [label="ARG2-fn.Means"]
	focus_d -> "_as+for_p" [label=ARG2]
	proper_q -> "named(Reitman)" [label=BV]
	compound -> "named(Reitman)" [label=ARG1]
	udef_q -> _industry_n_1 [label=BV]
	compound -> "_fallback/nn_u_unknown" [label=ARG2]
	proper_q -> "named(London)" [label=BV]
	compound -> _automobile_n_1 [label=ARG2]
	"_have_v_qmodal-fn.Amounting_to" -> "_be_v_id-fn.Assemble" [label="ARG1-fn.Value"]
	"_be_v_id-fn.Assemble" -> _position_n_of [label="ARG1-fn.Individuals"]
	refl_mod -> pron [label=ARG2]
	"_as+for_p" -> "_have_v_qmodal-fn.Amounting_to" [label=ARG1]
}
