digraph {
	node [shape=circle style=filled]
	udef_q -> _money_n_1 [label=BV]
	_if_x_then -> _then_c [label=ARG2]
	proper_q -> "named(Greenville)" [label=BV]
	compound -> "named(Greenville)" [label=ARG2]
	udef_q -> _recognition_n_1 [label=BV]
	_at_p -> _other_n_1 [label=ARG1]
	_for_p -> _money_n_1 [label=ARG2]
	_for_p -> _and_c [label=ARG2]
	proper_q -> "named(High)" [label=BV]
	udef_q -> _other_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> _other_n_1 [label="ARG1-fn.NotExist"]
	compound -> "named(High)" [label=ARG1]
	_at_p -> "named(High)" [label=ARG2]
	"_win_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _pride_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _eager_a_1 [label="ARG2-fn.NotExist"]
	_if_x_then -> "_win_v_1-fn.NF" [label=ARG1]
	udef_q -> _and_c [label=BV]
	_eager_a_1 -> pron [label=ARG1]
	neg -> _for_p [label=ARG1]
	_eager_a_1 -> _if_x_then [label=ARG2]
}
