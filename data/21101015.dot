digraph {
	node [shape=circle style=filled]
	poss -> _contention_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	_back_v_up -> pron [label=ARG1]
	_detailed_a_1 -> _account_n_of [label=ARG1]
	udef_q -> _terrorist_n_1 [label=BV]
	"_link_v_1-fn.Make_cognitive_connection" -> _to_p [label="ARG3-fn.NotExist"]
	_now_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Jerusalem)" [label="ARG1-fn.Agent"]
	_back_v_up -> _contention_n_1 [label=ARG2]
	_account_n_of -> _and_c [label=ARG1]
	parg_d -> _and_c [label=ARG2]
	udef_q -> _act_n_of [label=BV]
	compound -> "named(Arafat)" [label=ARG1]
	parg_d -> "_link_v_1-fn.Make_cognitive_connection" [label=ARG1]
	_with_p -> _account_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	def_explicit_q -> _contention_n_1 [label=BV]
	compound -> _terrorist_n_1 [label=ARG2]
	_to_p -> "named(Arafat)" [label=ARG2]
	udef_q -> _plan_n_1 [label=BV]
	compound -> _and_c [label=ARG1]
	udef_q -> _account_n_of [label=BV]
	_with_p -> _back_v_up [label=ARG1]
	_alleged_a_1 -> _and_c [label=ARG1]
	proper_q -> "named(Arafat)" [label=BV]
	"_say_v_to-fn.IN" -> _back_v_up [label="ARG2-fn.Topic"]
	udef_q -> _and_c [label=BV]
	"_link_v_1-fn.Make_cognitive_connection" -> _and_c [label="ARG2-fn.Patient"]
	_to_p -> _and_c [label=ARG1]
	proper_q -> "named(Jerusalem)" [label=BV]
}
