digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _software_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_license_v_to-fn.NF" [label="ARG2-fn.Topic"]
	poss -> pron [label=ARG2]
	compound -> "named(Transport)" [label=ARG1]
	compound -> "named(Control)" [label=ARG2]
	proper_q -> "named(Air)" [label=BV]
	"_license_v_to-fn.NF" -> _software_n_1 [label="ARG2-fn.Theme"]
	compound -> _corporation_n_1 [label=ARG2]
	proper_q -> "named(Control)" [label=BV]
	udef_q -> _management_n_1 [label=BV]
	proper_q -> "named(Transport)" [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _software_n_1 [label=ARG1]
	udef_q -> _corporation_n_1 [label=BV]
	proper_q -> "named(Data)" [label=BV]
	compound -> "named(Air)" [label=ARG1]
	compound -> "named(Data)" [label=ARG1]
	compound -> "named(International)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Data)" [label="ARG1-fn.Agent"]
	_the_q -> "named(Association)" [label=BV]
	udef_q -> _airline_n_1 [label=BV]
	"_license_v_to-fn.NF" -> "named(Association)" [label="ARG3-fn.NotExist"]
	compound -> "named(Association)" [label=ARG1]
	udef_q -> _yield_n_1 [label=BV]
	compound -> _software_n_1 [label=ARG1]
	compound -> _yield_n_1 [label=ARG2]
	"_license_v_to-fn.NF" -> pron [label="ARG1-fn.Agent"]
	compound -> _management_n_1 [label=ARG1]
	compound -> _airline_n_1 [label=ARG2]
	proper_q -> "named(International)" [label=BV]
}
