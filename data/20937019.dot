digraph {
	node [shape=circle style=filled]
	comp_equal -> _well_a_2 [label=ARG1]
	udef_q -> part_of [label=BV]
	compound -> "named(Reagan)" [label=ARG1]
	compound -> _president_n_of [label=ARG2]
	poss -> pron [label=ARG2]
	_always_a_1 -> _do_v_1 [label=ARG1]
	_put_v_adv -> part_of [label=ARG1]
	subord -> _well_a_2 [label=ARG2]
	_would_v_modal -> subord [label=ARG1]
	_before_p -> "_election_n_of-for" [label=ARG2]
	pronoun_q -> pron [label=BV]
	_before_p -> _do_v_1 [label=ARG1]
	_do_v_1 -> pron [label=ARG1]
	def_explicit_q -> "_election_n_of-for" [label=BV]
	_as_x_subord -> _and_c [label=ARG1]
	udef_q -> _president_n_of [label=BV]
	_as_x_subord -> _put_v_adv [label=ARG2]
	free_relative_q -> thing [label=BV]
	_put_v_adv -> pron [label=ARG2]
	part_of -> _defender_n_of [label=ARG1]
	_thereafter_p -> "_say_v_1-fn.IN" [label=ARG1]
	subord -> "_say_v_1-fn.IN" [label=ARG1]
	_some_q -> generic_entity [label=BV]
	"card(1)" -> part_of [label=ARG1]
	poss -> "_election_n_of-for" [label=ARG1]
	proper_q -> "named(Reagan)" [label=BV]
	comp_so -> _apt_a_1 [label=ARG1]
	_simple_a_1 -> _do_v_1 [label=ARG1]
	_apt_a_1 -> _put_v_adv [label=ARG1]
	poss -> _defender_n_of [label=ARG1]
	_do_v_1 -> thing [label=ARG2]
	"_say_v_1-fn.IN" -> generic_entity [label="ARG1-fn.Agent"]
	_do_v_1 -> "named(Reagan)" [label=ARG1]
	def_explicit_q -> _defender_n_of [label=BV]
}
