digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	_be_v_id -> _award_n_for [label=ARG1]
	_powerful_a_1 -> _computer_n_1 [label=ARG1]
	udef_q -> _evidence_n_of [label=BV]
	poss -> "named(Graphics)" [label=ARG2]
	udef_q -> _graphic_n_1 [label=BV]
	udef_q -> _user_n_of [label=BV]
	udef_q -> _computer_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	compound -> _graphic_n_1 [label=ARG1]
	_approach_n_to -> _graphic_n_1 [label=ARG1]
	compound -> "named(Graphics)" [label=ARG1]
	_with_p -> _catch_v_on [label=ARG1]
	_evidence_n_of -> _catch_v_on [label=ARG1]
	compound -> "named(Silicon)" [label=ARG2]
	compound -> _desktop_n_1 [label=ARG2]
	compound -> _computer_n_1 [label=ARG1]
	proper_q -> "named(Graphics)" [label=BV]
	_with_p -> _user_n_of [label=ARG2]
	def_explicit_q -> _approach_n_to [label=BV]
	_be_v_id -> _evidence_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _analyst_n_1 [label="ARG1-fn.Agent"]
	_user_n_of -> _computer_n_1 [label=ARG1]
	_the_q -> _award_n_for [label=BV]
	proper_q -> "named(Silicon)" [label=BV]
	udef_q -> _analyst_n_1 [label=BV]
	poss -> _approach_n_to [label=ARG1]
	_catch_v_on -> _approach_n_to [label=ARG1]
	udef_q -> _desktop_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
