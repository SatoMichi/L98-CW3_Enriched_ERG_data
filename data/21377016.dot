digraph {
	node [shape=circle style=filled]
	udef_q -> _quality_n_1 [label=BV]
	udef_q -> _parent_n_of [label=BV]
	"_say_v_to-fn.IN" -> _important_a_for [label="ARG2-fn.Topic"]
	compound -> _image_n_of [label=ARG1]
	comp_equal -> _distinctive_a_1 [label=ARG1]
	poss -> _image_n_of [label=ARG1]
	compound -> _quality_n_1 [label=ARG2]
	_possible_a_for -> ellipsis [label=ARG1]
	_important_a_for -> _while_x [label=ARG1]
	udef_q -> _link_n_1 [label=BV]
	_while_x -> _retain_v_1 [label=ARG2]
	compound -> _parent_n_of [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	_to_p -> _link_n_1 [label=ARG1]
	compound -> _company_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_a_q -> _make_n_of [label=BV]
	comp_equal -> _possible_a_for [label=ARG2]
	_retain_v_1 -> _link_n_1 [label=ARG2]
	_new_a_1 -> _make_n_of [label=ARG1]
	_while_x -> _distinctive_a_1 [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	poss -> _company_n_of [label=ARG2]
	_to_p -> _image_n_of [label=ARG2]
	def_explicit_q -> _image_n_of [label=BV]
	_still_a_1 -> _retain_v_1 [label=ARG1]
	_distinctive_a_1 -> _make_n_of [label=ARG1]
}
