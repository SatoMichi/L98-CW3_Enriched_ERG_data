digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Bay)" [label=BV]
	"_base_v_1-fn.Competition" -> _in_p [label="ARG3-fn.Participants"]
	_nearby_a_1 -> "named(California)" [label=ARG1]
	parg_d -> _refinery_n_1 [label=ARG2]
	_a_q -> _pipeline_n_1 [label=BV]
	"_add_v_to-fn.Cause_to_end" -> "_damage_v_1-fn.Competition" [label="ARG2-fn.Means"]
	compound -> "named(Bay)" [label=ARG2]
	_in_p -> _refinery_n_1 [label=ARG1]
	udef_q -> _oil_n_1 [label=BV]
	_the_q -> _area_n_of [label=BV]
	parg_d -> "_damage_v_1-fn.Competition" [label=ARG1]
	_in_p -> _company_n_of [label=ARG1]
	_in_p -> "named(Francisco)" [label=ARG2]
	_in_p -> _pipeline_n_1 [label=ARG1]
	udef_q -> _crude_n_1 [label=BV]
	def_explicit_q -> _refinery_n_1 [label=BV]
	parg_d -> _company_n_of [label=ARG2]
	"_have_v_qmodal-fn.Amounting_to" -> "_in+order+to_x" [label="ARG1-fn.Value"]
	proper_q -> "named(Richmond)" [label=BV]
	compound -> _oil_n_1 [label=ARG1]
	_in_p -> _area_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	compound -> _area_n_of [label=ARG1]
	"_shut_v_down-fn.Perception_active" -> _pipeline_n_1 [label="ARG2-fn.Phenomenon"]
	poss -> pron [label=ARG2]
	"_base_v_1-fn.Competition" -> _company_n_of [label="ARG2-fn.Participant_2"]
	compound -> "named(Richmond)" [label=ARG2]
	"_shut_v_down-fn.Perception_active" -> pron [label="ARG1-fn.Perceiver_agentive"]
	"_damage_v_1-fn.Competition" -> _refinery_n_1 [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> "_have_v_qmodal-fn.Amounting_to" [label="ARG2-fn.Means"]
	"_add_v_to-fn.Cause_to_end" -> _company_n_of [label="ARG1-fn.Process"]
	"_in+order+to_x" -> "_shut_v_down-fn.Perception_active" [label=ARG1]
	"_in+order+to_x" -> "_check_v_1-fn.Competition" [label=ARG2]
	poss -> _refinery_n_1 [label=ARG1]
	_for_p -> _leak_n_1 [label=ARG2]
	compound -> "named(Francisco)" [label=ARG1]
	"_un-_a_rvrs" -> "_damage_v_1-fn.Competition" [label=ARG1]
	compound -> "named(San)" [label=ARG2]
	compound -> "named(California)" [label=ARG1]
	"_check_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	compound -> _crude_n_1 [label=ARG2]
	compound -> _pipeline_n_1 [label=ARG1]
	proper_q -> "named(California)" [label=BV]
	"_say_v_to-fn.Cause_to_end" -> _company_n_of [label="ARG1-fn.Process"]
	proper_q -> "named(San)" [label=BV]
	proper_q -> "named(Francisco)" [label=BV]
	_for_p -> "_check_v_1-fn.Competition" [label=ARG1]
	_in_p -> "named(California)" [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	udef_q -> _leak_n_1 [label=BV]
	parg_d -> "_base_v_1-fn.Competition" [label=ARG1]
}
