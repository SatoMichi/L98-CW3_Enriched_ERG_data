digraph {
	node [shape=circle style=filled]
	parg_d -> "_reflect_v_1-fn.Competition" [label=ARG1]
	compound -> "named(G)" [label=ARG2]
	compound -> _company_n_1 [label=ARG2]
	"_say_v_to-fn.Taking" -> _and_c [label="ARG2-fn.Theme"]
	udef_q -> _company_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	poss -> _operation_n_of [label=ARG1]
	"_say_v_to-fn.Taking" -> _company_n_of [label="ARG1-fn.Agent"]
	_of_p -> _operation_n_of [label=ARG2]
	compound -> _operation_n_of [label=ARG1]
	proper_q -> "named(Heileman)" [label=BV]
	_the_q -> _performance_n_1 [label=BV]
	"_reflect_v_1-fn.Competition" -> generic_entity [label="ARG2-fn.Participant_2"]
	compound -> nominalization [label=ARG2]
	_in_p -> _result_n_of [label=ARG2]
	nominalization -> _brew_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_this_q_dem -> generic_entity [label=BV]
	proper_q -> "named(Brewing)" [label=BV]
	_the_q -> _result_n_of [label=BV]
	compound -> "named(Heileman)" [label=ARG1]
	_financial_a_1 -> _performance_n_1 [label=ARG1]
	_disappointing_a_for -> _performance_n_1 [label=ARG1]
	_in_p -> "_reflect_v_1-fn.Competition" [label=ARG1]
	appos -> _operation_n_of [label=ARG1]
	_general_a_1 -> _performance_n_1 [label=ARG1]
	def_explicit_q -> _operation_n_of [label=BV]
	_of_p -> _performance_n_1 [label=ARG1]
	proper_q -> "named(G)" [label=BV]
	appos -> "named(Brewing)" [label=ARG2]
	compound -> "named_n(US)" [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	udef_q -> "named_n(US)" [label=BV]
	compound -> "named(Brewing)" [label=ARG1]
	parg_d -> generic_entity [label=ARG2]
}
