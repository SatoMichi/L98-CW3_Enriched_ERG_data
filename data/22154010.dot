digraph {
	node [shape=circle style=filled]
	_a_q -> _attorney_n_1 [label=BV]
	_a_q -> _prediction_n_of [label=BV]
	udef_q -> _inc_n_1 [label=BV]
	part_of -> _time_n_of [label=ARG1]
	_by_p -> _lot_n_1 [label=ARG2]
	_all_q -> part_of [label=BV]
	"_bet_v_on-fn.NF" -> pron [label="ARG1-fn.Agent"]
	"_hire_v_1-fn.Hiring" -> _attorney_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(Eugene)" [label=ARG2]
	loc_nonsp -> _attorney_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _colon_p_namely [label="ARG2-fn.Topic"]
	loc_nonsp -> part_of [label=ARG2]
	_willing_a_1 -> "_bet_v_on-fn.NF" [label=ARG2]
	proper_q -> "named(Glazer)" [label=BV]
	_at_p -> "named(Reynolds)" [label=ARG2]
	appos -> "named(Glazer)" [label=ARG1]
	proper_q -> "named(Reynolds)" [label=BV]
	compound -> "named(Dean)" [label=ARG2]
	_if_x_then -> "_hire_v_1-fn.Hiring" [label=ARG2]
	def_implicit_q -> place_n [label=BV]
	"_give_v_1-fn.Giving" -> _prediction_n_of [label="ARG2-fn.Theme"]
	"_give_v_1-fn.Giving" -> pron [label="ARG3-fn.Recipient"]
	loc_nonsp -> place_n [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Glazer)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Eugene)" [label=BV]
	_prediction_n_of -> _award_n_for [label=ARG1]
	compound -> "named(Witter)" [label=ARG1]
	_at_p -> _analyst_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	"_hire_v_1-fn.Hiring" -> pron [label="ARG1-fn.Agent"]
	_the_q -> _time_n_of [label=BV]
	"_bet_v_on-fn.NF" -> _would_v_modal [label="ARG4-fn.NotExist"]
	_would_v_modal -> _off_p [label=ARG1]
	compound -> "named(Reynolds)" [label=ARG1]
	_willing_a_1 -> pron [label=ARG1]
	proper_q -> "named(Witter)" [label=BV]
	_eventual_a_1 -> _award_n_for [label=ARG1]
	"_give_v_1-fn.Giving" -> _attorney_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(Glazer)" [label=ARG1]
	_the_q -> _award_n_for [label=BV]
	_a_q -> _lot_n_1 [label=BV]
	_if_x_then -> _would_v_modal [label=ARG1]
	_a_q -> _analyst_n_1 [label=BV]
	_by_p -> _off_p [label=ARG1]
	_would_v_modal -> _willing_a_1 [label=ARG1]
	eventuality -> _and_c [label=ARG1]
	_off_p -> pron [label=ARG1]
	_colon_p_namely -> _if_x_then [label=ARG1]
	compound -> _inc_n_1 [label=ARG2]
	_there_a_1 -> place_n [label=ARG1]
	proper_q -> "named(Dean)" [label=BV]
}
