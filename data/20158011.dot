digraph {
	node [shape=circle style=filled]
	_the_q -> _departure_n_1 [label=BV]
	_in_p -> _and_c [label=ARG1]
	_in_p -> "named(London)" [label=ARG2]
	compound -> "named(Mark)" [label=ARG2]
	proper_q -> "named(Drew)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_suspect_v_of-fn.Avoiding" [label="ARG2-fn.Requirement"]
	proper_q -> "named(UBS)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Shepperd)" [label="ARG1-fn.Dependent"]
	udef_q -> _and_c [label=BV]
	compound -> "named(Phillips)" [label=ARG1]
	proper_q -> "named(Shepperd)" [label=BV]
	_a_q -> _analyst_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Phillips)" [label=BV]
	_at_p -> _and_c [label=ARG2]
	_at_p -> _analyst_n_1 [label=ARG1]
	_irrelevant_a_1 -> _departure_n_1 [label=ARG1]
	appos -> _analyst_n_1 [label=ARG2]
	"_suspect_v_of-fn.Avoiding" -> _irrelevant_a_1 [label="ARG2-fn.Place"]
	_for_p -> _irrelevant_a_1 [label=ARG1]
	compound -> "named(Shepperd)" [label=ARG1]
	proper_q -> "named(Mark)" [label=BV]
	_for_p -> _company_n_of [label=ARG2]
	proper_q -> "named(London)" [label=BV]
	compound -> "named(UBS)" [label=ARG2]
	appos -> "named(Shepperd)" [label=ARG1]
	_the_q -> _company_n_of [label=BV]
	"_suspect_v_of-fn.Avoiding" -> pron [label="ARG1-fn.Agent"]
	_fair_a_1 -> _irrelevant_a_1 [label=ARG1]
}
