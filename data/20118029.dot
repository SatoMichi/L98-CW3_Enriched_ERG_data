digraph {
	node [shape=circle style=filled]
	_if_x_then -> neg [label=ARG2]
	udef_q -> nominalization [label=BV]
	"_head_v_1-fn.Undergo_change" -> _exchange_n_1 [label="ARG2-fn.Final_category"]
	_real_a_1 -> _crisis_n_1 [label=ARG1]
	parg_d -> _exchange_n_1 [label=ARG2]
	udef_q -> _program_n_of [label=BV]
	_a_q -> _crisis_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> _program_n_of [label=ARG2]
	compound -> nominalization [label=ARG1]
	_for_p -> "_head_v_1-fn.Undergo_change" [label=ARG1]
	parg_d -> "_head_v_1-fn.Undergo_change" [label=ARG1]
	_if_x_then -> "_head_v_1-fn.Undergo_change" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	_for_p -> _crisis_n_1 [label=ARG2]
	neg -> "_curb_v_1-fn.Rite" [label=ARG1]
	"_curb_v_1-fn.Rite" -> nominalization [label="ARG2-fn.Member"]
	parg_d -> "_curb_v_1-fn.Rite" [label=ARG1]
	_the_q -> _exchange_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _if_x_then [label="ARG2-fn.Requirement"]
	nominalization -> _trade_v_1 [label=ARG1]
	parg_d -> nominalization [label=ARG2]
}
