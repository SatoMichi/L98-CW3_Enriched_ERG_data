digraph {
	node [shape=circle style=filled]
	_early_a_1 -> time_n [label=ARG1]
	loc_nonsp -> _dollar_n_1 [label=ARG1]
	_a_q -> _dollar_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Holiday)" [label="ARG1-fn.Dependent"]
	loc_nonsp -> "_increase_v_1-fn.Achieving_first" [label=ARG1]
	udef_q -> _income_n_1 [label=BV]
	loc_nonsp -> _year_n_1 [label=ARG1]
	_from_p -> _dollar_n_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	nominalization -> _operate_v_1 [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	comp -> _early_a_1 [label=ARG1]
	_to_p -> _dollar_n_1 [label=ARG2]
	proper_q -> "named(Holiday)" [label=BV]
	_a_q -> _year_n_1 [label=BV]
	nominalization -> _game_v_1 [label=ARG1]
	times -> "card(58.8)" [label=ARG2]
	compound -> nominalization [label=ARG2]
	compound -> _income_n_1 [label=ARG1]
	parg_d -> "_relate_v_to-fn.Cause_to_end" [label=ARG1]
	_record_a_1 -> _dollar_n_1 [label=ARG1]
	udef_q -> _percent_n_of [label=BV]
	parg_d -> _income_n_1 [label=ARG2]
	udef_q -> _dollar_n_1 [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	_from_p -> "_increase_v_1-fn.Achieving_first" [label=ARG1]
	"_relate_v_to-fn.Cause_to_end" -> _income_n_1 [label="ARG2-fn.Means"]
	_to_p -> "_increase_v_1-fn.Achieving_first" [label=ARG1]
	def_explicit_q -> time_n [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_increase_v_1-fn.Achieving_first" [label="ARG2-fn.Requirement"]
	"_increase_v_1-fn.Achieving_first" -> _income_n_1 [label="ARG1-fn.Cognizer"]
	loc_nonsp -> time_n [label=ARG2]
	"card(4.5)" -> _percent_n_of [label=ARG1]
	times -> "card(61.4)" [label=ARG2]
	"_relate_v_to-fn.Cause_to_end" -> nominalization [label="ARG3-fn.Place"]
	loc_nonsp -> _percent_n_of [label=ARG2]
}
