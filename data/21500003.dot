digraph {
	node [shape=circle style=filled]
	_in_p -> "_announce_v_to-fn.Statement" [label=ARG1]
	udef_q -> "named_n(House)" [label=BV]
	poss -> pron [label=ARG2]
	parg_d -> _support_n_of [label=ARG2]
	_any_q -> _measure_n_1 [label=BV]
	compound -> "_policy_n_of-on" [label=ARG2]
	_erode_v_cause -> _failure_n_1 [label=ARG1]
	poss -> _speech_n_1 [label=ARG1]
	proper_q -> "named(Mansion)" [label=BV]
	def_explicit_q -> _failure_n_1 [label=BV]
	compound -> "named_n(House)" [label=ARG1]
	_last_a_1 -> "dofw(Thu)" [label=ARG1]
	udef_q -> "_policy_n_of-on" [label=BV]
	"_announce_v_to-fn.Statement" -> _measure_n_1 [label="ARG2-fn.Topic"]
	_for_p -> _support_n_of [label=ARG1]
	_erode_v_cause -> _support_n_of [label=ARG2]
	_for_p -> _sterling_n_1 [label=ARG2]
	compound -> _measure_n_1 [label=ARG1]
	loc_nonsp -> "_announce_v_to-fn.Statement" [label=ARG1]
	pronoun_q -> pron [label=BV]
	def_implicit_q -> "dofw(Thu)" [label=BV]
	parg_d -> _erode_v_cause [label=ARG1]
	compound -> "named(Mansion)" [label=ARG2]
	udef_q -> _sterling_n_1 [label=BV]
	_the_q -> _chancellor_n_of [label=BV]
	loc_nonsp -> "dofw(Thu)" [label=ARG2]
	"_reckon_v_1-fn.Awareness" -> _analyst_n_1 [label="ARG1-fn.NotExist"]
	"_reckon_v_1-fn.Awareness" -> _erode_v_cause [label="ARG2-fn.NotExist"]
	def_explicit_q -> _speech_n_1 [label=BV]
	udef_q -> _support_n_of [label=BV]
	_in_p -> _speech_n_1 [label=ARG2]
	poss -> _chancellor_n_of [label=ARG2]
	_new_a_1 -> _measure_n_1 [label=ARG1]
	poss -> _failure_n_1 [label=ARG1]
	udef_q -> _analyst_n_1 [label=BV]
	compound -> _speech_n_1 [label=ARG1]
	_failure_n_1 -> "_announce_v_to-fn.Statement" [label=ARG1]
	_underlie_v_1 -> _support_n_of [label=ARG1]
}
