digraph {
	node [shape=circle style=filled]
	_enough_q -> generic_entity [label=BV]
	_if_x_then -> "_want_v_1-fn.Desiring" [label=ARG2]
	focus_d -> loc_nonsp [label=ARG2]
	_have_v_qmodal -> "_take_v_1-fn.Taking" [label=ARG1]
	poss -> generic_entity [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	"_know_v_1-fn.IN" -> _be_v_id [label="ARG2-fn.Theme"]
	"_out+of_p" -> "_want_v_1-fn.Desiring" [label=ARG1]
	every_q -> thing [label=BV]
	def_explicit_q -> generic_entity [label=BV]
	"_know_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _pound_n_cur [label=BV]
	"_want_v_1-fn.Desiring" -> generic_entity [label="ARG1-fn.Pivot"]
	_get_v_1 -> pron [label=ARG1]
	_be_v_id -> pron [label=ARG1]
	focus_d -> _and_c [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_then_p_temp -> time_n [label=ARG1]
	_be_v_id -> generic_entity [label=ARG2]
	"_want_v_1-fn.Desiring" -> _pound_n_cur [label="ARG2-fn.Theme"]
	proper_q -> "named(Lloyd)" [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> "named(Lloyd)" [label=ARG2]
	neg -> "_know_v_1-fn.IN" [label=ARG1]
	"_take_v_1-fn.Taking" -> pron [label="ARG1-fn.Agent"]
	focus_d -> "_know_v_1-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	loc_nonsp -> "_know_v_1-fn.IN" [label=ARG1]
	"_take_v_1-fn.Taking" -> thing [label="ARG2-fn.Theme"]
	_get_v_1 -> thing [label=ARG2]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_out+of_p" -> pron [label=ARG2]
	"card(70,000)" -> _pound_n_cur [label=ARG1]
	_if_x_then -> _have_v_qmodal [label=ARG1]
}
