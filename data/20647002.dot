digraph {
	node [shape=circle style=filled]
	_the_q -> _or_c [label=BV]
	with_p -> _fund_n_1 [label=ARG2]
	_for_p -> _payment_n_of [label=ARG2]
	neg -> "_have_v_1-fn.IN" [label=ARG1]
	_pay_v_for -> _dividend_n_1 [label=ARG2]
	"_require_v_of-fn.NF" -> _or_c [label="ARG2-fn.Theme"]
	_the_q -> _dividend_n_1 [label=BV]
	"_have_v_1-fn.IN" -> _fund_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _law_n_1 [label=BV]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_the_q -> _fund_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	udef_q -> _payment_n_of [label=BV]
	parg_d -> _or_c [label=ARG2]
	proper_q -> "named(NBI)" [label=BV]
	pronoun_q -> pron [label=BV]
	_under_p -> "_require_v_of-fn.NF" [label=ARG1]
	_payment_n_of -> _dividend_n_1 [label=ARG1]
	with_p -> _pay_v_for [label=ARG1]
	_for_p -> _or_c [label=ARG1]
	udef_q -> _surplus_n_of [label=BV]
	parg_d -> "_require_v_of-fn.NF" [label=ARG1]
	"_have_v_1-fn.IN" -> _or_c [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(NBI)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Delaware)" [label=BV]
	udef_q -> _profit_n_1 [label=BV]
	compound -> _law_n_1 [label=ARG1]
	_under_p -> _law_n_1 [label=ARG2]
	compound -> "named(Delaware)" [label=ARG2]
}
