digraph {
	node [shape=circle style=filled]
	"_help_v_to-fn.Amounting_to" -> "_destroy_v_1-fn.Competition" [label="ARG3-fn.Time_span"]
	"_destroy_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Maria)" [label=BV]
	_old_a_1 -> _system_n_of [label=ARG1]
	_of_p -> _expert_n_1 [label=ARG2]
	_the_q -> _line_n_of [label=BV]
	"_lay_v_1-fn.Expectation" -> "named(Stolzman)" [label="ARG1-fn.Cognizer"]
	compound -> _farm_n_1 [label=ARG2]
	"_in+order+to_x" -> "_bring_v_in-fn.Residence" [label=ARG1]
	compound -> _expert_n_1 [label=ARG1]
	"_in+order+to_x" -> "_help_v_to-fn.Amounting_to" [label=ARG2]
	udef_q -> _farm_n_1 [label=BV]
	compound -> "named(Bank)" [label=ARG1]
	_colon_p_namely -> "_lay_v_1-fn.Expectation" [label=ARG1]
	_the_q -> _system_n_of [label=BV]
	"_lay_v_1-fn.Expectation" -> pron [label="ARG2-fn.Phenomenon"]
	"_destroy_v_1-fn.Competition" -> _system_n_of [label="ARG2-fn.Participant_2"]
	_on_p -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	_on_p -> _line_n_of [label=ARG2]
	poss -> pron [label=ARG2]
	_of_p -> _one_n_1 [label=ARG1]
	pronoun_q -> _one_n_1 [label=BV]
	_the_q -> "named(Bank)" [label=BV]
	compound -> "named(Maria)" [label=ARG2]
	poss -> _expert_n_1 [label=ARG1]
	appos -> "named(Stolzman)" [label=ARG1]
	compound -> "named(Stolzman)" [label=ARG1]
	"_lay_v_1-fn.Expectation" -> _on_p [label="ARG3-fn.Degree"]
	def_explicit_q -> _expert_n_1 [label=BV]
	"_help_v_to-fn.Amounting_to" -> pron [label="ARG2-fn.Attribute"]
	parg_d -> "_bring_v_in-fn.Residence" [label=ARG1]
	"_help_v_to-fn.Amounting_to" -> "named(Bank)" [label="ARG1-fn.Value"]
	proper_q -> "named(World)" [label=BV]
	appos -> _one_n_1 [label=ARG2]
	proper_q -> "named(Stolzman)" [label=BV]
	parg_d -> "named(Bank)" [label=ARG2]
	"_bring_v_in-fn.Residence" -> "named(Bank)" [label="ARG2-fn.Location"]
	compound -> "named(World)" [label=ARG2]
}
