digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _client_n_1 [label=BV]
	poss -> pron [label=ARG2]
	udef_q -> _executive_n_1 [label=BV]
	proper_q -> "named(Alan)" [label=BV]
	compound -> "named(Bear)" [label=ARG2]
	compound -> _executive_n_1 [label=ARG1]
	compound -> "named(Stearns)" [label=ARG1]
	id -> _executive_n_1 [label=ARG2]
	proper_q -> "named(Greenberg)" [label=BV]
	udef_q -> _index_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Greenberg)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "_continue_v_2-fn.Activity_ongoing" [label="ARG2-fn.Topic"]
	udef_q -> _chairman_n_of [label=BV]
	_meanwhile_p -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _chief_n_1 [label=ARG2]
	compound -> _stock_n_1 [label=ARG2]
	compound -> _index_n_1 [label=ARG1]
	proper_q -> "named(Bear)" [label=BV]
	proper_q -> "named(Stearns)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_continue_v_2-fn.Activity_ongoing" -> "_arbitrage/nn_u_unknown" [label="ARG2-fn.NotExist"]
	udef_q -> _stock_n_1 [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	focus_d -> _meanwhile_p [label=ARG2]
	udef_q -> "_arbitrage/nn_u_unknown" [label=BV]
	compound -> "named(Alan)" [label=ARG2]
	def_explicit_q -> _firm_n_1 [label=BV]
	compound -> "_arbitrage/nn_u_unknown" [label=ARG1]
	compound -> _and_c [label=ARG1]
	compound -> "named(C)" [label=ARG1]
	_for_p -> "_arbitrage/nn_u_unknown" [label=ARG1]
	poss -> _firm_n_1 [label=ARG1]
	compound -> "named(Greenberg)" [label=ARG1]
	"_continue_v_2-fn.Activity_ongoing" -> _firm_n_1 [label="ARG1-fn.NotExist"]
	proper_q -> "named(C)" [label=BV]
	_for_p -> _client_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	id -> _chairman_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	poss -> _client_n_1 [label=ARG1]
}
