digraph {
	node [shape=circle style=filled]
	_for_p -> _profitable_a_for [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_would_v_modal-fn.Cause_to_end" -> _profitable_a_for [label="ARG1-fn.Process"]
	_same_a_as -> generic_entity [label=ARG1]
	udef_q -> part_of [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_bring_v_1-fn.Competition" -> part_of [label="ARG2-fn.Participant_2"]
	compound -> "named(Hutchinson)" [label=ARG1]
	"_predict_v_1-fn.Competition" -> "named(Hutchinson)" [label="ARG1-fn.Participant_1"]
	_for_p -> "named(Westmoreland)" [label=ARG2]
	comp -> "much-many_a" [label=ARG1]
	"_bring_v_1-fn.Competition" -> "yofc(1990)" [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Hutchinson)" [label=BV]
	"much-many_a" -> part_of [label=ARG1]
	_nevertheless_a_1 -> "_predict_v_1-fn.Competition" [label=ARG1]
	_the_q -> generic_entity [label=BV]
	proper_q -> "yofc(1989)" [label=BV]
	proper_q -> "yofc(1990)" [label=BV]
	"_predict_v_1-fn.Competition" -> _and_c [label="ARG2-fn.Participant_2"]
	_profitable_a_for -> "yofc(1989)" [label=ARG1]
	proper_q -> "named(Westmoreland)" [label=BV]
	part_of -> generic_entity [label=ARG1]
	_solid_a_1 -> _profitable_a_for [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	"_would_v_modal-fn.Cause_to_end" -> "_bring_v_1-fn.Competition" [label="ARG1-fn.Process"]
}
