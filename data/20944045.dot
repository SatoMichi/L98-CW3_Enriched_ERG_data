digraph {
	node [shape=circle style=filled]
	_have_v_qmodal -> "_prove_v_to-fn.Reasoning" [label=ARG1]
	_ascribe_v_to -> pron [label=ARG3]
	_a_q -> _figure_n_1 [label=BV]
	parg_d -> _quotation_n_of [label=ARG2]
	proper_q -> "named(Malcolm)" [label=BV]
	udef_q -> _malice_n_1 [label=BV]
	_ascribe_v_to -> "named(Malcolm)" [label=ARG1]
	udef_q -> _proof_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_prove_v_to-fn.Reasoning" -> "named(Masson)" [label="ARG1-fn.NotExist"]
	focus_d -> _as_p [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_proof_n_of -> _malice_n_1 [label=ARG1]
	"_in+fact_a_1" -> _fabricate_v_1 [label=ARG1]
	compound -> _ms_n_1 [label=ARG2]
	"_contend_v_1-fn.Statement" -> _fabricate_v_1 [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	udef_q -> _ms_n_1 [label=BV]
	focus_d -> _have_v_qmodal [label=ARG1]
	proper_q -> "named(Masson)" [label=BV]
	_as_p -> _proof_n_of [label=ARG2]
	_public_a_1 -> _figure_n_1 [label=ARG1]
	_as_p -> _have_v_qmodal [label=ARG1]
	_as_p -> "_contend_v_1-fn.Statement" [label=ARG1]
	_fabricate_v_1 -> _quotation_n_of [label=ARG2]
	"_contend_v_1-fn.Statement" -> "named(Masson)" [label="ARG1-fn.Agent"]
	"_prove_v_to-fn.Reasoning" -> _malice_n_1 [label="ARG2-fn.NotExist"]
	compound -> "named(Malcolm)" [label=ARG1]
	parg_d -> _fabricate_v_1 [label=ARG1]
	udef_q -> _quotation_n_of [label=BV]
	compound -> "named(Masson)" [label=ARG1]
	parg_d -> _ascribe_v_to [label=ARG1]
	_as_p -> _figure_n_1 [label=ARG2]
	_ascribe_v_to -> _quotation_n_of [label=ARG2]
	"_defamatory/jj_u_unknown" -> _quotation_n_of [label=ARG1]
	focus_d -> "_contend_v_1-fn.Statement" [label=ARG1]
}
