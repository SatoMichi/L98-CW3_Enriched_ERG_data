digraph {
	node [shape=circle style=filled]
	compound -> "named(Joseph)" [label=ARG2]
	proper_q -> "named(Slote)" [label=BV]
	proper_q -> "named(Arps)" [label=BV]
	_in_p -> _firm_n_1 [label=ARG1]
	"_make_v_cause-fn.Cause_to_end" -> _case_n_of [label="ARG1-fn.Process"]
	proper_q -> "named(Flom)" [label=BV]
	proper_q -> "named(Meagher)" [label=BV]
	_of_p -> implicit_conj [label=ARG2]
	udef_q -> _case_n_of [label=BV]
	"_lead_v_1-fn.Assemble" -> _firm_n_1 [label="ARG1-fn.Individuals"]
	proper_q -> "named(Skadden)" [label=BV]
	compound -> _merger_n_1 [label=ARG2]
	compound -> "named(Flom)" [label=ARG1]
	proper_q -> "named(Joseph)" [label=BV]
	udef_q -> _and_c [label=BV]
	compound -> _case_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_make_v_cause-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	udef_q -> _takeover_n_of [label=BV]
	_respectable_a_1 -> _takeover_n_of [label=ARG1]
	"_become_v_id-fn.Cause_to_end" -> implicit_conj [label="ARG1-fn.Process"]
	"_make_v_cause-fn.Cause_to_end" -> _respectable_a_1 [label="ARG2-fn.Means"]
	"_say_v_to-fn.Have_as_requirement" -> "named(Flom)" [label="ARG1-fn.Dependent"]
	_a_q -> _firm_n_1 [label=BV]
	_in_p -> _case_n_of [label=ARG2]
	_legal_a_1 -> _firm_n_1 [label=ARG1]
	_of_p -> "named(Flom)" [label=ARG1]
	udef_q -> _merger_n_1 [label=BV]
	_the_q -> _case_n_of [label=BV]
	udef_q -> implicit_conj [label=BV]
	"_become_v_id-fn.Cause_to_end" -> _firm_n_1 [label="ARG2-fn.Means"]
}
