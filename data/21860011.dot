digraph {
	node [shape=circle style=filled]
	focus_d -> "_obligate_v_1-fn.State_continue" [label=ARG2]
	"_obligate_v_1-fn.State_continue" -> pron [label="ARG2-fn.State"]
	focus_d -> "_assert_v_to-fn.Receiving" [label=ARG1]
	"_talk_v_about-fn.Needing" -> pron [label="ARG1-fn.Cognizer"]
	_any_q -> person [label=BV]
	parg_d -> pron [label=ARG2]
	loc_nonsp -> "_assert_v_to-fn.Receiving" [label=ARG1]
	_to_p -> person [label=ARG2]
	_to_p -> "_talk_v_about-fn.Needing" [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_assert_v_to-fn.Receiving" -> _chairman_n_of [label="ARG1-fn.Recipient"]
	"_obligate_v_1-fn.State_continue" -> _and_c [label="ARG3-fn.Time"]
	pronoun_q -> pron [label=BV]
	compound -> "named(Jaguar)" [label=ARG2]
	parg_d -> "_obligate_v_1-fn.State_continue" [label=ARG1]
	"_assert_v_to-fn.Receiving" -> neg [label="ARG2-fn.Donor"]
	proper_q -> "named(Jaguar)" [label=BV]
	compound -> _chairman_n_of [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_the_q -> _chairman_n_of [label=BV]
	def_implicit_q -> time_n [label=BV]
	neg -> "_obligate_v_1-fn.State_continue" [label=ARG1]
	"_sit_v_down-fn.Attempt_suasion" -> pron [label="ARG1-fn.Content"]
}
