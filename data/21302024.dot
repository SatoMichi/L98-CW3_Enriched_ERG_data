digraph {
	node [shape=circle style=filled]
	"_die_v_1-fn.Death" -> pron [label="ARG1-fn.NotExist"]
	focus_d -> _be_v_id [label=ARG2]
	nominalization -> _bad_a_at [label=ARG1]
	measure -> abstr_deg [label=ARG2]
	appos -> _secretary_n_of [label=ARG2]
	proper_q -> "named(Betty)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Atkins)" [label="ARG1-fn.Agent"]
	_that_q_dem -> generic_entity [label=BV]
	compound -> "named(Atkins)" [label=ARG1]
	_a_q -> _secretary_n_of [label=BV]
	_be_v_id -> generic_entity [label=ARG1]
	_suburbian_a_1 -> "named(London)" [label=ARG1]
	appos -> "named(Atkins)" [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	_bad_a_at -> pron [label=ARG1]
	_from_p -> _secretary_n_of [label=ARG1]
	_could_v_modal -> _and_c [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_wish_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	measure -> _bad_a_at [label=ARG1]
	_from_p -> "named(London)" [label=ARG2]
	"_wish_v_1-fn.Desiring" -> _could_v_modal [label="ARG2-fn.Theme"]
	_be_v_id -> nominalization [label=ARG2]
	which_q -> abstr_deg [label=BV]
	proper_q -> "named(Atkins)" [label=BV]
	udef_q -> nominalization [label=BV]
	proper_q -> "named(London)" [label=BV]
	"_out+of_p" -> pron [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(Betty)" [label=ARG2]
}
