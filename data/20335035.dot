digraph {
	node [shape=circle style=filled]
	_essential_a_1 -> subord [label=ARG1]
	_these_q_dem -> generic_entity [label=BV]
	_can_v_modal -> "_see_v_1-fn.Grasp" [label=ARG1]
	udef_q -> _activity_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_for_p -> reason [label=ARG2]
	"_say_v_to-fn.IN" -> _essential_a_1 [label="ARG2-fn.NotExist"]
	"_say_v_to-fn.IN" -> "named(Bickwit)" [label="ARG1-fn.NotExist"]
	udef_q -> _mister_n_1 [label=BV]
	subord -> _break_v_1 [label=ARG1]
	_unusual_a_about -> _activity_n_1 [label=ARG1]
	_would_v_modal -> _regard_v_as [label=ARG1]
	_a_q -> "_examiner/nn_u_unknown" [label=BV]
	which_q -> reason [label=BV]
	_for_p -> _regard_v_as [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "_examiner/nn_u_unknown" [label=ARG1]
	"_see_v_1-fn.Grasp" -> _would_v_modal [label="ARG2-fn.NotExist"]
	udef_q -> "_s&l/nn_u_unknown" [label=BV]
	_for_p -> "_s&l/nn_u_unknown" [label=ARG2]
	_overseas_a_1 -> _investment_n_1 [label=ARG1]
	_regard_v_as -> "_examiner/nn_u_unknown" [label=ARG1]
	proper_q -> "named(Bickwit)" [label=BV]
	_regard_v_as -> generic_entity [label=ARG2]
	_for_p -> _break_v_1 [label=ARG1]
	_the_q -> "_s&l/nn_u_unknown" [label=BV]
	compound -> "_s&l/nn_u_unknown" [label=ARG2]
	_the_q -> _investment_n_1 [label=BV]
	compound -> "named(Bickwit)" [label=ARG1]
	"_say_v_to-fn.IN" -> _can_v_modal [label="ARG2-fn.NotExist"]
	"_see_v_1-fn.Grasp" -> pron [label="ARG1-fn.NotExist"]
	subord -> _even_a_1 [label=ARG2]
	_break_v_1 -> _investment_n_1 [label=ARG1]
	_regard_v_as -> _activity_n_1 [label=ARG3]
}
