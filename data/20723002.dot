digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Unice)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Tyszkiewicz)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Zygmunt)" [label=BV]
	poss -> _employer_n_1 [label=ARG2]
	"_want_v_1-fn.Desiring" -> _decide_v_1 [label="ARG3-fn.NotExist"]
	_necessary_a_for -> pron [label=ARG1]
	_decide_v_1 -> _condition_n_1 [label=ARG2]
	appos -> "named(Unice)" [label=ARG2]
	"_want_v_1-fn.Desiring" -> "named(Brussels)" [label="ARG2-fn.Theme"]
	udef_q -> _worker_n_1 [label=BV]
	poss -> "_confederation/nn_u_unknown" [label=ARG1]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	compound -> "named(Zygmunt)" [label=ARG2]
	def_explicit_q -> "_confederation/nn_u_unknown" [label=BV]
	_decide_v_1 -> "named(Brussels)" [label=ARG1]
	"_say_v_to-fn.IN" -> _unless_x [label="ARG2-fn.Topic"]
	udef_q -> _condition_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	focus_d -> "_want_v_1-fn.Desiring" [label=ARG2]
	proper_q -> "named(Brussels)" [label=BV]
	_for_p -> _condition_n_1 [label=ARG1]
	appos -> "named(Tyszkiewicz)" [label=ARG1]
	_unless_x -> neg [label=ARG1]
	_useful_a_for -> pron [label=ARG1]
	_unless_x -> _and_c [label=ARG2]
	_for_p -> _worker_n_1 [label=ARG2]
	udef_q -> "_secretary+general_n_of" [label=BV]
	appos -> "_secretary+general_n_of" [label=ARG2]
	proper_q -> "named(Tyszkiewicz)" [label=BV]
	neg -> "_want_v_1-fn.Desiring" [label=ARG1]
	compound -> "named(Tyszkiewicz)" [label=ARG1]
	appos -> "_confederation/nn_u_unknown" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_secretary+general_n_of" -> "_confederation/nn_u_unknown" [label=ARG1]
	_the_q -> _employer_n_1 [label=BV]
}
