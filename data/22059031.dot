digraph {
	node [shape=circle style=filled]
	_extension_n_of -> _law_n_1 [label=ARG1]
	_still_a_1 -> "_exist_v_1-fn.Existence" [label=ARG1]
	udef_q -> _reason_n_for [label=BV]
	_even_x_deg -> _if_x_then [label=ARG1]
	compound -> _insider_n_1 [label=ARG2]
	udef_q -> _insider_n_1 [label=BV]
	_this_q_dem -> _process_n_of [label=BV]
	nominalization -> _trade_v_1 [label=ARG1]
	"_in+order+to_x" -> "_exist_v_1-fn.Existence" [label=ARG1]
	"_exist_v_1-fn.Existence" -> _reason_n_for [label="ARG1-fn.NotExist"]
	"_behave_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	_of_p -> _law_n_1 [label=ARG1]
	_process_n_of -> _extension_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_case-by-case_a_1" -> _extension_n_of [label=ARG1]
	_resist_v_1 -> _process_n_of [label=ARG2]
	_of_p -> nominalization [label=ARG2]
	"_fear_v_1-fn.Experiencer_focus" -> _process_n_of [label="ARG2-fn.Stimulus"]
	_the_q -> _law_n_1 [label=BV]
	_steady_a_1 -> _process_n_of [label=ARG1]
	_resist_v_1 -> _reason_n_for [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_in+order+to_x" -> _and_c [label=ARG2]
	"_recklessly/rb_u_unknown" -> "_behave_v_1-fn.NF" [label=ARG1]
	_if_x_then -> "_in+order+to_x" [label=ARG1]
	_if_x_then -> "_behave_v_1-fn.NF" [label=ARG2]
	compound -> nominalization [label=ARG1]
	"_fear_v_1-fn.Experiencer_focus" -> _reason_n_for [label="ARG1-fn.Experiencer"]
	_judicial_a_1 -> _extension_n_of [label=ARG1]
	udef_q -> _extension_n_of [label=BV]
}
