digraph {
	node [shape=circle style=filled]
	_the_q -> _and_c [label=BV]
	neg -> _should_v_modal [label=ARG1]
	_by_p_means -> _example_n_of [label=ARG2]
	compound -> _judge_n_of [label=ARG2]
	_without_p -> _express_v_to [label=ARG1]
	udef_q -> _conclusion_n_of [label=BV]
	udef_q -> _critic_n_of [label=BV]
	_by_p_means -> _defend_v_from [label=ARG1]
	udef_q -> _example_n_of [label=BV]
	focus_d -> _and_c [label=ARG2]
	udef_q -> _judge_n_of [label=BV]
	parg_d -> _and_c [label=ARG2]
	"_require_v_of-fn.NF" -> _and_c [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_defend_v_from -> pron [label=ARG2]
	"_require_v_of-fn.NF" -> _express_v_to [label="ARG3-fn.NotExist"]
	udef_q -> _biographer_n_1 [label=BV]
	nominalization -> _defend_v_from [label=ARG1]
	compound -> "named(Leval)" [label=ARG1]
	_express_v_to -> _conclusion_n_of [label=ARG2]
	parg_d -> "_require_v_of-fn.NF" [label=ARG1]
	proper_q -> "named(Leval)" [label=BV]
	udef_q -> nominalization [label=BV]
	"_write_v_to-fn.Statement" -> neg [label="ARG2-fn.NotExist"]
	_without_p -> nominalization [label=ARG2]
	focus_d -> "_write_v_to-fn.Statement" [label=ARG1]
	"_write_v_to-fn.Statement" -> "named(Leval)" [label="ARG1-fn.NotExist"]
	_should_v_modal -> "_require_v_of-fn.NF" [label=ARG1]
	_express_v_to -> _and_c [label=ARG1]
	_simple_a_1 -> _express_v_to [label=ARG1]
}
