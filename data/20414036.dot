digraph {
	node [shape=circle style=filled]
	"_out+of_p" -> _manager_n_of [label=ARG2]
	compound -> "named(Lowndes)" [label=ARG1]
	_own_a_1 -> _package_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Lowndes)" [label="ARG1-fn.NotExist"]
	"card(4)" -> _manager_n_of [label=ARG1]
	_can_v_modal -> "_state_v_to-fn.Statement" [label=ARG1]
	_of_p -> _package_n_of [label=ARG2]
	_of_p -> _value_n_1 [label=ARG1]
	compound -> _consultant_n_1 [label=ARG2]
	proper_q -> "named(Noble)" [label=BV]
	poss -> _package_n_of [label=ARG1]
	compound -> "named(Noble)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_state_v_to-fn.Statement" -> "card(3)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Lowndes)" [label=BV]
	def_explicit_q -> _package_n_of [label=BV]
	"_state_v_to-fn.Statement" -> _value_n_1 [label="ARG2-fn.Topic"]
	_the_q -> _value_n_1 [label=BV]
	udef_q -> _consultant_n_1 [label=BV]
	udef_q -> _manager_n_of [label=BV]
	number_q -> "card(3)" [label=BV]
	_accurate_a_1 -> "_state_v_to-fn.Statement" [label=ARG1]
	focus_d -> _can_v_modal [label=ARG2]
	"_out+of_p" -> "card(3)" [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	neg -> _can_v_modal [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
