digraph {
	node [shape=circle style=filled]
	parg_d -> "_display_v_to-fn.Cause_to_end" [label=ARG1]
	"_bear_v_2-fn.Experiencer_obj" -> part_of [label="ARG2-fn.Stimulus"]
	_public_a_1 -> "_display_v_to-fn.Cause_to_end" [label=ARG1]
	loc_nonsp -> "_display_v_to-fn.Cause_to_end" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	focus_d -> "_bear_v_2-fn.Experiencer_obj" [label=ARG2]
	parg_d -> part_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	parg_d -> "_bear_v_2-fn.Experiencer_obj" [label=ARG1]
	part_of -> pron [label=ARG1]
	_most_q -> part_of [label=BV]
	_the_q -> _time_n_of [label=BV]
	_even_a_1 -> "_bear_v_2-fn.Experiencer_obj" [label=ARG1]
	parg_d -> _painting_n_of [label=ARG2]
	_last_a_1 -> _time_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	_the_q -> _painting_n_of [label=BV]
	neg -> "_bear_v_2-fn.Experiencer_obj" [label=ARG1]
	"_display_v_to-fn.Cause_to_end" -> _painting_n_of [label="ARG2-fn.Means"]
	loc_nonsp -> "_bear_v_2-fn.Experiencer_obj" [label=ARG1]
	loc_nonsp -> _time_n_of [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
}
