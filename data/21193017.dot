digraph {
	node [shape=circle style=filled]
	"_question_v_1-fn.Competition" -> part_of [label="ARG1-fn.Participant_1"]
	comp_too -> _far_a_1 [label=ARG1]
	"_have_v_1-fn.Competition" -> part_of [label="ARG1-fn.Participant_1"]
	nominalization -> _market_v_1 [label=ARG1]
	"_go_v_state-fn.Residence" -> _far_a_1 [label="ARG2-fn.Location"]
	compound -> _expert_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	udef_q -> _tie_n_1 [label=BV]
	_all_q -> part_of [label=BV]
	compound -> nominalization [label=ARG2]
	"_have_v_1-fn.Competition" -> _expert_n_1 [label="ARG2-fn.Participant_2"]
	compound -> _tie_n_1 [label=ARG2]
	"_question_v_1-fn.Competition" -> "_may_v_modal-fn.Communication_manner" [label="ARG2-fn.Participant_2"]
	part_of -> "_ins/nns_u_unknown" [label=ARG1]
	compound -> "_ins/nns_u_unknown" [label=ARG1]
	_the_q -> "_ins/nns_u_unknown" [label=BV]
	"_may_v_modal-fn.Communication_manner" -> "_go_v_state-fn.Residence" [label="ARG1-fn.Speaker"]
	"_have_v_1-fn.Competition" -> "_question_v_1-fn.Competition" [label="ARG3-fn.Participants"]
	_the_q -> "_party_n_of-to" [label=BV]
	_far_a_1 -> "_party_n_of-to" [label=ARG1]
	"_go_v_state-fn.Residence" -> "_party_n_of-to" [label="ARG1-fn.Resident"]
	_some_q -> _expert_n_1 [label=BV]
}
