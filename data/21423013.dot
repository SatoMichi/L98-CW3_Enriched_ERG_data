digraph {
	node [shape=circle style=filled]
	focus_d -> "_convict_v_of-fn.Cause_to_end" [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	compound -> "named(O’Brien)" [label=ARG1]
	_in_p_state -> "_convict_v_of-fn.Cause_to_end" [label=ARG1]
	appos -> "_protester/nn_u_unknown" [label=ARG1]
	parg_d -> "_protester/nn_u_unknown" [label=ARG2]
	_a_q -> "_protester/nn_u_unknown" [label=BV]
	_in_p_state -> _case_n_of [label=ARG2]
	compound -> "named(Webster)" [label=ARG2]
	compound -> "named(Supreme)" [label=ARG2]
	compound -> "named(Ann)" [label=ARG2]
	def_explicit_q -> _ruling_n_1 [label=BV]
	proper_q -> "named(Ann)" [label=BV]
	poss -> _ruling_n_1 [label=ARG1]
	compound -> _ruling_n_1 [label=ARG1]
	poss -> "named(Court)" [label=ARG2]
	_another_q -> _case_n_of [label=BV]
	appos -> "named(O’Brien)" [label=ARG2]
	parg_d -> "_convict_v_of-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Webster)" [label=BV]
	_before_p -> _ruling_n_1 [label=ARG2]
	"_convict_v_of-fn.Cause_to_end" -> "_protester/nn_u_unknown" [label="ARG2-fn.Means"]
	"_convict_v_of-fn.Cause_to_end" -> _trespass_n_1 [label="ARG3-fn.Place"]
	compound -> "named(Court)" [label=ARG1]
	udef_q -> _trespass_n_1 [label=BV]
	_the_q -> "named(Court)" [label=BV]
	proper_q -> "named(Supreme)" [label=BV]
	proper_q -> "named(O’Brien)" [label=BV]
	_before_p -> "_convict_v_of-fn.Cause_to_end" [label=ARG1]
}
