digraph {
	node [shape=circle style=filled]
	_be_v_id -> _challenge_n_1 [label=ARG2]
	_colon_p_namely -> _be_v_id [label=ARG1]
	"_say_v_to-fn.IN" -> _colon_p_namely [label="ARG2-fn.NotExist"]
	compound -> _company_n_1 [label=ARG2]
	_at_p -> "named(Manhattan)" [label=ARG2]
	compound -> "named(Kathryn)" [label=ARG2]
	proper_q -> "named(First)" [label=BV]
	_the_q -> _challenge_n_1 [label=BV]
	compound -> "named(First)" [label=ARG2]
	_be_v_id -> generic_entity [label=ARG1]
	proper_q -> "named(Kathryn)" [label=BV]
	proper_q -> "named(Manhattan)" [label=BV]
	"_say_v_to-fn.IN" -> "named(McAuley)" [label="ARG1-fn.NotExist"]
	_at_p -> _analyst_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	superl -> _great_a_for [label=ARG1]
	compound -> _acquisition_n_of [label=ARG2]
	_this_q_dem -> generic_entity [label=BV]
	udef_q -> _acquisition_n_of [label=BV]
	compound -> _challenge_n_1 [label=ARG1]
	"_face_v_1-fn.Confronting_problem" -> pron [label="ARG1-fn.NotExist"]
	compound -> "named(McAuley)" [label=ARG1]
	compound -> "named(Manhattan)" [label=ARG1]
	proper_q -> "named(McAuley)" [label=BV]
	_great_a_for -> _challenge_n_1 [label=ARG1]
	"_face_v_1-fn.Confronting_problem" -> _challenge_n_1 [label="ARG2-fn.NotExist"]
	_a_q -> _analyst_n_1 [label=BV]
	udef_q -> _company_n_1 [label=BV]
	appos -> "named(McAuley)" [label=ARG1]
}
