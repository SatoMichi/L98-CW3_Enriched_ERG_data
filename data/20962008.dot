digraph {
	node [shape=circle style=filled]
	poss -> person [label=ARG2]
	_about_p -> "_ecstatic/jj_u_unknown" [label=ARG1]
	"_say_v_to-fn.IN" -> "_ecstatic/jj_u_unknown" [label="ARG2-fn.Topic"]
	parg_d -> _syndicate_v_1 [label=ARG1]
	_with_p -> "named(Again)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(Home)" [label=BV]
	_with_p -> "named(Vila)" [label=ARG2]
	proper_q -> "named(Bob)" [label=BV]
	compound -> "named(Vila)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_call_v_name-fn.IN" -> _program_n_of [label="ARG3-fn.Result"]
	parg_d -> _program_n_of [label=ARG2]
	_about_p -> _change_n_of [label=ARG2]
	compound -> "named(Bob)" [label=ARG2]
	def_implicit_q -> _program_n_of [label=BV]
	"_call_v_name-fn.IN" -> "named(Again)" [label="ARG2-fn.Theme"]
	compound -> "named(Home)" [label=ARG2]
	compound -> "named(Again)" [label=ARG1]
	poss -> _program_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	which_q -> person [label=BV]
	parg_d -> "_call_v_name-fn.IN" [label=ARG1]
	"_ecstatic/jj_u_unknown" -> pron [label=ARG1]
	_syndicate_v_1 -> _program_n_of [label=ARG2]
	focus_d -> "_ecstatic/jj_u_unknown" [label=ARG2]
	proper_q -> "named(Again)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Vila)" [label="ARG1-fn.Agent"]
	_the_q -> _change_n_of [label=BV]
	proper_q -> "named(Vila)" [label=BV]
	_new_a_1 -> _program_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
