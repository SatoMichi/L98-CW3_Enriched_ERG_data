digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	"_try_v_1-fn.Attempt" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	_after_p -> "_calm_v_1-fn.Experiencer_obj" [label=ARG1]
	_upset_a_1 -> "_say_v_to-fn.IN" [label=ARG2]
	"_calm_v_1-fn.Experiencer_obj" -> "named(Phelan)" [label="ARG1-fn.Stimulus"]
	compound -> _price_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _upset_a_1 [label="ARG2-fn.Topic"]
	_used_a_to -> _swing_n_1 [label=ARG2]
	udef_q -> _price_n_of [label=BV]
	udef_q -> _investor_n_1 [label=BV]
	"_calm_v_1-fn.Experiencer_obj" -> _investor_n_1 [label="ARG2-fn.Experiencer"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_try_v_1-fn.Attempt" -> "_calm_v_1-fn.Experiencer_obj" [label="ARG2-fn.Theme"]
	_have_v_qmodal -> "_get_v_state-fn.IN" [label=ARG1]
	_the_q -> _plunge_n_of [label=BV]
	"_get_v_state-fn.IN" -> _investor_n_1 [label="ARG1-fn.NotExist"]
	def_explicit_q -> _swing_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _market_n_1 [label=ARG2]
	_simple_a_1 -> _have_v_qmodal [label=ARG1]
	_upset_a_1 -> pron [label=ARG1]
	compound -> "named(Phelan)" [label=ARG1]
	_after_p -> _plunge_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	poss -> _swing_n_1 [label=ARG1]
	proper_q -> "named(Phelan)" [label=BV]
	"_get_v_state-fn.IN" -> _used_a_to [label="ARG2-fn.Patient"]
	_the_q -> _market_n_1 [label=BV]
	_big_a_1 -> _swing_n_1 [label=ARG1]
	compound -> _swing_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	_used_a_to -> _investor_n_1 [label=ARG1]
	_would_v_modal -> _have_v_qmodal [label=ARG1]
}
