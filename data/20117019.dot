digraph {
	node [shape=circle style=filled]
	compound -> _market_n_1 [label=ARG2]
	"card(2)" -> _way_n_of [label=ARG1]
	_of_p -> _avenue_n_1 [label=ARG1]
	compound -> _source_n_of [label=ARG1]
	_some_q -> _source_n_of [label=BV]
	_of_p -> _appeal_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _source_n_of [label="ARG1-fn.NotExist"]
	udef_q -> _illegality_n_1 [label=BV]
	udef_q -> _market_n_1 [label=BV]
	_would_v_modal -> _seek_v_1 [label=ARG1]
	_seek_v_1 -> _have_v_cause [label=ARG2]
	_if_x_then -> _possible_a_for [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_work_v_1 -> _ruling_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	loc_nonsp -> _way_n_of [label=ARG2]
	_have_v_cause -> _work_v_1 [label=ARG2]
	_the_q -> _bank_n_of [label=BV]
	udef_q -> _appeal_n_1 [label=BV]
	compound -> _ruling_n_1 [label=ARG1]
	loc_nonsp -> _work_v_1 [label=ARG1]
	_seek_v_1 -> pron [label=ARG1]
	_all_q -> _avenue_n_1 [label=BV]
	_if_x_then -> "_exhaust_v_1-fn.NF" [label=ARG2]
	_possible_a_for -> _would_v_modal [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.NotExist"]
	compound -> _illegality_n_1 [label=ARG2]
	_have_v_cause -> pron [label=ARG1]
	"_exhaust_v_1-fn.NF" -> _avenue_n_1 [label="ARG2-fn.Experiencer"]
	focus_d -> _possible_a_for [label=ARG2]
	"_exhaust_v_1-fn.NF" -> _bank_n_of [label="ARG1-fn.Stimulus"]
	_both_q -> _way_n_of [label=BV]
	_the_q -> _ruling_n_1 [label=BV]
}
