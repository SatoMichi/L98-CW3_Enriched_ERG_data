digraph {
	node [shape=circle style=filled]
	compound -> "named(Kai)" [label=ARG1]
	_at_p -> "card(30)" [label=ARG1]
	udef_q -> generic_entity [label=BV]
	def_implicit_q -> _year_n_1 [label=BV]
	"much-many_a" -> generic_entity [label=ARG1]
	udef_q -> "_us$_n_1" [label=BV]
	_the_q -> _end_n_of [label=BV]
	proper_q -> "yofc(1991)" [label=BV]
	_at_p -> _end_n_of [label=ARG2]
	_end_n_of -> _year_n_1 [label=ARG1]
	comp_equal -> "_us$_n_1" [label=ARG2]
	_over_p -> "_cost_v_1-fn.Expensiveness" [label=ARG1]
	comp_equal -> "much-many_a" [label=ARG1]
	_from_p -> _up_p [label=ARG1]
	"_according+to_p" -> "named(Securities)" [label=ARG2]
	proper_q -> "named(Kai)" [label=BV]
	"_cost_v_1-fn.Expensiveness" -> generic_entity [label="ARG2-fn.Theme"]
	"_according+to_p" -> _expand_v_cause [label=ARG1]
	times -> "card(1000000000)" [label=ARG3]
	compound -> "named(Sun)" [label=ARG2]
	_by_p_temp -> "yofc(1991)" [label=ARG2]
	_about_x_deg -> "card(43)" [label=ARG1]
	_could_v_modal -> "_cost_v_1-fn.Expensiveness" [label=ARG1]
	proper_q -> "named(Sun)" [label=BV]
	times -> "card(5.7)" [label=ARG2]
	_next_a_1 -> _year_n_1 [label=ARG1]
	udef_q -> _plane_n_1 [label=BV]
	number_q -> "card(30)" [label=BV]
	_from_p -> "card(30)" [label=ARG2]
	_last_a_1 -> _year_n_1 [label=ARG1]
	proper_q -> "named(Securities)" [label=BV]
	_up_p -> _expand_v_cause [label=ARG1]
	_the_q -> _year_n_1 [label=BV]
	_by_p_temp -> _expand_v_cause [label=ARG1]
	"card(8)" -> _year_n_1 [label=ARG1]
	compound -> _ltd_n_1 [label=ARG2]
	_over_p -> _year_n_1 [label=ARG2]
	_to_p -> _expand_v_cause [label=ARG1]
	_to_p -> _plane_n_1 [label=ARG2]
	compound -> "named(Hung)" [label=ARG1]
	_expand_v_cause -> _expansion_n_1 [label=ARG1]
	_the_q -> _expansion_n_1 [label=BV]
	"card(1000000000)" -> "_us$_n_1" [label=ARG1]
	_expand_v_cause -> _fleet_n_1 [label=ARG2]
	_the_q -> _fleet_n_1 [label=BV]
	"_cost_v_1-fn.Expensiveness" -> _expansion_n_1 [label="ARG1-fn.NotExist"]
	udef_q -> _ltd_n_1 [label=BV]
	compound -> "named(Securities)" [label=ARG1]
	"card(43)" -> _plane_n_1 [label=ARG1]
	proper_q -> "named(Hung)" [label=BV]
}
