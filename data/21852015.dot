digraph {
	node [shape=circle style=filled]
	parg_d -> _limit_v_1 [label=ARG1]
	_on_p -> _open_a_1 [label=ARG1]
	udef_q -> _order_n_of [label=BV]
	parg_d -> _execute_v_1 [label=ARG1]
	proper_q -> "named(Francisco)" [label=BV]
	"_remain_v_1-fn.State_continue" -> _open_a_1 [label="ARG2-fn.Theme"]
	compound -> "named(San)" [label=ARG2]
	_execute_v_1 -> _order_n_of [label=ARG2]
	compound -> _floor_n_1 [label=ARG1]
	parg_d -> _basis_n_of [label=ARG2]
	compound -> "named(Los)" [label=ARG2]
	proper_q -> "named(Los)" [label=BV]
	_route_v_1 -> _order_n_of [label=ARG2]
	compound -> _equity_n_1 [label=ARG2]
	parg_d -> _order_n_of [label=ARG2]
	_a_q -> _basis_n_of [label=BV]
	compound -> "named(Angeles)" [label=ARG1]
	_in_p -> _floor_n_1 [label=ARG1]
	poss -> _floor_n_1 [label=ARG1]
	_open_a_1 -> _floor_n_1 [label=ARG1]
	_in_p -> "named(Angeles)" [label=ARG2]
	_in_p -> "named(Francisco)" [label=ARG2]
	udef_q -> _equity_n_1 [label=BV]
	_in_p -> _and_c [label=ARG1]
	compound -> "named(Francisco)" [label=ARG1]
	parg_d -> _rout_v_1 [label=ARG1]
	poss -> _exchange_n_1 [label=ARG2]
	_the_q -> _exchange_n_1 [label=BV]
	_while_x -> _and_c [label=ARG1]
	_limit_v_1 -> _basis_n_of [label=ARG2]
	_on_p -> _basis_n_of [label=ARG2]
	proper_q -> "named(San)" [label=BV]
	proper_q -> "named(Angeles)" [label=BV]
	_rout_v_1 -> _order_n_of [label=ARG2]
	parg_d -> _route_v_1 [label=ARG1]
	def_explicit_q -> _floor_n_1 [label=BV]
	"_remain_v_1-fn.State_continue" -> _floor_n_1 [label="ARG1-fn.NotExist"]
	_while_x -> "_remain_v_1-fn.State_continue" [label=ARG2]
}
