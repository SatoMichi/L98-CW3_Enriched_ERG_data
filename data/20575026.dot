digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Control)" [label=BV]
	compound -> "named(Computer)" [label=ARG1]
	compound -> "named(MIPS)" [label=ARG2]
	"_simplify_v_1-fn.Activity_start" -> _software_n_1 [label="ARG2-fn.Purpose"]
	compound -> "named(Control)" [label=ARG2]
	"_announce_v_to-fn.Receiving" -> _agreement_n_1 [label="ARG2-fn.Donor"]
	parg_d -> _software_n_1 [label=ARG2]
	proper_q -> "named(Computer)" [label=BV]
	with_p -> _agreement_n_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	nominalization -> _operate_v_1 [label=ARG1]
	proper_q -> "named(Data)" [label=BV]
	compound -> "named(Data)" [label=ARG1]
	compound -> nominalization [label=ARG2]
	udef_q -> _inc_n_1 [label=BV]
	_recent_a_1 -> "_announce_v_to-fn.Receiving" [label=ARG1]
	"_develop_v_cause-fn.Killing" -> _machine_n_1 [label="ARG2-fn.Victim"]
	with_p -> "_develop_v_cause-fn.Killing" [label=ARG1]
	compound -> _inc_n_1 [label=ARG2]
	proper_q -> "named(Systems)" [label=BV]
	udef_q -> _machine_n_1 [label=BV]
	compound -> "named(Systems)" [label=ARG1]
	_a_q -> _agreement_n_1 [label=BV]
	compound -> _software_n_1 [label=ARG1]
	"_announce_v_to-fn.Receiving" -> "named(Data)" [label="ARG1-fn.Recipient"]
	proper_q -> "named(MIPS)" [label=BV]
	_joint_a_1 -> "_develop_v_cause-fn.Killing" [label=ARG1]
	udef_q -> _software_n_1 [label=BV]
	_with_p -> _software_n_1 [label=ARG2]
	_with_p -> _machine_n_1 [label=ARG1]
	parg_d -> "_simplify_v_1-fn.Activity_start" [label=ARG1]
	_with_p -> "named(Systems)" [label=ARG2]
	_with_p -> _agreement_n_1 [label=ARG1]
}
