digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> "named(Schulman)" [label="ARG1-fn.Process"]
	proper_q -> "named(Schulman)" [label=BV]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	compound -> "named(Schulman)" [label=ARG1]
	udef_q -> _world_n_of [label=BV]
	compound -> _wide_a_1 [label=ARG1]
	"_draw_v_down-fn.Change_position_on_a_scale" -> "_backlog/nn_u_unknown" [label="ARG2-fn.Item"]
	def_explicit_q -> "_backlog/nn_u_unknown" [label=BV]
	_european_a_1 -> "_backlog/nn_u_unknown" [label=ARG1]
	udef_q -> _order_n_of [label=BV]
	_flat_a_1 -> _order_n_of [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	comp -> _strong_a_1 [label=ARG1]
	udef_q -> _revenue_n_1 [label=BV]
	_although_x -> _strong_a_1 [label=ARG2]
	_although_x -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	proper_q -> "mofy(Dec)" [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_overall_a_1 -> _revenue_n_1 [label=ARG1]
	"_draw_v_down-fn.Change_position_on_a_scale" -> "mofy(Dec)" [label="ARG1-fn.Attribute"]
	compound -> _world_n_of [label=ARG2]
	"_have_v_1-fn.Competition" -> _order_n_of [label="ARG2-fn.Participant_2"]
	"_have_v_1-fn.Competition" -> "mofy(Dec)" [label="ARG1-fn.Participant_1"]
	poss -> "_backlog/nn_u_unknown" [label=ARG1]
	_strong_a_1 -> _revenue_n_1 [label=ARG1]
	_overall_p -> "_have_v_1-fn.Competition" [label=ARG1]
	_wide_a_1 -> _order_n_of [label=ARG1]
}
