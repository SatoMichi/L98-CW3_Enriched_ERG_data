digraph {
	node [shape=circle style=filled]
	"_contribute_v_to-fn.Assemble" -> _effort_n_1 [label="ARG1-fn.Individuals"]
	udef_q -> _effort_n_1 [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	compound -> _cost_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	compound -> "_cut_v_1-fn.Competition" [label=ARG1]
	superl -> _late_a_for [label=ARG1]
	poss -> _period_n_of [label=ARG2]
	udef_q -> _addition_n_1 [label=BV]
	_ongoing_a_1 -> _effort_n_1 [label=ARG1]
	_in_p_state -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	compound -> _earnings_n_1 [label=ARG2]
	udef_q -> _earnings_n_1 [label=BV]
	_late_a_for -> _period_n_of [label=ARG1]
	"_contribute_v_to-fn.Assemble" -> "_upturn/nn_u_unknown" [label="ARG3-fn.Party_1"]
	poss -> "_upturn/nn_u_unknown" [label=ARG1]
	"_cut_v_1-fn.Competition" -> _effort_n_1 [label="ARG1-fn.Participant_1"]
	def_explicit_q -> "_upturn/nn_u_unknown" [label=BV]
	_in_p_state -> _addition_n_1 [label=ARG2]
	compound -> "_upturn/nn_u_unknown" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> _company_n_of [label="ARG1-fn.Process"]
	_the_q -> _period_n_of [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "_contribute_v_to-fn.Assemble" [label="ARG2-fn.Means"]
	_the_q -> _company_n_of [label=BV]
	udef_q -> _cost_n_1 [label=BV]
}
