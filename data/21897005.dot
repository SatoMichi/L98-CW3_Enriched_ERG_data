digraph {
	node [shape=circle style=filled]
	_sluggish_a_1 -> _economy_n_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(Hagen)" [label=BV]
	_for_p -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_take_v_1-fn.Competition" -> _step_n_1 [label="ARG2-fn.Participant_2"]
	udef_q -> _traffic_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_take_v_1-fn.Competition" -> "named(Conrail)" [label="ARG1-fn.Participant_1"]
	"_reflect_v_1-fn.Competition" -> _and_c [label="ARG1-fn.Participant_1"]
	poss -> "named(Conrail)" [label=ARG2]
	proper_q -> "named(Conrail)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _revenue_n_1 [label=BV]
	def_explicit_q -> _and_c [label=BV]
	"_continue_v_2-fn.Competition" -> "_take_v_1-fn.Competition" [label="ARG1-fn.Participant_1"]
	_for_p -> _rest_n_of [label=ARG2]
	poss -> _and_c [label=ARG1]
	_the_q -> _economy_n_1 [label=BV]
	_rest_n_of -> "yofc(1989)" [label=ARG1]
	proper_q -> "yofc(1989)" [label=BV]
	"_control_v_1-fn.Competition" -> _cost_n_1 [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> _but_c [label="ARG2-fn.Means"]
	_step_n_1 -> _and_c [label=ARG1]
	"_reduce_v_1-fn.Competition" -> _cost_n_1 [label="ARG2-fn.Participant_2"]
	compound -> "named(Hagen)" [label=ARG1]
	"_reflect_v_1-fn.Competition" -> _economy_n_1 [label="ARG2-fn.Participant_2"]
	focus_d -> _for_p [label=ARG2]
	_the_q -> _rest_n_of [label=BV]
	udef_q -> _step_n_1 [label=BV]
	udef_q -> _cost_n_1 [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "named(Hagen)" [label="ARG1-fn.Process"]
}
