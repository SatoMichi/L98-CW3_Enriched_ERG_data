digraph {
	node [shape=circle style=filled]
	udef_q -> _people_n_of [label=BV]
	proper_q -> "named(Donaldson)" [label=BV]
	"_look_v_for-fn.Needing" -> _people_n_of [label="ARG1-fn.Cognizer"]
	parg_d -> _manipulate_v_1 [label=ARG1]
	"_read_v_1-fn.Required_event" -> _market_n_1 [label="ARG2-fn.Negative_consequences"]
	udef_q -> _manager_n_of [label=BV]
	appos -> "named(Eppel)" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> nominalization [label=BV]
	_manager_n_of -> nominalization [label=ARG1]
	"_look_v_for-fn.Needing" -> _ability_n_1 [label="ARG2-fn.Requirement"]
	"_try_v_1-fn.Attempt" -> "_read_v_1-fn.Required_event" [label="ARG2-fn.Goal"]
	udef_q -> _equity_n_1 [label=BV]
	compound -> "named(Eppel)" [label=ARG1]
	compound -> _equity_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	_the_q -> _market_n_1 [label=BV]
	proper_q -> "named(Lufkin)" [label=BV]
	_at_p -> implicit_conj [label=ARG2]
	proper_q -> "named(Jenrette)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_look_v_for-fn.Needing" [label="ARG2-fn.Requirement"]
	compound -> "named(Dudley)" [label=ARG2]
	compound -> nominalization [label=ARG1]
	proper_q -> "named(Dudley)" [label=BV]
	compound -> "named(A)" [label=ARG1]
	_at_p -> _manager_n_of [label=ARG1]
	proper_q -> "named(A)" [label=BV]
	_a_q -> _ability_n_1 [label=BV]
	appos -> _manager_n_of [label=ARG2]
	proper_q -> "named(Eppel)" [label=BV]
	_ability_n_1 -> "_rather+than_c" [label=ARG1]
	focus_d -> "_look_v_for-fn.Needing" [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Eppel)" [label="ARG1-fn.Dependent"]
	udef_q -> implicit_conj [label=BV]
	nominalization -> _trade_v_1 [label=ARG1]
}
