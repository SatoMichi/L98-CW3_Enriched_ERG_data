digraph {
	node [shape=circle style=filled]
	poss -> pron [label=ARG2]
	with_p -> _effort_n_1 [label=ARG2]
	_on_p_state -> "_take_v_1-fn.Have_as_requirement" [label=ARG1]
	"_keep_v_prd-fn.Cause_to_continue" -> _car_n_1 [label="ARG2-fn.Theme"]
	focus_d -> _on_p_state [label=ARG2]
	_recall_v_1 -> _note_n_1 [label=ARG1]
	with_p -> "_keep_v_prd-fn.Cause_to_continue" [label=ARG1]
	loc_nonsp -> _way_n_of [label=ARG1]
	poss -> _note_n_1 [label=ARG1]
	parg_d -> "_point_v_1-fn.IN" [label=ARG1]
	"_take_v_1-fn.Have_as_requirement" -> pron [label="ARG1-fn.NotExist"]
	_the_q -> _way_n_of [label=BV]
	loc_nonsp -> "_point_v_1-fn.IN" [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	"_point_v_1-fn.IN" -> _car_n_1 [label="ARG2-fn.Patient"]
	def_explicit_q -> _note_n_1 [label=BV]
	_recall_v_1 -> "_take_v_1-fn.Have_as_requirement" [label=ARG2]
	pronoun_q -> pron [label=BV]
	focus_d -> _recall_v_1 [label=ARG1]
	_on_p_state -> _way_n_of [label=ARG2]
	parg_d -> _car_n_1 [label=ARG2]
	_concentrated_a_1 -> _effort_n_1 [label=ARG1]
	_that_q_dem -> _car_n_1 [label=BV]
	"_keep_v_prd-fn.Cause_to_continue" -> "_point_v_1-fn.IN" [label="ARG3-fn.NotExist"]
	loc_nonsp -> place_n [label=ARG2]
	_south_a_1 -> place_n [label=ARG1]
	_home_p -> place_n [label=ARG1]
	udef_q -> _effort_n_1 [label=BV]
	"_take_v_1-fn.Have_as_requirement" -> _effort_n_1 [label="ARG2-fn.NotExist"]
}
