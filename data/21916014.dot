digraph {
	node [shape=circle style=filled]
	_the_q -> _place_n_of [label=BV]
	"_out+of_p_dir" -> _run_v_1 [label=ARG1]
	with_p -> _go_v_1 [label=ARG1]
	"_acknowledge_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _obstacle_n_1 [label=BV]
	proper_q -> "named(O'Connell)" [label=BV]
	with_p -> "_build_v_1-fn.Building" [label=ARG1]
	"_out+of_p_dir" -> _place_n_of [label=ARG2]
	"much-many_a" -> _obstacle_n_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_run_v_1 -> pron [label=ARG1]
	with_p -> _place_n_of [label=ARG2]
	_include_v_1 -> _cost_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_in_p -> "_build_v_1-fn.Building" [label=ARG1]
	_although_x -> "_say_v_to-fn.IN" [label=ARG1]
	_only_a_1 -> _place_n_of [label=ARG1]
	udef_q -> _cost_n_1 [label=BV]
	proper_q -> "named(L.A.)" [label=BV]
	"_acknowledge_v_to-fn.Statement" -> _be_v_there [label="ARG2-fn.Topic"]
	focus_d -> _and_c [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_build_v_1-fn.Building" -> _freeway_n_1 [label="ARG2-fn.Product"]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	_up_p -> _place_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(O'Connell)" [label="ARG1-fn.Agent"]
	_include_v_1 -> _obstacle_n_1 [label=ARG1]
	_in_p -> "named(L.A.)" [label=ARG2]
	udef_q -> _place_n_of [label=BV]
	_although_x -> "_acknowledge_v_to-fn.Statement" [label=ARG2]
	_be_v_there -> _obstacle_n_1 [label=ARG1]
	compound -> "named(O'Connell)" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _freeway_n_1 [label=BV]
}
