digraph {
	node [shape=circle style=filled]
	appos -> _official_n_1 [label=ARG2]
	"_examine_v_1-fn.Scrutiny" -> _parent_n_of [label="ARG2-fn.NotExist"]
	poss -> _parent_n_of [label=ARG1]
	def_implicit_q -> _year_n_1 [label=BV]
	appos -> _parent_n_of [label=ARG1]
	appos -> "named(Newsom)" [label=ARG1]
	def_explicit_q -> _parent_n_of [label=BV]
	proper_q -> "named(American)" [label=BV]
	udef_q -> _state_n_of [label=BV]
	compound -> "named(Richard)" [label=ARG2]
	compound -> _corporation_n_1 [label=ARG2]
	proper_q -> "named(California)" [label=BV]
	udef_q -> _evidence_n_of [label=BV]
	compound -> _state_n_of [label=ARG2]
	_commit_v_to -> _crime_n_1 [label=ARG2]
	compound -> "named(Continental)" [label=ARG1]
	poss -> "named(Lincoln)" [label=ARG2]
	_evidence_n_of -> _commit_v_to [label=ARG1]
	appos -> "named(Continental)" [label=ARG2]
	compound -> "named(American)" [label=ARG2]
	proper_q -> "named(Lincoln)" [label=BV]
	_also_a_1 -> "_see_v_1-fn.Grasp" [label=ARG1]
	udef_q -> _corporation_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	"_examine_v_1-fn.Scrutiny" -> _official_n_1 [label="ARG1-fn.NotExist"]
	compound -> "named(Newsom)" [label=ARG1]
	proper_q -> "named(Richard)" [label=BV]
	_a_q -> _official_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _also_a_1 [label="ARG2-fn.NotExist"]
	"_say_v_to-fn.IN" -> "named(Newsom)" [label="ARG1-fn.NotExist"]
	proper_q -> "named(Continental)" [label=BV]
	loc_nonsp -> _year_n_1 [label=ARG2]
	_last_a_1 -> _year_n_1 [label=ARG1]
	proper_q -> "named(Newsom)" [label=BV]
	compound -> "named(California)" [label=ARG2]
	compound -> _official_n_1 [label=ARG1]
	"_see_v_1-fn.Grasp" -> _evidence_n_of [label="ARG2-fn.NotExist"]
	"_see_v_1-fn.Grasp" -> pron [label="ARG1-fn.NotExist"]
	parg_d -> _commit_v_to [label=ARG1]
	parg_d -> _crime_n_1 [label=ARG2]
	udef_q -> _crime_n_1 [label=BV]
	loc_nonsp -> _official_n_1 [label=ARG1]
}
