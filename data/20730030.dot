digraph {
	node [shape=circle style=filled]
	_if_x_then -> "_tell_v_1-fn.Prevarication" [label=ARG2]
	_if_x_then -> _then_a_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	udef_q -> generic_entity [label=BV]
	focus_d -> "_charge_v_1-fn.Commerce_collect" [label=ARG2]
	compound -> "named(Gardner)" [label=ARG1]
	compound -> "named(Steve)" [label=ARG2]
	"much-many_a" -> generic_entity [label=ARG1]
	udef_q -> _state_n_of [label=BV]
	loc_nonsp -> "_tell_v_1-fn.Prevarication" [label=ARG1]
	nominalization -> _reasonable_a_for [label=ARG1]
	_a_q -> _general_n_1 [label=BV]
	_the_q -> _truth_n_1 [label=BV]
	"_charge_v_1-fn.Commerce_collect" -> generic_entity [label="ARG2-fn.Asset"]
	compound -> _state_n_of [label=ARG2]
	measure -> comp [label=ARG1]
	proper_q -> "named(Gardner)" [label=BV]
	appos -> _general_n_1 [label=ARG2]
	compound -> _attorney_n_1 [label=ARG2]
	"_tell_v_1-fn.Prevarication" -> _truth_n_1 [label="ARG2-fn.Topic"]
	loc_nonsp -> time_n [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _assistant_n_1 [label=BV]
	"card(300)" -> _percent_n_of [label=ARG1]
	_in_p -> _general_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Texas)" [label=BV]
	udef_q -> _attorney_n_1 [label=BV]
	comp -> "much-many_a" [label=ARG1]
	_reasonable_a_for -> thing [label=ARG1]
	measure -> _percent_n_of [label=ARG2]
	_now_a_1 -> time_n [label=ARG1]
	"_charge_v_1-fn.Commerce_collect" -> pron [label="ARG1-fn.Agent"]
	udef_q -> nominalization [label=BV]
	_in_p -> "named(Texas)" [label=ARG2]
	compound -> _general_n_1 [label=ARG1]
	udef_q -> _percent_n_of [label=BV]
	_than_p_ind -> generic_entity [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Gardner)" [label="ARG1-fn.Agent"]
	"_tell_v_1-fn.Prevarication" -> pron [label="ARG1-fn.Agent"]
	appos -> "named(Gardner)" [label=ARG1]
	compound -> _assistant_n_1 [label=ARG2]
	proper_q -> "named(Steve)" [label=BV]
	_than_p_ind -> nominalization [label=ARG2]
	_then_a_1 -> "_charge_v_1-fn.Commerce_collect" [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	which_q -> thing [label=BV]
}
