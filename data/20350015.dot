digraph {
	node [shape=circle style=filled]
	compound -> _and_c [label=ARG1]
	compound -> "named(Peters)" [label=ARG1]
	_in_p -> _partner_n_1 [label=ARG1]
	_as_p -> part_of [label=ARG2]
	proper_q -> "named(Hollywood)" [label=BV]
	_in_p -> _venture_n_1 [label=ARG2]
	_settlement_n_of -> _dispute_n_1 [label=ARG1]
	proper_q -> "named(Peter)" [label=BV]
	"_end_v_up-fn.Halt" -> _and_c [label="ARG1-fn.Purpose"]
	compound -> "named(Time)" [label=ARG2]
	part_of -> _settlement_n_of [label=ARG1]
	proper_q -> "named(Time)" [label=BV]
	proper_q -> "named(Peters)" [label=BV]
	"_become_v_id-fn.Residence" -> _and_c [label="ARG1-fn.Resident"]
	_several_a_1 -> _venture_n_1 [label=ARG1]
	compound -> _venture_n_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	udef_q -> _business_n_1 [label=BV]
	udef_q -> _producer_n_of [label=BV]
	compound -> "named(Warner)" [label=ARG1]
	proper_q -> "named(Sony)" [label=BV]
	_over_p -> _dispute_n_1 [label=ARG1]
	_a_q -> _settlement_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	udef_q -> _partner_n_1 [label=BV]
	compound -> "named(Peter)" [label=ARG2]
	_part_q -> part_of [label=BV]
	_over_p -> _and_c [label=ARG2]
	proper_q -> "named(Jon)" [label=BV]
	def_explicit_q -> _dispute_n_1 [label=BV]
	"_end_v_up-fn.Halt" -> "_become_v_id-fn.Residence" [label="ARG2-fn.Place"]
	_as_p -> "_become_v_id-fn.Residence" [label=ARG1]
	"_could_v_modal-fn.Cause_to_end" -> "_end_v_up-fn.Halt" [label="ARG1-fn.Process"]
	proper_q -> "named(Guber)" [label=BV]
	compound -> _business_n_1 [label=ARG2]
	proper_q -> "named(Warner)" [label=BV]
	"_become_v_id-fn.Residence" -> _partner_n_1 [label="ARG2-fn.Location"]
	compound -> "named(Guber)" [label=ARG1]
	udef_q -> _venture_n_1 [label=BV]
	compound -> _producer_n_of [label=ARG1]
	poss -> _dispute_n_1 [label=ARG1]
	compound -> "named(Jon)" [label=ARG2]
	compound -> "named(Hollywood)" [label=ARG2]
}
