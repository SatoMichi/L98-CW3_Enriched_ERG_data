digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	_do_v_1 -> "_thing_n_of-about" [label=ARG2]
	proper_q -> "named(Cotton)" [label=BV]
	udef_q -> "_thing_n_of-about" [label=BV]
	_about_p -> "_talk_v_about-fn.IN" [label=ARG1]
	compound -> implicit_conj [label=ARG2]
	compound -> "named(New)" [label=ARG2]
	focus_d -> _after_p [label=ARG2]
	proper_q -> "named(Daly)" [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	_would_v_modal -> "_make_v_1-fn.IN" [label=ARG1]
	"_make_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_after_p -> "_make_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	_about_p -> nominalization [label=ARG2]
	proper_q -> "named(Helliesen)" [label=BV]
	nominalization -> _do_v_1 [label=ARG1]
	focus_d -> _would_v_modal [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Daly)" [label="ARG1-fn.Agent"]
	udef_q -> _firm_n_1 [label=BV]
	udef_q -> _cargo_n_1 [label=BV]
	_for_p -> "named(Inc)" [label=ARG2]
	compound -> nominalization [label=ARG2]
	udef_q -> implicit_conj [label=BV]
	_joint_a_1 -> _do_v_1 [label=ARG1]
	"_talk_v_about-fn.IN" -> _sense_n_of [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Inc)" [label=BV]
	compound -> "named(York)" [label=ARG1]
	udef_q -> _service_n_1 [label=BV]
	_for_p -> _service_n_1 [label=ARG1]
	udef_q -> _sense_n_of [label=BV]
	_after_p -> generic_entity [label=ARG2]
	compound -> "named(Cotton)" [label=ARG2]
	compound -> "named(Inc)" [label=ARG1]
	proper_q -> "named(Eichner)" [label=BV]
	"_make_v_1-fn.IN" -> _sense_n_of [label="ARG2-fn.Product"]
	compound -> _firm_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	_director_n_of -> _service_n_1 [label=ARG1]
	"_talk_v_about-fn.IN" -> _airline_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(Daly)" [label=ARG1]
	proper_q -> "named(Simat)" [label=BV]
	udef_q -> _airline_n_1 [label=BV]
	compound -> _cargo_n_1 [label=ARG2]
	appos -> "named(Daly)" [label=ARG1]
	nominalization -> _consult_v_1 [label=ARG1]
	proper_q -> "named(York)" [label=BV]
	udef_q -> _and_c [label=BV]
	compound -> _service_n_1 [label=ARG1]
	appos -> _director_n_of [label=ARG2]
	udef_q -> _director_n_of [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
