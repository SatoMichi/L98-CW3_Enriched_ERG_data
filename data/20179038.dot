digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Cause_to_end" -> _banker_n_1 [label="ARG1-fn.Process"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _bond_n_1 [label=BV]
	_a_q -> nominalization [label=BV]
	proper_q -> "named(Spiegel)" [label=BV]
	compound -> _investment_n_1 [label=ARG2]
	compound -> _trade_n_of [label=ARG1]
	compound -> _bond_n_1 [label=ARG1]
	def_explicit_q -> _trade_n_of [label=BV]
	compound -> _junk_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_feasible_a_for -> nominalization [label=ARG1]
	neg -> _feasible_a_for [label=ARG1]
	nominalization -> _restructure_v_1 [label=ARG1]
	"_scrutinize_v_1-fn.Attempt_suasion" -> _trade_n_of [label="ARG2-fn.Addressee"]
	_while_x -> neg [label=ARG1]
	_some_q -> _banker_n_1 [label=BV]
	poss -> _trade_n_of [label=ARG1]
	udef_q -> _investment_n_1 [label=BV]
	poss -> "named(Spiegel)" [label=ARG2]
	compound -> _banker_n_1 [label=ARG1]
	udef_q -> _junk_n_1 [label=BV]
	"_say_v_to-fn.Cause_to_end" -> _while_x [label="ARG2-fn.Means"]
	_while_x -> "_scrutinize_v_1-fn.Attempt_suasion" [label=ARG2]
	compound -> "named(Spiegel)" [label=ARG1]
	"_scrutinize_v_1-fn.Attempt_suasion" -> "named(SEC)" [label="ARG1-fn.Content"]
	_past_a_1 -> _trade_n_of [label=ARG1]
	_still_a_1 -> "_scrutinize_v_1-fn.Attempt_suasion" [label=ARG1]
	_the_q -> "named(SEC)" [label=BV]
}
