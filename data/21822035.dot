digraph {
	node [shape=circle style=filled]
	_difficult_a_for -> "_lbos/nns_u_unknown" [label=ARG1]
	"_find_v_1-fn.IN" -> _way_n_of [label="ARG2-fn.Theme"]
	compound -> "named(Street)" [label=ARG1]
	proper_q -> "named(Wall)" [label=BV]
	udef_q -> _way_n_of [label=BV]
	_even_x_deg -> _if_x_then [label=ARG1]
	_around_p -> _rule_n_of [label=ARG2]
	_if_x_then -> "_find_v_1-fn.IN" [label=ARG2]
	_somewhat_x_deg -> comp [label=ARG1]
	"_contend_v_1-fn.Statement" -> _become_v_id [label="ARG2-fn.Theme"]
	_a_q -> _aide_n_1 [label=BV]
	proper_q -> "named(Street)" [label=BV]
	compound -> "named(Wall)" [label=ARG2]
	comp -> _difficult_a_for [label=ARG1]
	_if_x_then -> "_contend_v_1-fn.Statement" [label=ARG1]
	"_contend_v_1-fn.Statement" -> _aide_n_1 [label="ARG1-fn.Agent"]
	compound -> _aide_n_1 [label=ARG1]
	_become_v_id -> "_lbos/nns_u_unknown" [label=ARG1]
	compound -> "named_n(Senate)" [label=ARG2]
	_the_q -> _rule_n_of [label=BV]
	"_find_v_1-fn.IN" -> "named(Street)" [label="ARG1-fn.Agent"]
	udef_q -> "named_n(Senate)" [label=BV]
	udef_q -> "_lbos/nns_u_unknown" [label=BV]
	_around_p -> _way_n_of [label=ARG1]
	_become_v_id -> _difficult_a_for [label=ARG2]
	_new_a_1 -> _rule_n_of [label=ARG1]
}
