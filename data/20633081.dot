digraph {
	node [shape=circle style=filled]
	parg_d -> "_interview_v_1-fn.NF" [label=ARG1]
	_some_q -> _good_n_1 [label=BV]
	_about_p -> _illness_n_1 [label=ARG2]
	"_want_v_1-fn.Desiring" -> "_interview_v_1-fn.NF" [label="ARG2-fn.Theme"]
	compound -> _mister_n_1 [label=ARG2]
	"_get_v_out-fn.get.05" -> pron [label="ARG1-fn.Agent"]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	udef_q -> _mister_n_1 [label=BV]
	"_in+order+to_x" -> "_want_v_1-fn.Desiring" [label=ARG1]
	_the_q -> _illness_n_1 [label=BV]
	_do_v_1 -> _good_n_1 [label=ARG2]
	_maybe_a_1 -> _do_v_1 [label=ARG1]
	_do_v_1 -> nominalization [label=ARG1]
	proper_q -> "named(Silvers)" [label=BV]
	parg_d -> pron [label=ARG2]
	compound -> "named(Silvers)" [label=ARG1]
	"_in+order+to_x" -> "_get_v_out-fn.get.05" [label=ARG2]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Abbie)" [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	"_get_v_out-fn.get.05" -> _story_n_of [label="ARG2-fn.Patient"]
	udef_q -> nominalization [label=BV]
	"_interview_v_1-fn.NF" -> pron [label="ARG2-fn.Recipient"]
	poss -> _story_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Silvers)" [label="ARG1-fn.Agent"]
	poss -> "named(Abbie)" [label=ARG2]
	def_explicit_q -> _story_n_of [label=BV]
	_about_p -> _talk_v_about [label=ARG1]
	nominalization -> _talk_v_about [label=ARG1]
}
