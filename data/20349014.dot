digraph {
	node [shape=circle style=filled]
	udef_q -> _occasion_n_of [label=BV]
	compound -> _program_n_of [label=ARG2]
	udef_q -> _trade_n_of [label=BV]
	_the_q -> "named(Board)" [label=BV]
	_a_q -> _number_n_of [label=BV]
	"_in+order+to_x" -> "_conduct_v_1-fn.Cotheme" [label=ARG1]
	_figure_v_out -> _way_n_of [label=ARG2]
	compound -> _system_n_of [label=ARG1]
	udef_q -> _way_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _trade_n_of [label=ARG1]
	focus_d -> _penetrate_v_1 [label=ARG2]
	compound -> _security_n_1 [label=ARG2]
	_on_p -> _penetrate_v_1 [label=ARG1]
	udef_q -> _firm_n_1 [label=BV]
	_way_n_of -> "_in+order+to_x" [label=ARG1]
	_on_p -> _number_n_of [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	poss -> _system_n_of [label=ARG1]
	udef_q -> _program_n_of [label=BV]
	def_explicit_q -> _system_n_of [label=BV]
	compound -> nominalization [label=ARG2]
	poss -> "named(Board)" [label=ARG2]
	nominalization -> _trade_v_1 [label=ARG1]
	subord -> _penetrate_v_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_conduct_v_1-fn.Cotheme" -> _trade_n_of [label="ARG2-fn.Theme"]
	_penetrate_v_1 -> _collar_n_1 [label=ARG2]
	"_mean_v_to-fn.NF" -> _figure_v_out [label="ARG2-fn.Theme"]
	parg_d -> _collar_n_1 [label=ARG2]
	"_circumvent_v_1-fn.Compliance" -> _collar_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(Board)" [label=ARG1]
	subord -> "_mean_v_to-fn.NF" [label=ARG2]
	_electronic_a_1 -> _system_n_of [label=ARG1]
	_the_q -> _collar_n_1 [label=BV]
	compound -> "named(Phelan)" [label=ARG1]
	_number_n_of -> _occasion_n_of [label=ARG1]
	compound -> _firm_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_say_v_to-fn.IN" -> subord [label="ARG2-fn.Topic"]
	"_in+order+to_x" -> _and_c [label=ARG2]
	proper_q -> "named(Phelan)" [label=BV]
	_figure_v_out -> _firm_n_1 [label=ARG1]
	compound -> "named(Big)" [label=ARG2]
	_use_v_1 -> _system_n_of [label=ARG2]
	parg_d -> _penetrate_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	udef_q -> _security_n_1 [label=BV]
	proper_q -> "named(Big)" [label=BV]
}
