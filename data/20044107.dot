digraph {
	node [shape=circle style=filled]
	_a_q -> _trial_n_1 [label=BV]
	compound -> "named(Ward)" [label=ARG1]
	_when_x_subord -> _want_v_1 [label=ARG1]
	udef_q -> _morale_n_1 [label=BV]
	_avoid_v_1 -> pron [label=ARG1]
	_the_q -> _disclosure_n_1 [label=BV]
	_discover_v_1 -> nominalization [label=ARG2]
	_want_v_1 -> pron [label=ARG1]
	compound -> _missus_n_1 [label=ARG2]
	udef_q -> _missus_n_1 [label=BV]
	parg_d -> _discover_v_1 [label=ARG1]
	_avoid_v_1 -> _disclosure_n_1 [label=ARG2]
	_bring_v_1 -> _disclosure_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> _when_x_subord [label="ARG2-fn.NotExist"]
	"_say_v_to-fn.IN" -> "named(Ward)" [label="ARG1-fn.NotExist"]
	proper_q -> "named(Ward)" [label=BV]
	parg_d -> nominalization [label=ARG2]
	_would_v_modal -> _bring_v_1 [label=ARG1]
	_bring_v_1 -> _trial_n_1 [label=ARG1]
	nominalization -> _cheat_v_1 [label=ARG1]
	_want_v_1 -> _avoid_v_1 [label=ARG2]
	_public_a_1 -> _disclosure_n_1 [label=ARG1]
	compound -> _morale_n_1 [label=ARG2]
	_damage_v_1 -> _disclosure_n_1 [label=ARG1]
	compound -> _damage_v_1 [label=ARG1]
	_when_x_subord -> _discover_v_1 [label=ARG2]
	_the_q -> nominalization [label=BV]
}
