digraph {
	node [shape=circle style=filled]
	_a_q -> _lot_n_of [label=BV]
	_in_p -> _year_n_1 [label=ARG2]
	compound -> "named(Norton)" [label=ARG1]
	proper_q -> "named(Norton)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_in_p -> _around_p [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_although_x -> "_say_v_to-fn.IN" [label=ARG1]
	"_use_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	"_a+few_a_1" -> _year_n_1 [label=ARG1]
	"_use_v_1-fn.IN" -> "named(Alar)" [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_around_p -> _lot_n_of [label=ARG1]
	udef_q -> _grower_n_1 [label=BV]
	"_stop_v_prd-fn.Activity_stop" -> "_use_v_1-fn.IN" [label="ARG1-fn.Agent"]
	focus_d -> _around_p [label=ARG2]
	proper_q -> "named(Alar)" [label=BV]
	_although_x -> "_stop_v_prd-fn.Activity_stop" [label=ARG2]
	neg -> _around_p [label=ARG1]
	udef_q -> _year_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Norton)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	_lot_n_of -> _grower_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
