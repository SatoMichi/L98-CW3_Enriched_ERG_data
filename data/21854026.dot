digraph {
	node [shape=circle style=filled]
	poss -> _announcement_n_of [label=ARG1]
	"_in+order+to_x" -> _repair_v_1 [label=ARG2]
	_some_q -> _investor_n_1 [label=BV]
	compound -> _telephone_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	parg_d -> _line_n_of [label=ARG2]
	udef_q -> _telephone_n_1 [label=BV]
	_damage_v_1 -> _line_n_of [label=ARG2]
	udef_q -> _earnings_n_1 [label=BV]
	compound -> _announcement_n_of [label=ARG1]
	udef_q -> _cost_n_1 [label=BV]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	udef_q -> _computer_n_1 [label=BV]
	parg_d -> _damage_v_1 [label=ARG1]
	_extra_a_1 -> _cost_n_1 [label=ARG1]
	compound -> _computer_n_1 [label=ARG2]
	"_in+order+to_x" -> _might_v_modal [label=ARG1]
	pronoun_q -> pron [label=BV]
	_repair_v_1 -> pron [label=ARG1]
	compound -> _line_n_of [label=ARG1]
	_a_q -> _failure_n_1 [label=BV]
	"_delay_v_1-fn.IN" -> _announcement_n_of [label="ARG2-fn.Theme"]
	compound -> _failure_n_1 [label=ARG1]
	_repair_v_1 -> _line_n_of [label=ARG2]
	udef_q -> _line_n_of [label=BV]
	"_think_v_1-fn.IN" -> _investor_n_1 [label="ARG1-fn.NotExist"]
	"_think_v_1-fn.IN" -> "_in+order+to_x" [label="ARG2-fn.NotExist"]
	compound -> _earnings_n_1 [label=ARG2]
	"_have_v_1-fn.IN" -> _cost_n_1 [label="ARG2-fn.Theme"]
	"_delay_v_1-fn.IN" -> _failure_n_1 [label="ARG1-fn.Agent"]
	_might_v_modal -> "_have_v_1-fn.IN" [label=ARG1]
	def_explicit_q -> _announcement_n_of [label=BV]
}
