digraph {
	node [shape=circle style=filled]
	compound -> _program_n_of [label=ARG2]
	poss -> "named(Kidder)" [label=ARG2]
	comp_enough -> _sophisticated_a_1 [label=ARG1]
	poss -> _use_n_of [label=ARG1]
	udef_q -> _investor_n_1 [label=BV]
	_about_p -> "_complain_v_to-about-fn.Statement" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	neg -> "_in+order+to_x" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _program_n_of [label=BV]
	_these_q_dem -> "_type_n_of-n" [label=BV]
	"_in+order+to_x" -> "_complain_v_to-about-fn.Statement" [label=ARG2]
	nominalization -> _trade_v_1 [label=ARG1]
	_also_a_1 -> neg [label=ARG1]
	_aggressive_a_1 -> _use_n_of [label=ARG1]
	"_complain_v_to-about-fn.Statement" -> "_type_n_of-n" [label="ARG1-fn.Agent"]
	_note_v_to -> "named(Carpenter)" [label=ARG1]
	"_type_n_of-n" -> _investor_n_1 [label=ARG1]
	compound -> "named(Carpenter)" [label=ARG1]
	def_explicit_q -> _use_n_of [label=BV]
	proper_q -> "named(Kidder)" [label=BV]
	_use_n_of -> nominalization [label=ARG1]
	udef_q -> nominalization [label=BV]
	_note_v_to -> _also_a_1 [label=ARG2]
	_sophisticated_a_1 -> "_type_n_of-n" [label=ARG1]
	proper_q -> "named(Carpenter)" [label=BV]
	_about_p -> _use_n_of [label=ARG2]
	compound -> nominalization [label=ARG1]
	"_in+order+to_x" -> _sophisticated_a_1 [label=ARG1]
}
