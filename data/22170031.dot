digraph {
	node [shape=circle style=filled]
	_out_p -> "named(Smart)" [label=ARG2]
	"_think_v_1-fn.IN" -> _can_v_1 [label="ARG2-fn.NotExist"]
	_really_a_1 -> "_think_v_1-fn.IN" [label=ARG1]
	_if_x_then -> "_think_v_1-fn.IN" [label=ARG2]
	_the_q -> _system_n_of [label=BV]
	_should_v_modal -> _really_a_1 [label=ARG1]
	_can_v_1 -> pron [label=ARG1]
	_twice_a_1 -> "_think_v_1-fn.IN" [label=ARG1]
	_out_p -> _can_v_1 [label=ARG1]
	_if_x_then -> _should_v_modal [label=ARG1]
	proper_q -> "named(Smart)" [label=BV]
	"_think_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_can_v_1 -> _system_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
}
