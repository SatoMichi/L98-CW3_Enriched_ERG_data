digraph {
	node [shape=circle style=filled]
	udef_q -> _people_n_of [label=BV]
	proper_q -> "named(Utter)" [label=BV]
	focus_d -> "_buy_v_1-fn.Commerce_buy" [label=ARG2]
	proper_q -> "named(Jack)" [label=BV]
	"_manage_v_1-fn.Experiencer_obj" -> "named(Utter)" [label="ARG1-fn.Experiencer"]
	_the_q -> _fund_n_1 [label=BV]
	neg -> "_buy_v_1-fn.Commerce_buy" [label=ARG1]
	compound -> _yield_n_1 [label=ARG2]
	"_manage_v_1-fn.Experiencer_obj" -> _fund_n_1 [label="ARG2-fn.Stimulus"]
	_any_q -> thing [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	compound -> "named(IDS)" [label=ARG2]
	_anymore_a_1 -> "_buy_v_1-fn.Commerce_buy" [label=ARG1]
	compound -> "named(Utter)" [label=ARG1]
	proper_q -> "named(IDS)" [label=BV]
	compound -> "named(Services)" [label=ARG1]
	"_buy_v_1-fn.Commerce_buy" -> _people_n_of [label="ARG1-fn.Buyer"]
	udef_q -> _expectation_n_of [label=BV]
	_on_p -> _expectation_n_of [label=ARG2]
	_of_p -> "named(Services)" [label=ARG2]
	udef_q -> _yield_n_1 [label=BV]
	proper_q -> "named(Financial)" [label=BV]
	_high_a_1 -> _yield_n_1 [label=ARG1]
	compound -> "named(Jack)" [label=ARG2]
	compound -> "named(Financial)" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Utter)" [label="ARG1-fn.Dependent"]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	proper_q -> "named(Services)" [label=BV]
	"_buy_v_1-fn.Commerce_buy" -> thing [label="ARG2-fn.Goods"]
	compound -> _fund_n_1 [label=ARG1]
	_on_p -> "_buy_v_1-fn.Commerce_buy" [label=ARG1]
	_of_p -> _fund_n_1 [label=ARG1]
}
