digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _rule_n_of [label=BV]
	"_ask_v_1-fn.Request" -> "named(Rumack)" [label="ARG1-fn.NotExist"]
	"_in+order+to_x" -> _craft_v_1 [label=ARG1]
	poss -> pron [label=ARG2]
	"_remove_v_1-fn.Removing" -> "named(Labor)" [label="ARG1-fn.NotExist"]
	"_in+order+to_x" -> "_remove_v_1-fn.Removing" [label=ARG2]
	"_remove_v_1-fn.Removing" -> _threat_n_1 [label="ARG2-fn.NotExist"]
	compound -> "named(Frederick)" [label=ARG2]
	compound -> _threat_n_1 [label=ARG1]
	_the_q -> _threat_n_1 [label=BV]
	_craft_v_1 -> _rule_n_of [label=ARG2]
	"_ask_v_1-fn.Request" -> "_in+order+to_x" [label="ARG3-fn.NotExist"]
	compound -> "named(Rumack)" [label=ARG1]
	"_ask_v_1-fn.Request" -> "named(Labor)" [label="ARG2-fn.NotExist"]
	_of_p -> "named(Rumack)" [label=ARG1]
	compound -> _consultant_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Rumack)" [label=BV]
	compound -> "named(Buck)" [label=ARG2]
	_craft_v_1 -> "named(Labor)" [label=ARG1]
	proper_q -> "named(Frederick)" [label=BV]
	udef_q -> _consultant_n_1 [label=BV]
	_of_p -> _consultant_n_1 [label=ARG2]
	compound -> "named_n(IRS)" [label=ARG2]
	poss -> _rule_n_of [label=ARG1]
	udef_q -> "named_n(IRS)" [label=BV]
	proper_q -> "named(Labor)" [label=BV]
	proper_q -> "named(Buck)" [label=BV]
	"_re-_a_again" -> _craft_v_1 [label=ARG1]
}
