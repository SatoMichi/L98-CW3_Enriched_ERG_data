digraph {
	node [shape=circle style=filled]
	udef_q -> _feedback_n_1 [label=BV]
	parg_d -> "_encourage_v_1-fn.Competition" [label=ARG1]
	compound -> "card(1.1)" [label=ARG1]
	"_test_v_1-fn.Attempt_suasion" -> "card(1.1)" [label="ARG2-fn.Addressee"]
	parg_d -> _customer_n_of [label=ARG2]
	"_encourage_v_1-fn.Competition" -> _feedback_n_1 [label="ARG1-fn.Participant_1"]
	parg_d -> _company_n_of [label=ARG2]
	number_q -> "card(1.1)" [label=BV]
	"_test_v_1-fn.Attempt_suasion" -> _customer_n_of [label="ARG1-fn.Content"]
	_from_p -> _customer_n_of [label=ARG2]
	"_receive_v_1-fn.State_continue" -> _feedback_n_1 [label="ARG2-fn.State"]
	pronoun_q -> pron [label=BV]
	_from_p -> "_receive_v_1-fn.State_continue" [label=ARG1]
	_now_a_1 -> "_test_v_1-fn.Attempt_suasion" [label=ARG1]
	"_select_v_1-fn.Achieving_first" -> _customer_n_of [label="ARG2-fn.New_idea"]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	compound -> "named(Version)" [label=ARG2]
	udef_q -> "named(Version)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_encourage_v_1-fn.Competition" [label="ARG2-fn.Requirement"]
	udef_q -> _customer_n_of [label=BV]
	parg_d -> "_select_v_1-fn.Achieving_first" [label=ARG1]
	_the_q -> _company_n_of [label=BV]
	"_encourage_v_1-fn.Competition" -> _company_n_of [label="ARG2-fn.Participant_2"]
	"_receive_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
}
