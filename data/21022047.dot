digraph {
	node [shape=circle style=filled]
	compound -> _law_n_1 [label=ARG2]
	udef_q -> _group_n_of [label=BV]
	poss -> _lawyer_n_1 [label=ARG1]
	udef_q -> _plaintiff_n_1 [label=BV]
	compound -> _professor_n_of [label=ARG1]
	compound -> _attorney_n_1 [label=ARG1]
	poss -> _plaintiff_n_1 [label=ARG2]
	udef_q -> _right_n_1 [label=BV]
	_from_p -> _lawyer_n_1 [label=ARG1]
	udef_q -> _defense_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	"_include_v_1-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	compound -> _and_c [label=ARG2]
	compound -> _group_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _counsel_n_1 [label=BV]
	_civil_a_1 -> _right_n_1 [label=ARG1]
	_from_p -> _group_n_of [label=ARG2]
	_corporate_a_1 -> _counsel_n_1 [label=ARG1]
	udef_q -> _lawyer_n_1 [label=BV]
	udef_q -> _consumer_n_of [label=BV]
	udef_q -> _attorney_n_1 [label=BV]
	def_explicit_q -> _lawyer_n_1 [label=BV]
	compound -> _defense_n_1 [label=ARG2]
	udef_q -> _law_n_1 [label=BV]
	udef_q -> implicit_conj [label=BV]
	udef_q -> _professor_n_of [label=BV]
	"_include_v_1-fn.Cause_to_end" -> implicit_conj [label="ARG2-fn.Means"]
}
