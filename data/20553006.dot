digraph {
	node [shape=circle style=filled]
	appos -> _group_n_of [label=ARG1]
	"_cut_v_1-fn.IN" -> _neck_n_1 [label="ARG2-fn.Patient"]
	def_explicit_q -> _neck_n_1 [label=BV]
	poss -> pron [label=ARG2]
	udef_q -> _chicken_n_1 [label=BV]
	"_divide_v_1-fn.Separating" -> _politician_n_1 [label="ARG1-fn.NotExist"]
	_british_a_1 -> _politician_n_1 [label=ARG1]
	_with_p -> generic_entity [label=ARG1]
	udef_q -> _politician_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_with_p -> _neck_n_1 [label=ARG2]
	"_scream_v_1-fn.Communication_noise" -> generic_entity [label="ARG1-fn.Agent"]
	appos -> _and_c [label=ARG2]
	_into_p -> "_divide_v_1-fn.Separating" [label=ARG1]
	_the_q -> _sky_n_1 [label=BV]
	poss -> _neck_n_1 [label=ARG1]
	parg_d -> _neck_n_1 [label=ARG2]
	parg_d -> "_cut_v_1-fn.IN" [label=ARG1]
	_group_n_of -> _chicken_n_1 [label=ARG1]
	"card(2)" -> _group_n_of [label=ARG1]
	udef_q -> _and_c [label=BV]
	_fall_v_1 -> _sky_n_1 [label=ARG1]
	_into_p -> _group_n_of [label=ARG2]
	udef_q -> _group_n_of [label=BV]
	_those_q_dem -> generic_entity [label=BV]
	"_scream_v_1-fn.Communication_noise" -> _fall_v_1 [label="ARG2-fn.Topic"]
}
