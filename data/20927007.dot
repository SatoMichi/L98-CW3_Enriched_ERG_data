digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Taking" -> "named(Schwarz)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.Taking" -> "_broaden_v_cause-fn.Cause_to_end" [label="ARG2-fn.Theme"]
	_the_q -> _competition_n_1 [label=BV]
	_of_p -> _opportunity_n_1 [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_for_p -> pron [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Schwarz)" [label=BV]
	udef_q -> _opportunity_n_1 [label=BV]
	_the_q -> _base_n_1 [label=BV]
	_of_p -> _base_n_1 [label=ARG1]
	"_broaden_v_cause-fn.Cause_to_end" -> _base_n_1 [label="ARG2-fn.Means"]
	pronoun_q -> pron [label=BV]
	"_broaden_v_cause-fn.Cause_to_end" -> _competition_n_1 [label="ARG1-fn.Process"]
	_for_p -> _opportunity_n_1 [label=ARG1]
	compound -> "named(Schwarz)" [label=ARG1]
}
