digraph {
	node [shape=circle style=filled]
	poss -> _pilot_n_of [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _ownership_n_of [label=ARG1]
	"_like_v_1-fn.Eclipse" -> _union_n_of [label="ARG1-fn.Obstruction"]
	"_would_v_modal-fn.Cause_to_end" -> "_like_v_1-fn.Eclipse" [label="ARG1-fn.Process"]
	"_like_v_1-fn.Eclipse" -> _ownership_n_of [label="ARG2-fn.Eclipsed"]
	poss -> "named(Dubinsky)" [label=ARG1]
	def_explicit_q -> "named(Dubinsky)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_for_p -> _ownership_n_of [label=ARG1]
	udef_q -> _ownership_n_of [label=BV]
	_for_p -> _employee_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	def_explicit_q -> _union_n_of [label=BV]
	poss -> _union_n_of [label=ARG1]
	compound -> "named(Dubinsky)" [label=ARG1]
	"_say_v_to-fn.Surpassing" -> "named(Dubinsky)" [label="ARG1-fn.Standard_item"]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.Surpassing" -> "_would_v_modal-fn.Cause_to_end" [label="ARG2-fn.Profiled_item"]
	_the_q -> _pilot_n_of [label=BV]
	compound -> _majority_n_of [label=ARG2]
	udef_q -> _majority_n_of [label=BV]
	udef_q -> _employee_n_of [label=BV]
}
