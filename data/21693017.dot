digraph {
	node [shape=circle style=filled]
	_some_q -> _comparison_n_1 [label=BV]
	"_face_v_1-fn.Attempt_suasion" -> "named_n(Times)" [label="ARG1-fn.Content"]
	compound -> "named(Lawrence)" [label=ARG1]
	loc_nonsp -> "season(summer)" [label=ARG2]
	_with_p -> "named(Grenfell)" [label=ARG2]
	_the_q -> _plant_n_1 [label=BV]
	compound -> "named(C.J.)" [label=ARG2]
	def_implicit_q -> place_n [label=BV]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	proper_q -> "named(Peter)" [label=BV]
	proper_q -> "named(Edison)" [label=BV]
	_with_p -> _analyst_n_1 [label=ARG1]
	_in_p -> "_face_v_1-fn.Attempt_suasion" [label=ARG1]
	"_come_v_1-fn.Impact" -> _plant_n_1 [label="ARG1-fn.Place"]
	_with_x_subord -> "_come_v_1-fn.Impact" [label=ARG2]
	proper_q -> "named(Lawrence)" [label=BV]
	"_say_v_to-fn.Taking" -> _with_x_subord [label="ARG2-fn.Theme"]
	def_implicit_q -> "season(summer)" [label=BV]
	compound -> "named(Morgan)" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Appert)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Grenfell)" [label=BV]
	_with_x_subord -> "_face_v_1-fn.Attempt_suasion" [label=ARG1]
	_the_q -> "named_n(Times)" [label=BV]
	_a_q -> _analyst_n_1 [label=BV]
	compound -> _earnings_n_1 [label=ARG2]
	compound -> "named(Peter)" [label=ARG2]
	loc_nonsp -> "_come_v_1-fn.Impact" [label=ARG1]
	udef_q -> _earnings_n_1 [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	appos -> "named(Appert)" [label=ARG1]
	compound -> _comparison_n_1 [label=ARG1]
	compound -> "named(Grenfell)" [label=ARG1]
	"_face_v_1-fn.Attempt_suasion" -> _comparison_n_1 [label="ARG2-fn.Addressee"]
	_the_q -> _future_n_1 [label=BV]
	proper_q -> "named(C.J.)" [label=BV]
	compound -> _plant_n_1 [label=ARG1]
	_tough_a_for -> _comparison_n_1 [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	_in_p -> _future_n_1 [label=ARG2]
	focus_d -> "_face_v_1-fn.Attempt_suasion" [label=ARG2]
	proper_q -> "named(Morgan)" [label=BV]
	_online_a_1 -> place_n [label=ARG1]
	proper_q -> "named(Appert)" [label=BV]
	_next_a_1 -> "season(summer)" [label=ARG1]
	compound -> "named(Edison)" [label=ARG2]
	compound -> "named(Appert)" [label=ARG1]
}
