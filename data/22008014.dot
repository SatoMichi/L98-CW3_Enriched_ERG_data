digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _business_n_1 [label=BV]
	"_apart+from_p" -> _unit_n_of [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_profitable_a_for -> "named(Hill)" [label=ARG1]
	poss -> _business_n_1 [label=ARG1]
	poss -> "named(Colgate)" [label=ARG2]
	poss -> "named(Hill)" [label=ARG2]
	proper_q -> "named(Pet)" [label=BV]
	proper_q -> "named(Products)" [label=BV]
	"_apart+from_p" -> _business_n_1 [label=ARG1]
	_high_a_1 -> _profitable_a_for [label=ARG1]
	compound -> "named(Mark)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(Products)" [label=ARG1]
	poss -> pron [label=ARG2]
	def_explicit_q -> _unit_n_of [label=BV]
	_domestic_a_1 -> _business_n_1 [label=ARG1]
	"_lag_v_1-fn.Change_position_on_a_scale" -> _business_n_1 [label="ARG1-fn.Attribute"]
	proper_q -> "named(Mark)" [label=BV]
	"_concede_v_to-fn.Quitting" -> "_lag_v_1-fn.Change_position_on_a_scale" [label="ARG2-fn.Employer"]
	poss -> _unit_n_of [label=ARG1]
	compound -> _unit_n_of [label=ARG1]
	proper_q -> "named(Colgate)" [label=BV]
	def_explicit_q -> "named(Hill)" [label=BV]
	"_concede_v_to-fn.Quitting" -> "named(Mark)" [label="ARG1-fn.Employee"]
	compound -> "named(Pet)" [label=ARG2]
}
