digraph {
	node [shape=circle style=filled]
	neg -> _would_v_modal [label=ARG1]
	_be_v_id -> _weekend_n_of [label=ARG2]
	udef_q -> part_of [label=BV]
	poss -> pron [label=ARG2]
	neg -> "_have_v_1-fn.IN" [label=ARG1]
	_be_v_nv -> _sense_n_of [label=ARG1]
	"much-many_a" -> part_of [label=ARG1]
	compound -> "named(Richard)" [label=ARG2]
	def_implicit_q -> place_n [label=BV]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_be_v_id -> pron [label=ARG1]
	_if_x_then -> neg [label=ARG2]
	pronoun_q -> pron [label=BV]
	_be_v_nv -> neg [label=ARG2]
	proper_q -> "named(Richard)" [label=BV]
	_make_v_1 -> part_of [label=ARG2]
	_if_x_then -> _be_v_nv [label=ARG1]
	poss -> _sense_n_of [label=ARG1]
	_make_v_1 -> pron [label=ARG1]
	"_have_v_1-fn.IN" -> "named(Breeden)" [label="ARG2-fn.Theme"]
	_stressful_a_1 -> _weekend_n_of [label=ARG1]
	part_of -> _difference_n_1 [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	proper_q -> "named(Breeden)" [label=BV]
	def_explicit_q -> _sense_n_of [label=BV]
	_a_q -> _difference_n_1 [label=BV]
	_fair_a_1 -> _stressful_a_1 [label=ARG1]
	_would_v_modal -> _make_v_1 [label=ARG1]
	compound -> "named(Breeden)" [label=ARG1]
	_there_a_1 -> place_n [label=ARG1]
	_a_q -> _weekend_n_of [label=BV]
	loc_nonsp -> "_have_v_1-fn.IN" [label=ARG1]
}
