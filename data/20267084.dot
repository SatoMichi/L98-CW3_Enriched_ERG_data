digraph {
	node [shape=circle style=filled]
	_in_p -> pron [label=ARG1]
	_in_p -> _relationship_n_of [label=ARG2]
	"_attach_v_1-fn.Inchoative_attaching" -> _to_p [label="ARG3-fn.NotExist"]
	poss -> _report_n_of [label=ARG1]
	poss -> _jury_n_1 [label=ARG2]
	_inclined_a_1 -> "_extend_v_1-fn.NF" [label=ARG2]
	_any_q -> _favor_n_1 [label=BV]
	"_write_v_back-fn.Statement" -> _judge_n_of [label="ARG1-fn.NotExist"]
	proper_q -> "named(Laurel)" [label=BV]
	comp_equal -> _far_a_1 [label=ARG1]
	_inclined_a_1 -> pron [label=ARG1]
	parg_d -> "_attach_v_1-fn.Inchoative_attaching" [label=ARG1]
	"_attach_v_1-fn.Inchoative_attaching" -> _letter_n_of [label="ARG2-fn.Patient"]
	_grand_a_1 -> _jury_n_1 [label=ARG1]
	compound -> _relationship_n_of [label=ARG1]
	_a_q -> _relationship_n_of [label=BV]
	_far_a_1 -> "_extend_v_1-fn.NF" [label=ARG1]
	neg -> _inclined_a_1 [label=ARG1]
	proper_q -> "named(Bank)" [label=BV]
	pronoun_q -> pron [label=BV]
	_concerned_a_about -> _favor_n_1 [label=ARG1]
	_to_p -> _report_n_of [label=ARG2]
	_to_p -> _letter_n_of [label=ARG1]
	_with_p -> _relationship_n_of [label=ARG1]
	"_extend_v_1-fn.NF" -> pron [label="ARG2-fn.Theme"]
	comp_equal -> _concerned_a_about [label=ARG2]
	def_explicit_q -> _report_n_of [label=BV]
	compound -> "named(Laurel)" [label=ARG2]
	udef_q -> _adversary_n_1 [label=BV]
	"_find_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	compound -> "named(Bank)" [label=ARG1]
	_with_p -> "named(Bank)" [label=ARG2]
	_the_q -> _judge_n_of [label=BV]
	_in_p -> "_write_v_back-fn.Statement" [label=ARG1]
	_a_q -> _letter_n_of [label=BV]
	compound -> _adversary_n_1 [label=ARG2]
	_in_p -> _letter_n_of [label=ARG2]
	_the_q -> _jury_n_1 [label=BV]
	"_find_v_1-fn.IN" -> _in_p [label="ARG3-fn.NotExist"]
	parg_d -> _letter_n_of [label=ARG2]
}
