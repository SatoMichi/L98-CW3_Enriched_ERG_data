digraph {
	node [shape=circle style=filled]
	_the_q -> generic_entity [label=BV]
	compound -> _petition_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _have_v_qmodal [label="ARG2-fn.Topic"]
	_between_p -> _country_n_of [label=ARG2]
	focus_d -> _have_v_qmodal [label=ARG2]
	"_ask_v_1-fn.Request" -> "named(Campo)" [label="ARG1-fn.NotExist"]
	_have_v_qmodal -> _be_v_id [label=ARG1]
	every_q -> thing [label=BV]
	"_sign_v_1-fn.NF" -> _client_n_1 [label="ARG1-fn.Agent"]
	"_sign_v_1-fn.NF" -> _petition_n_1 [label="ARG2-fn.Destination"]
	proper_q -> "named(Campo)" [label=BV]
	compound -> _protest_n_1 [label=ARG2]
	udef_q -> _petition_n_1 [label=BV]
	def_explicit_q -> "named(Campo)" [label=BV]
	proper_q -> "named(Stefan)" [label=BV]
	poss -> "named(Campo)" [label=ARG2]
	_same_a_as -> generic_entity [label=ARG1]
	compound -> "named(Stefan)" [label=ARG2]
	_be_v_id -> generic_entity [label=ARG2]
	udef_q -> _country_n_of [label=BV]
	udef_q -> _protest_n_1 [label=BV]
	compound -> "named(Campo)" [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Campo)" [label="ARG1-fn.Agent"]
	udef_q -> _client_n_1 [label=BV]
	_be_v_id -> thing [label=ARG1]
	"_ask_v_1-fn.Request" -> "_sign_v_1-fn.NF" [label="ARG3-fn.NotExist"]
	"_ask_v_1-fn.Request" -> _client_n_1 [label="ARG2-fn.NotExist"]
	_between_p -> _be_v_id [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
