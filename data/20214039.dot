digraph {
	node [shape=circle style=filled]
	"_stay_v_prd-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_able_a_1 -> "_play_v_1-fn.Competition" [label=ARG2]
	"_replace_v_with-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	focus_d -> _but_c [label=ARG2]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	_the_q -> _major_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_would_v_modal -> _able_a_1 [label=ARG1]
	"_prove_v_to-fn.Evidence" -> _if_x_then [label="ARG2-fn.Theme"]
	_healthy_a_1 -> pron [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_replace_v_with-fn.IN" -> nominalization [label="ARG2-fn.Theme"]
	_if_x_then -> _would_v_modal [label=ARG1]
	"_play_v_1-fn.Competition" -> pron [label="ARG1-fn.Agent"]
	nominalization -> _pitch_v_1 [label=ARG1]
	"_prove_v_to-fn.Evidence" -> pron [label="ARG3-fn.NotExist"]
	"_stay_v_prd-fn.IN" -> _healthy_a_1 [label="ARG2-fn.Theme"]
	_in_p -> _pitch_v_1 [label=ARG1]
	neg -> "_replace_v_with-fn.IN" [label=ARG1]
	_able_a_1 -> pron [label=ARG1]
	_in_p -> _major_n_1 [label=ARG2]
	_if_x_then -> "_stay_v_prd-fn.IN" [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
