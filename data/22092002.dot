digraph {
	node [shape=circle style=filled]
	udef_q -> _software_n_1 [label=BV]
	_in_p -> _leader_n_of [label=ARG1]
	"_know_v_as-fn.IN" -> thing [label="ARG2-fn.Theme"]
	udef_q -> _microprocessor_n_1 [label=BV]
	appos -> _technology_n_1 [label=ARG2]
	udef_q -> _set_n_of [label=BV]
	parg_d -> thing [label=ARG2]
	_a_q -> _leader_n_of [label=BV]
	parg_d -> "_know_v_as-fn.IN" [label=ARG1]
	appos -> _or_c [label=ARG1]
	compound -> _set_n_of [label=ARG1]
	nominalization -> "_know_v_as-fn.IN" [label=ARG1]
	"_combine_v_cause-fn.Amalgamation" -> _and_c [label="ARG2-fn.Patient"]
	udef_q -> _or_c [label=BV]
	compound -> _instruction_n_of [label=ARG2]
	proper_q -> "named(MIPS)" [label=BV]
	udef_q -> _instruction_n_of [label=BV]
	"_know_v_as-fn.IN" -> _or_c [label="ARG3-fn.Predicate"]
	_sophisticated_a_1 -> _software_n_1 [label=ARG1]
	proper_q -> "named(RISC)" [label=BV]
	parg_d -> _instruction_n_of [label=ARG2]
	nominalization -> _compute_v_1 [label=ARG1]
	_a_q -> _technology_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	_be_v_id -> "named(MIPS)" [label=ARG1]
	_reduce_v_1 -> _instruction_n_of [label=ARG2]
	_be_v_id -> _leader_n_of [label=ARG2]
	parg_d -> _reduce_v_1 [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> nominalization [label=ARG1]
	"_combine_v_cause-fn.Amalgamation" -> _technology_n_1 [label="ARG1-fn.Agent"]
	which_q -> thing [label=BV]
}
