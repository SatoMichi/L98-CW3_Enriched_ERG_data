digraph {
	node [shape=circle style=filled]
	_moderate_v_1 -> _people_n_of [label=ARG1]
	_moderate_v_1 -> _view_n_of [label=ARG2]
	poss -> pron [label=ARG2]
	"_offend_v_1-fn.Experiencer_obj" -> pron [label="ARG1-fn.Stimulus"]
	udef_q -> _office_n_1 [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	udef_q -> _white_n_1 [label=BV]
	_in_p_state -> _past_n_1 [label=ARG2]
	_because_x -> _have_v_qmodal [label=ARG1]
	udef_q -> _or_c [label=BV]
	_have_v_qmodal -> _moderate_v_1 [label=ARG1]
	_afford_v_1 -> "_offend_v_1-fn.Experiencer_obj" [label=ARG2]
	poss -> _view_n_of [label=ARG1]
	_in_p_state -> _have_v_qmodal [label=ARG1]
	_because_x -> neg [label=ARG2]
	_can_v_modal -> _afford_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _because_x [label="ARG2-fn.Topic"]
	_afford_v_1 -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _people_n_of [label=BV]
	_have_v_qmodal -> _run_v_for [label=ARG1]
	focus_d -> _have_v_qmodal [label=ARG1]
	_the_q -> _past_n_1 [label=BV]
	udef_q -> _black_n_1 [label=BV]
	"_offend_v_1-fn.Experiencer_obj" -> _or_c [label="ARG2-fn.Experiencer"]
	def_explicit_q -> _view_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_run_v_for -> _people_n_of [label=ARG1]
	_run_v_for -> _office_n_1 [label=ARG2]
	neg -> _can_v_modal [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
