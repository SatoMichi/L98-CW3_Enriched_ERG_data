digraph {
	node [shape=circle style=filled]
	parg_d -> _steel_n_1 [label=ARG2]
	_also_a_1 -> "_hurt_v_1-fn.Cause_to_make_noise" [label=ARG1]
	parg_d -> "_integrate_v_into-fn.Process_end" [label=ARG1]
	udef_q -> _material_n_1 [label=BV]
	parg_d -> "_hurt_v_1-fn.Cause_to_make_noise" [label=ARG1]
	udef_q -> _and_c [label=BV]
	_high_a_1 -> implicit_conj [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _steel_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _company_n_of [label="ARG1-fn.Dependent"]
	poss -> pron [label=ARG2]
	udef_q -> _repair_n_of [label=BV]
	comp -> _high_a_1 [label=ARG1]
	udef_q -> _maintenance_n_1 [label=BV]
	_raw_a_1 -> _material_n_1 [label=ARG1]
	compound -> _steel_n_1 [label=ARG2]
	compound -> _labor_n_1 [label=ARG2]
	poss -> _sector_n_1 [label=ARG1]
	def_explicit_q -> _sector_n_1 [label=BV]
	udef_q -> _labor_n_1 [label=BV]
	"_hurt_v_1-fn.Cause_to_make_noise" -> implicit_conj [label="ARG1-fn.Agent"]
	compound -> _sector_n_1 [label=ARG1]
	compound -> _cost_n_1 [label=ARG1]
	"_hurt_v_1-fn.Cause_to_make_noise" -> _sector_n_1 [label="ARG2-fn.Sound_maker"]
	"_say_v_to-fn.Have_as_requirement" -> _also_a_1 [label="ARG2-fn.Requirement"]
	"_integrate_v_into-fn.Process_end" -> _steel_n_1 [label="ARG2-fn.Final_subevent"]
	_the_q -> _company_n_of [label=BV]
	udef_q -> implicit_conj [label=BV]
	udef_q -> _cost_n_1 [label=BV]
	parg_d -> _sector_n_1 [label=ARG2]
}
