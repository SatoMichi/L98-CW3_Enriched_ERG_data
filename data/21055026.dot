digraph {
	node [shape=circle style=filled]
	_of_p -> _share_n_of [label=ARG1]
	_make_v_1 -> _bid_n_1 [label=ARG2]
	_to_p -> _restriction_n_of [label=ARG1]
	_to_p -> _transaction_n_1 [label=ARG2]
	_prepared_a_1 -> pron [label=ARG1]
	"_remove_v_1-fn.Removing" -> _restriction_n_of [label="ARG2-fn.NotExist"]
	_all_q -> part_of [label=BV]
	compound -> _restriction_n_of [label=ARG1]
	compound -> _government_n_of [label=ARG2]
	udef_q -> _government_n_of [label=BV]
	proper_q -> "named(Jaguar)" [label=BV]
	_the_q -> _share_n_of [label=BV]
	udef_q -> _restriction_n_of [label=BV]
	"_such+a_q" -> _transaction_n_1 [label=BV]
	_the_q -> _company_n_of [label=BV]
	_outstanding_a_1 -> _share_n_of [label=ARG1]
	parg_d -> "_remove_v_1-fn.Removing" [label=ARG1]
	_prepared_a_1 -> _make_v_1 [label=ARG2]
	parg_d -> _restriction_n_of [label=ARG2]
	_for_p -> part_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> _company_n_of [label="ARG1-fn.NotExist"]
	_make_v_1 -> pron [label=ARG1]
	_british_a_1 -> _government_n_of [label=ARG1]
	_for_p -> _bid_n_1 [label=ARG1]
	_of_p -> "named(Jaguar)" [label=ARG2]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.NotExist"]
	_if_x_then -> _prepared_a_1 [label=ARG1]
	part_of -> _share_n_of [label=ARG1]
	_if_x_then -> "_remove_v_1-fn.Removing" [label=ARG2]
	_a_q -> _bid_n_1 [label=BV]
}
