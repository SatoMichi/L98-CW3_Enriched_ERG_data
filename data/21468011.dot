digraph {
	node [shape=circle style=filled]
	comp_equal -> _well_a_1 [label=ARG1]
	"_perform_v_1-fn.Competition" -> "named(Woodstream)" [label="ARG1-fn.Participant_1"]
	"_say_v_to-fn.Cause_to_end" -> "named(Stein)" [label="ARG1-fn.Process"]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(Woodstream)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_marginally/rb_u_unknown" -> _profitable_a_for [label=ARG1]
	proper_q -> "named(Stein)" [label=BV]
	neg -> "_perform_v_1-fn.Competition" [label=ARG1]
	udef_q -> generic_entity [label=BV]
	compound -> "named(Stein)" [label=ARG1]
	comp_equal -> "_expect_v_1-fn.Competition" [label=ARG2]
	_profitable_a_for -> "named(Woodstream)" [label=ARG1]
	_well_a_1 -> "_perform_v_1-fn.Competition" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> _but_c [label="ARG2-fn.Means"]
	"_expect_v_1-fn.Competition" -> generic_entity [label="ARG1-fn.Participant_1"]
}
