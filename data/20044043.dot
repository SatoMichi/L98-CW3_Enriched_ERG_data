digraph {
	node [shape=circle style=filled]
	compound -> "named(John)" [label=ARG2]
	_serious_a_1 -> _take_v_1 [label=ARG1]
	appos -> "named(Cannell)" [label=ARG2]
	proper_q -> "named(Yeargin)" [label=BV]
	poss -> _organization_n_1 [label=ARG2]
	"_at+all_a_1" -> _take_v_1 [label=ARG1]
	_way_n_of -> _and_c [label=ARG1]
	_be_v_id -> nominalization [label=ARG1]
	proper_q -> "named(Cannell)" [label=BV]
	"_look_v_1-fn.Appearance" -> _administrator_n_of [label="ARG1-fn.Stimulus"]
	compound -> _missus_n_1 [label=ARG2]
	focus_d -> _take_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.NotExist"]
	"_in+fact_a_1" -> _take_v_1 [label=ARG1]
	udef_q -> _missus_n_1 [label=BV]
	"_look_v_1-fn.Appearance" -> _take_v_1 [label="ARG2-fn.NotExist"]
	_be_v_id -> _way_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _founder_n_of [label="ARG1-fn.NotExist"]
	_take_v_1 -> pron [label=ARG2]
	neg -> _take_v_1 [label=ARG1]
	nominalization -> "_prosecute_v_1-fn.NF" [label=ARG1]
	_protect_v_1 -> pron [label=ARG2]
	pronoun_q -> pron [label=BV]
	_when_x_subord -> neg [label=ARG2]
	_protect_v_1 -> _administrator_n_of [label=ARG1]
	_the_q -> _organization_n_1 [label=BV]
	def_explicit_q -> _founder_n_of [label=BV]
	nominalization -> _cheat_v_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	_take_v_1 -> nominalization [label=ARG2]
	"_prosecute_v_1-fn.NF" -> "named(Yeargin)" [label="ARG2-fn.Theme"]
	_when_x_subord -> "_look_v_1-fn.Appearance" [label=ARG1]
	compound -> "named(Yeargin)" [label=ARG1]
	appos -> _founder_n_of [label=ARG1]
	_a_q -> _way_n_of [label=BV]
	poss -> _founder_n_of [label=ARG1]
	proper_q -> "named(John)" [label=BV]
	udef_q -> _administrator_n_of [label=BV]
	compound -> "named(Cannell)" [label=ARG1]
}
