digraph {
	node [shape=circle style=filled]
	udef_q -> _software_n_1 [label=BV]
	proper_q -> "named(NEC)" [label=BV]
	_in_p -> _available_a_1 [label=ARG1]
	udef_q -> generic_entity [label=BV]
	"card(10)" -> generic_entity [label=ARG1]
	parg_d -> generic_entity [label=ARG2]
	"_write_v_to-fn.Text_creation" -> generic_entity [label="ARG2-fn.Theme"]
	_of_p -> _package_n_of [label=ARG2]
	_while_x -> _available_a_1 [label=ARG2]
	_available_a_1 -> generic_entity [label=ARG1]
	compound -> _software_n_1 [label=ARG2]
	_the_q -> _standard_n_1 [label=BV]
	"card(8,000)" -> generic_entity [label=ARG1]
	_for_p -> "_write_v_to-fn.Text_creation" [label=ARG1]
	_for_p -> "named(NEC)" [label=ARG2]
	proper_q -> "named(IBM)" [label=BV]
	_about_x_deg -> udef_q [label=ARG1]
	generic_entity -> generic_entity [label=ARG1]
	_in_p -> "named_n(US)" [label=ARG2]
	"card(1000)" -> generic_entity [label=ARG1]
	_the_q -> "named_n(US)" [label=BV]
	parg_d -> "_write_v_to-fn.Text_creation" [label=ARG1]
	"_use_v_1-fn.IN" -> _package_n_of [label="ARG1-fn.NotExist"]
	compound -> _package_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _package_n_of [label=BV]
	compound -> "named(IBM)" [label=ARG2]
	"_say_v_to-fn.IN" -> "_write_v_to-fn.Text_creation" [label="ARG2-fn.Topic"]
	_while_x -> "_say_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_use_v_1-fn.IN" -> _standard_n_1 [label="ARG2-fn.NotExist"]
	compound -> _standard_n_1 [label=ARG1]
	_of_p -> generic_entity [label=ARG1]
}
