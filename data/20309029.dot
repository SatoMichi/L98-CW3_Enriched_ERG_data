digraph {
	node [shape=circle style=filled]
	compound -> _buyer_n_of [label=ARG1]
	compound -> _price_n_of [label=ARG2]
	udef_q -> _price_n_of [label=BV]
	udef_q -> _buyer_n_of [label=BV]
	"_help_v_1-fn.Assistance" -> _buyer_n_of [label="ARG2-fn.NotExist"]
	"_out+of_p" -> _freeze_v_cause [label=ARG1]
	_expand_v_cause -> _program_n_of [label=ARG2]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	udef_q -> "_home_n_of-n" [label=BV]
	udef_q -> _program_n_of [label=BV]
	udef_q -> "_proponents/nns_u_unknown" [label=BV]
	udef_q -> _market_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_high_a_1 -> _price_n_of [label=ARG1]
	_of_p -> nominalization [label=ARG2]
	_freeze_v_cause -> _buyer_n_of [label=ARG2]
	parg_d -> _buyer_n_of [label=ARG2]
	_mere_a_1 -> "_want_v_1-fn.Desiring" [label=ARG1]
	udef_q -> nominalization [label=BV]
	parg_d -> _freeze_v_cause [label=ARG1]
	"_want_v_1-fn.Desiring" -> "_help_v_1-fn.Assistance" [label="ARG2-fn.Theme"]
	nominalization -> _expand_v_cause [label=ARG1]
	"_say_v_to-fn.IN" -> "_want_v_1-fn.Desiring" [label="ARG2-fn.Topic"]
	compound -> _program_n_of [label=ARG1]
	"_help_v_1-fn.Assistance" -> pron [label="ARG1-fn.Agent"]
	compound -> "_home_n_of-n" [label=ARG2]
	compound -> _market_n_1 [label=ARG1]
	"_out+of_p" -> _market_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "_proponents/nns_u_unknown" [label="ARG1-fn.Agent"]
	_of_p -> "_proponents/nns_u_unknown" [label=ARG1]
	compound -> "named(FHA)" [label=ARG2]
	proper_q -> "named(FHA)" [label=BV]
}
