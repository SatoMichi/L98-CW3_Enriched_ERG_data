digraph {
	node [shape=circle style=filled]
	_enough_q -> generic_entity [label=BV]
	proper_q -> "named(Koch)" [label=BV]
	"_announce_v_to-fn.Statement" -> "_drop_v_cause-fn.IN" [label="ARG2-fn.Topic"]
	"card(3,200)" -> _job_n_of [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	compound -> _city_n_1 [label=ARG2]
	"_drop_v_cause-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_be_v_id -> generic_entity [label=ARG2]
	udef_q -> _city_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _payroll_n_1 [label=BV]
	_from_p -> _payroll_n_1 [label=ARG2]
	_from_p -> "_drop_v_cause-fn.IN" [label=ARG1]
	compound -> "named(Koch)" [label=ARG1]
	"_drop_v_cause-fn.IN" -> _job_n_of [label="ARG2-fn.Theme"]
	neg -> _be_v_id [label=ARG1]
	compound -> _payroll_n_1 [label=ARG1]
	udef_q -> _job_n_of [label=BV]
	"_announce_v_to-fn.Statement" -> "named(Koch)" [label="ARG1-fn.Agent"]
	_already_a_1 -> "_announce_v_to-fn.Statement" [label=ARG1]
}
