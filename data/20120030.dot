digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _product_n_1 [label=BV]
	compound -> "named(Lawless)" [label=ARG1]
	compound -> _product_n_1 [label=ARG1]
	udef_q -> part_of [label=BV]
	udef_q -> "named_n(US)" [label=BV]
	poss -> _product_n_1 [label=ARG1]
	proper_q -> "yofc(800)" [label=BV]
	part_of -> _service_n_1 [label=ARG1]
	_the_q -> _service_n_1 [label=BV]
	"_predict_v_1-fn.Predicting" -> _migrate_v_1 [label="ARG2-fn.Topic"]
	"much-many_a" -> part_of [label=ARG1]
	proper_q -> "yofc(900)" [label=BV]
	_to_p -> _migrate_v_1 [label=ARG1]
	_migrate_v_1 -> part_of [label=ARG1]
	focus_d -> "_predict_v_1-fn.Predicting" [label=ARG1]
	proper_q -> "named(Sprint)" [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	proper_q -> "named(Lawless)" [label=BV]
	_to_p -> "card(900)" [label=ARG2]
	compound -> "named(Jack)" [label=ARG2]
	compound -> "yofc(800)" [label=ARG2]
	focus_d -> _migrate_v_1 [label=ARG2]
	compound -> "yofc(900)" [label=ARG2]
	udef_q -> _manager_n_of [label=BV]
	proper_q -> "named(Jack)" [label=BV]
	appos -> "named(Lawless)" [label=ARG1]
	_manager_n_of -> _product_n_1 [label=ARG1]
	number_q -> "card(900)" [label=BV]
	_general_a_1 -> _manager_n_of [label=ARG1]
	compound -> "named(Sprint)" [label=ARG1]
	compound -> _service_n_1 [label=ARG1]
	poss -> "named(Sprint)" [label=ARG2]
	appos -> _manager_n_of [label=ARG2]
	"_predict_v_1-fn.Predicting" -> "named(Lawless)" [label="ARG1-fn.Cause"]
}
