digraph {
	node [shape=circle style=filled]
	_in_p -> _detail_n_1 [label=ARG2]
	_corrupt_a_1 -> pron [label=ARG1]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> _judge_n_of [label="ARG1-fn.NotExist"]
	udef_q -> _state_n_of [label=BV]
	unspec_manner -> _defend_v_from [label=ARG1]
	_wealthy_a_1 -> pron [label=ARG1]
	_if_x_then -> _corrupt_a_1 [label=ARG2]
	_in_p -> _discuss_v_1 [label=ARG1]
	_although_x -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _state_n_of [label=ARG2]
	"_contend_v_1-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	which_q -> manner [label=BV]
	_at_p -> _trial_n_1 [label=ARG2]
	udef_q -> _prosecutor_n_1 [label=BV]
	"_contend_v_1-fn.Statement" -> _if_x_then [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	_defend_v_from -> pron [label=ARG2]
	_discuss_v_1 -> pron [label=ARG1]
	compound -> _prosecutor_n_1 [label=ARG1]
	comp -> _wealthy_a_1 [label=ARG1]
	"_believe_v_1-fn.Opinion" -> _prosecutor_n_1 [label="ARG1-fn.NotExist"]
	def_explicit_q -> _trial_n_1 [label=BV]
	_discuss_v_1 -> _defend_v_from [label=ARG2]
	comp_equal -> "_believe_v_1-fn.Opinion" [label=ARG2]
	comp_equal -> _corrupt_a_1 [label=ARG1]
	_far_x_deg -> comp [label=ARG1]
	_if_x_then -> _would_v_modal [label=ARG1]
	_would_v_modal -> _wealthy_a_1 [label=ARG1]
	_although_x -> "_contend_v_1-fn.Statement" [label=ARG2]
	_the_q -> _judge_n_of [label=BV]
	_can_v_modal -> _discuss_v_1 [label=ARG1]
	udef_q -> _detail_n_1 [label=BV]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	unspec_manner -> manner [label=ARG2]
	neg -> _can_v_modal [label=ARG1]
	poss -> _trial_n_1 [label=ARG1]
	_at_p -> _defend_v_from [label=ARG1]
}
