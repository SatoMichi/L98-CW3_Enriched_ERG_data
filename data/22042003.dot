digraph {
	node [shape=circle style=filled]
	"_see_v_1-fn.State_continue" -> _filing_n_1 [label="ARG2-fn.State"]
	"_see_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	parg_d -> "_base_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(CACI)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Virginia)" [label=BV]
	_the_q -> _filing_n_1 [label=BV]
	proper_q -> "named(Arlington)" [label=BV]
	_in_p -> "named(Virginia)" [label=ARG2]
	udef_q -> _and_c [label=BV]
	_in_p -> "named(CACI)" [label=ARG1]
	"_base_v_1-fn.Change_position_on_a_scale" -> "named(CACI)" [label="ARG2-fn.Item"]
	pronoun_q -> pron [label=BV]
	_no_q -> _comment_n_1 [label=BV]
	"_have_v_1-fn.State_continue" -> _comment_n_1 [label="ARG2-fn.State"]
	proper_q -> "named(Parsow)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _and_c [label="ARG2-fn.Requirement"]
	proper_q -> "named(CACI)" [label=BV]
	neg -> "_see_v_1-fn.State_continue" [label=ARG1]
	parg_d -> "named(CACI)" [label=ARG2]
	"_have_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	proper_q -> "named(Elkhorn)" [label=BV]
	_by_p -> _filing_n_1 [label=ARG1]
	_therefore_a_1 -> "_have_v_1-fn.State_continue" [label=ARG1]
	_by_p -> _and_c [label=ARG2]
	compound -> "named(Virginia)" [label=ARG1]
	"_base_v_1-fn.Change_position_on_a_scale" -> _in_p [label="ARG3-fn.Difference"]
	compound -> "named(Arlington)" [label=ARG2]
}
