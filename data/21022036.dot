digraph {
	node [shape=circle style=filled]
	_the_q -> _attorney_n_1 [label=BV]
	appos -> _attorney_n_1 [label=ARG2]
	proper_q -> "named(Gabriel)" [label=BV]
	_for_p -> "_handle_v_1-fn.Undergo_change" [label=ARG1]
	compound -> "named(Gorenstein)" [label=ARG1]
	compound -> _attorney_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	proper_q -> "named(Gorenstein)" [label=BV]
	def_explicit_q -> _ruling_n_1 [label=BV]
	_about_p -> nominalization [label=ARG2]
	poss -> _ruling_n_1 [label=ARG1]
	parg_d -> _decision_n_1 [label=ARG2]
	proper_q -> "named(W)" [label=BV]
	appos -> "named(Gorenstein)" [label=ARG1]
	"_handle_v_1-fn.Undergo_change" -> _attorney_n_1 [label="ARG1-fn.Entity"]
	"_handle_v_1-fn.Undergo_change" -> _case_n_of [label="ARG2-fn.Final_category"]
	udef_q -> _assistant_n_1 [label=BV]
	_about_p -> "_make_v_1-fn.Rite" [label=ARG1]
	compound -> _assistant_n_1 [label=ARG2]
	_the_q -> _judge_n_of [label=BV]
	_the_q -> "named(FBI)" [label=BV]
	"_appeal_v_1-fn.State_continue" -> _ruling_n_1 [label="ARG2-fn.State"]
	parg_d -> "_make_v_1-fn.Rite" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_make_v_1-fn.Rite" [label="ARG2-fn.Requirement"]
	poss -> _judge_n_of [label=ARG2]
	"_make_v_1-fn.Rite" -> _decision_n_1 [label="ARG2-fn.Member"]
	nominalization -> "_appeal_v_1-fn.State_continue" [label=ARG1]
	compound -> "named(W)" [label=ARG1]
	compound -> "named(Gabriel)" [label=ARG2]
	_the_q -> _case_n_of [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	udef_q -> "named_n(US)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Gorenstein)" [label="ARG1-fn.Dependent"]
	_for_p -> "named(FBI)" [label=ARG2]
	_no_q -> _decision_n_1 [label=BV]
}
