digraph {
	node [shape=circle style=filled]
	udef_q -> _company_n_1 [label=BV]
	_of_p -> "named(Insurance)" [label=ARG1]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	compound -> _company_n_1 [label=ARG2]
	udef_q -> interval [label=BV]
	_of_p -> "named(America)" [label=ARG2]
	compound -> "named(Prudential)" [label=ARG2]
	times -> "card(70)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Insurance)" [label="ARG1-fn.NotExist"]
	compound -> _account_n_of [label=ARG1]
	poss -> _account_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	times -> "card(60)" [label=ARG2]
	interval_p_start -> interval [label=ARG1]
	proper_q -> "named(Prudential)" [label=BV]
	compound -> interval [label=ARG2]
	times -> "card(1000000)" [label=ARG3]
	def_explicit_q -> _account_n_of [label=BV]
	"card(4)" -> _agency_n_1 [label=ARG1]
	_pitch_v_1 -> _agency_n_1 [label=ARG1]
	eventuality -> _pitch_v_1 [label=ARG1]
	"_select_v_1-fn.Choosing" -> _agency_n_1 [label="ARG2-fn.NotExist"]
	udef_q -> _agency_n_1 [label=BV]
	proper_q -> "named(Insurance)" [label=BV]
	interval_p_start -> _dollar_n_1 [label=ARG2]
	_pitch_v_1 -> _account_n_of [label=ARG2]
	interval_p_end -> interval [label=ARG1]
	compound -> "named(Insurance)" [label=ARG1]
	interval_p_end -> _dollar_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "_select_v_1-fn.Choosing" [label="ARG2-fn.NotExist"]
	"_select_v_1-fn.Choosing" -> pron [label="ARG1-fn.NotExist"]
	proper_q -> "named(America)" [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
}
