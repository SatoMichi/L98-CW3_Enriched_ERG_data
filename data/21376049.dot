digraph {
	node [shape=circle style=filled]
	_in_p -> "_publicist/nn_u_unknown" [label=ARG1]
	appos -> "named(Kessler)" [label=ARG1]
	"_try_v_1-fn.Attempt" -> _journalist_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(New)" [label=ARG2]
	"_get_v_1-fn.IN" -> _attention_n_to [label="ARG2-fn.Theme"]
	proper_q -> "named(Kessler)" [label=BV]
	"_use_v_1-fn.IN" -> "_get_v_1-fn.IN" [label="ARG3-fn.NotExist"]
	udef_q -> _journalist_n_1 [label=BV]
	proper_q -> "named(New)" [label=BV]
	compound -> "named(Len)" [label=ARG2]
	"_use_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	"_use_v_1-fn.IN" -> "named(Kessler)" [label="ARG1-fn.NotExist"]
	"_avoid_v_1-fn.Avoiding" -> pron [label="ARG2-fn.Theme"]
	"_get_v_1-fn.IN" -> "named(Kessler)" [label="ARG1-fn.Agent"]
	_financial_a_1 -> "_publicist/nn_u_unknown" [label=ARG1]
	_of_p -> _journalist_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	_the_q -> _attention_n_to [label=BV]
	_sometimes_a_1 -> "_use_v_1-fn.IN" [label=ARG1]
	compound -> "named(York)" [label=ARG1]
	_of_p -> _attention_n_to [label=ARG1]
	"_avoid_v_1-fn.Avoiding" -> _journalist_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(Len)" [label=BV]
	appos -> "_publicist/nn_u_unknown" [label=ARG2]
	_in_p -> "named(York)" [label=ARG2]
	compound -> "named(Kessler)" [label=ARG1]
	_a_q -> "_publicist/nn_u_unknown" [label=BV]
	proper_q -> "named(York)" [label=BV]
	"_try_v_1-fn.Attempt" -> "_avoid_v_1-fn.Avoiding" [label="ARG2-fn.Theme"]
}
