digraph {
	node [shape=circle style=filled]
	"_be_v_id-fn.Assemble" -> nominalization [label="ARG2-fn.Group"]
	_to_p -> _fan_n_1 [label=ARG2]
	udef_q -> _buyer_n_of [label=BV]
	_the_q -> _state_n_of [label=BV]
	_of_p -> _state_n_of [label=ARG1]
	udef_q -> nominalization [label=BV]
	which_q -> thing [label=BV]
	compound -> _junk_n_1 [label=ARG2]
	"_say_v_about-fn.Needing" -> thing [label="ARG2-fn.Requirement"]
	"_say_v_about-fn.Needing" -> _rejection_n_1 [label="ARG1-fn.Cognizer"]
	"_be_v_id-fn.Assemble" -> _news_n_of [label="ARG1-fn.Individuals"]
	compound -> _buyer_n_of [label=ARG1]
	_the_q -> _rejection_n_1 [label=BV]
	_state_n_of -> _mind_n_1 [label=ARG1]
	udef_q -> _mind_n_1 [label=BV]
	_to_p -> _news_n_of [label=ARG1]
	_of_p -> _credit_n_1 [label=ARG2]
	_of_p -> _buyer_n_of [label=ARG2]
	udef_q -> _credit_n_1 [label=BV]
	udef_q -> _fan_n_1 [label=BV]
	_the_q -> _news_n_of [label=BV]
	udef_q -> _junk_n_1 [label=BV]
	"_at+least_a_1" -> "_be_v_id-fn.Assemble" [label=ARG1]
	nominalization -> "_say_v_about-fn.Needing" [label=ARG1]
	_stable_a_1 -> _credit_n_1 [label=ARG1]
	"_say_v_about-fn.Needing" -> _state_n_of [label="ARG3-fn.Dependent"]
	"_good_a_at-for-of" -> _news_n_of [label=ARG1]
	_of_p -> _fan_n_1 [label=ARG1]
}
