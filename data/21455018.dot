digraph {
	node [shape=circle style=filled]
	poss -> _plan_n_1 [label=ARG1]
	parg_d -> implicit_conj [label=ARG2]
	_the_q -> _center_n_of [label=BV]
	parg_d -> "_make_v_1-fn.Building" [label=ARG1]
	_recycle_v_1 -> implicit_conj [label=ARG2]
	udef_q -> part_of [label=BV]
	parg_d -> _execute_v_1 [label=ARG1]
	proper_q -> "named(McDonough)" [label=BV]
	parg_d -> _recycle_v_1 [label=ARG1]
	"much-many_a" -> part_of [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_execute_v_1 -> _plan_n_1 [label=ARG2]
	def_explicit_q -> _plan_n_1 [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_get_v_state-fn.IN" -> _plan_n_1 [label="ARG1-fn.NotExist"]
	part_of -> _center_n_of [label=ARG1]
	comp_equal -> "much-many_a" [label=ARG1]
	compound -> "named(McDonough)" [label=ARG1]
	parg_d -> _plan_n_1 [label=ARG2]
	udef_q -> _steel_n_1 [label=BV]
	udef_q -> implicit_conj [label=BV]
	poss -> "_rubble/nn_u_unknown" [label=ARG1]
	udef_q -> _aluminum_n_1 [label=BV]
	_from_p -> "_rubble/nn_u_unknown" [label=ARG2]
	"_get_v_state-fn.IN" -> _execute_v_1 [label="ARG2-fn.Patient"]
	_if_x_then -> "_get_v_state-fn.IN" [label=ARG2]
	_from_p -> _recycle_v_1 [label=ARG1]
	"_make_v_1-fn.Building" -> part_of [label="ARG2-fn.Product"]
	_possible_a_for -> part_of [label=ARG1]
	_from_p -> implicit_conj [label=ARG2]
	_if_x_then -> "_make_v_1-fn.Building" [label=ARG1]
	_from_p -> "_make_v_1-fn.Building" [label=ARG1]
	udef_q -> _glass_n_of [label=BV]
	poss -> "named(Warsaw)" [label=ARG2]
	_abundant_a_1 -> "_rubble/nn_u_unknown" [label=ARG1]
	parg_d -> part_of [label=ARG2]
	comp_equal -> _possible_a_for [label=ARG1]
	udef_q -> _and_c [label=BV]
	poss -> "named(McDonough)" [label=ARG2]
	proper_q -> "named(Warsaw)" [label=BV]
	_polish_a_1 -> _center_n_of [label=ARG1]
	def_explicit_q -> "_rubble/nn_u_unknown" [label=BV]
}
