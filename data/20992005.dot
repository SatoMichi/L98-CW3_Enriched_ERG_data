digraph {
	node [shape=circle style=filled]
	_the_q -> "named(Tribune)" [label=BV]
	"_contend_v_1-fn.Statement" -> "_base_v_1-fn.NF" [label="ARG2-fn.Theme"]
	_valid_a_1 -> _test_n_of [label=ARG1]
	parg_d -> "_prove_v_to-fn.Reasoning" [label=ARG1]
	udef_q -> _test_n_of [label=BV]
	parg_d -> _assumption_n_1 [label=ARG2]
	"_contend_v_1-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_on_p -> _assumption_n_1 [label=ARG2]
	"_prove_v_to-fn.Reasoning" -> _assumption_n_1 [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(Tribune)" [label="ARG1-fn.Agent"]
	parg_d -> pron [label=ARG2]
	"_base_v_1-fn.NF" -> _on_p [label="ARG3-fn.Source"]
	pronoun_q -> pron [label=BV]
	focus_d -> "_contend_v_1-fn.Statement" [label=ARG2]
	"_not+yet_a_1" -> "_prove_v_to-fn.Reasoning" [label=ARG1]
	_in_p -> "_prove_v_to-fn.Reasoning" [label=ARG1]
	"_say_v_to-fn.IN" -> "_contend_v_1-fn.Statement" [label="ARG2-fn.Topic"]
	"_base_v_1-fn.NF" -> pron [label="ARG2-fn.Theme"]
	_a_q -> _assumption_n_1 [label=BV]
	_in_p -> _test_n_of [label=ARG2]
	_on_p -> pron [label=ARG1]
	parg_d -> "_base_v_1-fn.NF" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
