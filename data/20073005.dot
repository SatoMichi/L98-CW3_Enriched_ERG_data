digraph {
	node [shape=circle style=filled]
	neg -> "_exercise_v_1-fn.Competition" [label=ARG1]
	"_operate_v_1-fn.State_continue" -> _hotel_n_1 [label="ARG2-fn.State"]
	_other_a_1 -> _shareholder_n_1 [label=ARG1]
	udef_q -> _hotel_n_1 [label=BV]
	"_operate_v_1-fn.State_continue" -> "named(Integra)" [label="ARG1-fn.Entity"]
	parg_d -> _right_n_1 [label=ARG2]
	proper_q -> "named(Integra)" [label=BV]
	"_agree_v_1-fn.State_continue" -> "_exercise_v_1-fn.Competition" [label="ARG2-fn.State"]
	"_own_v_1-fn.Expectation" -> "named(Integra)" [label="ARG1-fn.Cognizer"]
	proper_q -> "named(Group)" [label=BV]
	compound -> _inc_n_1 [label=ARG2]
	"_agree_v_1-fn.State_continue" -> "named(Group)" [label="ARG1-fn.Entity"]
	"_say_v_to-fn.Taking" -> "_agree_v_1-fn.State_continue" [label="ARG2-fn.Theme"]
	compound -> "named(Hallwood)" [label=ARG2]
	proper_q -> "named(Hallwood)" [label=BV]
	parg_d -> "_exercise_v_1-fn.Competition" [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	"_say_v_to-fn.Taking" -> "named(Integra)" [label="ARG1-fn.Agent"]
	udef_q -> _shareholder_n_1 [label=BV]
	"_exercise_v_1-fn.Competition" -> _right_n_1 [label="ARG2-fn.Participant_2"]
	"_exercise_v_1-fn.Competition" -> "named(Group)" [label="ARG1-fn.Participant_1"]
	_any_q -> _right_n_1 [label=BV]
	"_own_v_1-fn.Expectation" -> _hotel_n_1 [label="ARG2-fn.Phenomenon"]
	compound -> "named(Group)" [label=ARG1]
	"_exercise_v_1-fn.Competition" -> _shareholder_n_1 [label="ARG1-fn.Participant_1"]
}
