digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	focus_d -> _in_p_state [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> "named(Skase)" [label="ARG1-fn.Process"]
	udef_q -> _group_n_of [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "_show_v_1-fn.Competition" [label="ARG2-fn.Means"]
	proper_q -> "named(Skase)" [label=BV]
	udef_q -> "_depreciation/nn_u_unknown" [label=BV]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	udef_q -> _tax_n_1 [label=BV]
	times -> "card(1000000)" [label=ARG3]
	udef_q -> _profit_n_1 [label=BV]
	udef_q -> _account_n_of [label=BV]
	"_exceed_v_1-fn.Competition" -> "_a$_n_1" [label="ARG2-fn.Participant_2"]
	udef_q -> _and_c [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_in_p_state -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_before_p -> implicit_conj [label=ARG2]
	poss -> pron [label=ARG2]
	"card(1000000)" -> "_a$_n_1" [label=ARG1]
	compound -> _group_n_of [label=ARG2]
	compound -> _profit_n_1 [label=ARG1]
	poss -> _statement_n_of [label=ARG1]
	_before_p -> _profit_n_1 [label=ARG1]
	_preliminary_a_1 -> _account_n_of [label=ARG1]
	compound -> "named(Skase)" [label=ARG1]
	udef_q -> _interest_n_in [label=BV]
	times -> "card(170)" [label=ARG2]
	"_exceed_v_1-fn.Competition" -> _profit_n_1 [label="ARG1-fn.Participant_1"]
	def_explicit_q -> _statement_n_of [label=BV]
	"_show_v_1-fn.Competition" -> _account_n_of [label="ARG1-fn.Participant_1"]
	_in_p_state -> _statement_n_of [label=ARG2]
	"_show_v_1-fn.Competition" -> "_exceed_v_1-fn.Competition" [label="ARG2-fn.Participant_2"]
	udef_q -> implicit_conj [label=BV]
	udef_q -> "_a$_n_1" [label=BV]
}
