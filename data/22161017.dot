digraph {
	node [shape=circle style=filled]
	"_good_a_at-for-of" -> _place_n_of [label=ARG1]
	_basic_a_1 -> _need_n_of [label=ARG1]
	_for_p -> _need_n_of [label=ARG1]
	_be_v_id -> _office_n_of [label=ARG1]
	"_in+order+to_x" -> _be_v_id [label=ARG1]
	comp_equal -> _need_n_of [label=ARG2]
	udef_q -> _or_c [label=BV]
	udef_q -> _food_n_1 [label=BV]
	comp_equal -> generic_entity [label=ARG2]
	_the_q -> _office_n_of [label=BV]
	_powerful_a_1 -> _need_n_of [label=ARG1]
	_do_v_1 -> pron [label=ARG2]
	_touch_v_1 -> _need_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_the_q -> _need_n_of [label=BV]
	comp_equal -> "_good_a_at-for-of" [label=ARG1]
	_any_q -> generic_entity [label=BV]
	udef_q -> _sleep_n_1 [label=BV]
	"_insist_v_1-fn.Statement" -> _and_c [label="ARG2-fn.Topic"]
	"_insist_v_1-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_also_a_1 -> "_insist_v_1-fn.Statement" [label=ARG1]
	_a_q -> _place_n_of [label=BV]
	"_in+order+to_x" -> _do_v_1 [label=ARG2]
	_do_v_1 -> _office_n_of [label=ARG1]
	comp_equal -> _powerful_a_1 [label=ARG1]
	_a_q -> _need_n_of [label=BV]
	_be_v_id -> _place_n_of [label=ARG2]
	_for_p -> _or_c [label=ARG2]
}
