digraph {
	node [shape=circle style=filled]
	"_in+fact_a_1" -> "_deny_v_to-fn.Statement" [label=ARG1]
	"_say_v_1-fn.IN" -> "named(Ross)" [label="ARG1-fn.Agent"]
	"_say_v_1-fn.IN" -> thing [label="ARG2-fn.Topic"]
	focus_d -> "_say_v_1-fn.IN" [label=ARG1]
	poss -> pron [label=ARG2]
	every_q -> thing [label=BV]
	proper_q -> "named(Peters)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_deny_v_to-fn.Statement" -> "named(Warner)" [label="ARG1-fn.Agent"]
	udef_q -> _mister_n_1 [label=BV]
	compound -> "named(Peters)" [label=ARG1]
	"_say_v_1-fn.IN" -> "_thing_n_of-about" [label="ARG2-fn.Topic"]
	"_say_v_1-fn.IN" -> _and_c [label="ARG1-fn.Agent"]
	_any_q -> "_thing_n_of-about" [label=BV]
	_in_p -> "_affidavits/nns_u_unknown" [label=ARG2]
	_ever_a_1 -> "_say_v_1-fn.IN" [label=ARG1]
	_such_a_1 -> "_thing_n_of-about" [label=ARG1]
	compound -> "named(Ross)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Guber)" [label=ARG1]
	_in_p -> "_say_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Guber)" [label=BV]
	def_explicit_q -> "_affidavits/nns_u_unknown" [label=BV]
	proper_q -> "named(Ross)" [label=BV]
	_virtual_a_1 -> "_say_v_1-fn.IN" [label=ARG1]
	"_deny_v_to-fn.Statement" -> _virtual_a_1 [label="ARG2-fn.Predicate"]
	proper_q -> "named(Warner)" [label=BV]
	focus_d -> thing [label=ARG2]
	udef_q -> _and_c [label=BV]
	"_deny_v_to-fn.Statement" -> "_say_v_1-fn.IN" [label="ARG2-fn.Predicate"]
	poss -> "_affidavits/nns_u_unknown" [label=ARG1]
}
