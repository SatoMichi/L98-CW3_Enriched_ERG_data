digraph {
	node [shape=circle style=filled]
	_if_x_then -> "_invest_v_1-fn.Competition" [label=ARG2]
	proper_q -> "named(Oklahoma)" [label=BV]
	"_invest_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_in_p -> _offering_n_of [label=ARG2]
	appos -> "named(Russell)" [label=ARG1]
	focus_d -> "_would_v_modal-fn.Cause_to_end" [label=ARG2]
	"card(10,000)" -> _dollar_n_1 [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	compound -> "named(E)" [label=ARG1]
	_a_q -> _manager_n_of [label=BV]
	"_say_v_to-fn.Surpassing" -> "named(Russell)" [label="ARG1-fn.Standard_item"]
	_worth_a_1 -> _dollar_n_1 [label=ARG2]
	_worth_a_1 -> pron [label=ARG1]
	times -> "card(5)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	loc_nonsp -> _worth_a_1 [label=ARG1]
	_initial_a_1 -> _offering_n_of [label=ARG1]
	compound -> "named(Oklahoma)" [label=ARG1]
	udef_q -> _money_n_1 [label=BV]
	"_would_v_modal-fn.Cause_to_end" -> _worth_a_1 [label="ARG1-fn.Process"]
	proper_q -> "named(Fredric)" [label=BV]
	_over_x_deg -> _well_x_deg [label=ARG1]
	compound -> "named(Russell)" [label=ARG1]
	_the_q -> _offering_n_of [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
	compound -> "named(Fredric)" [label=ARG2]
	"_invest_v_1-fn.Competition" -> _dollar_n_1 [label="ARG2-fn.Participant_2"]
	compound -> _money_n_1 [label=ARG2]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	_in_p_temp -> "_invest_v_1-fn.Competition" [label=ARG1]
	_in_p_temp -> "yofc(1962)" [label=ARG2]
	compound -> "named(Tulsa)" [label=ARG2]
	"_say_v_to-fn.Surpassing" -> _if_x_then [label="ARG2-fn.Profiled_item"]
	_public_a_1 -> _offering_n_of [label=ARG1]
	_in_p -> "_invest_v_1-fn.Competition" [label=ARG1]
	appos -> _manager_n_of [label=ARG2]
	focus_d -> "_say_v_to-fn.Surpassing" [label=ARG1]
	_today_a_1 -> time_n [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	proper_q -> "named(Tulsa)" [label=BV]
	proper_q -> "yofc(1962)" [label=BV]
	def_implicit_q -> time_n [label=BV]
	_well_x_deg -> _over_x_deg [label=ARG1]
	compound -> _manager_n_of [label=ARG1]
	proper_q -> "named(Russell)" [label=BV]
	proper_q -> "named(E)" [label=BV]
	_if_x_then -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
}
