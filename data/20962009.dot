digraph {
	node [shape=circle style=filled]
	_a_q -> "_host_n_of-to" [label=BV]
	poss -> pron [label=ARG2]
	"_criticize_v_for-as-fn.Judgment_communication" -> "named(Vila)" [label="ARG1-fn.Agent"]
	compound -> _mister_n_1 [label=ARG2]
	_a_q -> _interview_n_1 [label=BV]
	_in_p_state -> "_criticize_v_for-as-fn.Judgment_communication" [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	compound -> "named(Vila)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_new_a_1 -> "_host_n_of-to" [label=ARG1]
	"_continue_v_1-fn.Process_continue" -> _show_n_of [label="ARG1-fn.NotExist"]
	_with_p -> "_continue_v_1-fn.Process_continue" [label=ARG1]
	_old_a_1 -> _show_n_of [label=ARG1]
	def_explicit_q -> _show_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	focus_d -> "_criticize_v_for-as-fn.Judgment_communication" [label=ARG1]
	poss -> _show_n_of [label=ARG1]
	_in_p_state -> _interview_n_1 [label=ARG2]
	"_criticize_v_for-as-fn.Judgment_communication" -> _show_n_of [label="ARG2-fn.Theme"]
	proper_q -> "named(Vila)" [label=BV]
	_with_p -> "_host_n_of-to" [label=ARG2]
}
