digraph {
	node [shape=circle style=filled]
	_the_q -> _or_c [label=BV]
	compound -> "named(New)" [label=ARG2]
	_only_a_1 -> _seek_v_1 [label=ARG1]
	compound -> "named(Dow)" [label=ARG2]
	udef_q -> _average_n_of [label=BV]
	proper_q -> "named(New)" [label=BV]
	proper_q -> "named(Dow)" [label=BV]
	udef_q -> "named(Jones)" [label=BV]
	udef_q -> _market_n_1 [label=BV]
	_prop_v_up -> _or_c [label=ARG2]
	_of_p -> nominalization [label=ARG1]
	compound -> _average_n_of [label=ARG1]
	_of_p -> _market_n_1 [label=ARG2]
	_a_q -> _level_n_1 [label=BV]
	compound -> _stock_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	compound -> "named(York)" [label=ARG1]
	compound -> _exchange_n_1 [label=ARG1]
	_seek_v_1 -> pron [label=ARG1]
	_prop_v_up -> pron [label=ARG1]
	"_maintain_v_1-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_at_p -> _level_n_1 [label=ARG2]
	"_maintain_v_1-fn.Statement" -> nominalization [label="ARG2-fn.Theme"]
	udef_q -> _exchange_n_1 [label=BV]
	_particular_a_1 -> _level_n_1 [label=ARG1]
	_should_v_modal -> _only_a_1 [label=ARG1]
	proper_q -> "named(York)" [label=BV]
	compound -> "named(Jones)" [label=ARG1]
	_seek_v_1 -> _not_c [label=ARG2]
	_at_p -> _prop_v_up [label=ARG1]
	_the_q -> nominalization [label=BV]
	nominalization -> _function_v_1 [label=ARG1]
}
