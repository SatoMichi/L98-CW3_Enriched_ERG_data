digraph {
	node [shape=circle style=filled]
	loc_nonsp -> _run_v_1 [label=ARG1]
	parg_d -> _own_v_1 [label=ARG1]
	compound -> "named(Luzon)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_model_n_of -> _way_n_of [label=ARG1]
	_the_q -> _way_n_of [label=BV]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	udef_q -> _mister_n_1 [label=BV]
	_should_v_modal -> _run_v_1 [label=ARG1]
	_a_q -> _model_n_of [label=BV]
	parg_d -> _run_v_1 [label=ARG1]
	compound -> _public_n_1 [label=ARG2]
	_be_v_id -> generic_entity [label=ARG1]
	compound -> _own_v_1 [label=ARG1]
	udef_q -> _public_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	loc_nonsp -> _way_n_of [label=ARG2]
	focus_d -> "_want_v_1-fn.Desiring" [label=ARG2]
	_this_q_dem -> generic_entity [label=BV]
	_run_v_1 -> _company_n_of [label=ARG2]
	"_want_v_1-fn.Desiring" -> _be_v_id [label="ARG2-fn.Theme"]
	parg_d -> _company_n_of [label=ARG2]
	_a_q -> _company_n_of [label=BV]
	"_say_v_to-fn.IN" -> "_want_v_1-fn.Desiring" [label="ARG2-fn.Topic"]
	proper_q -> "named(Luzon)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Luzon)" [label="ARG1-fn.Agent"]
	_be_v_id -> _model_n_of [label=ARG2]
	_own_v_1 -> _company_n_of [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
