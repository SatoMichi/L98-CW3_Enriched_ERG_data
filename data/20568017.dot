digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _business_n_1 [label=BV]
	compound -> _system_n_of [label=ARG1]
	_away_p_dir -> "_move_v_1-fn.Competition" [label=ARG1]
	_on_p -> _machine_n_1 [label=ARG2]
	poss -> _equipment_n_1 [label=ARG1]
	poss -> _business_n_1 [label=ARG1]
	"card(1)" -> _manufacturer_n_of [label=ARG1]
	"_want_v_1-fn.Competition" -> _customer_n_of [label="ARG1-fn.Participant_1"]
	"_want_v_1-fn.Competition" -> "_move_v_1-fn.Competition" [label="ARG2-fn.Participant_2"]
	def_explicit_q -> _machine_n_1 [label=BV]
	"_use_v_1-fn.Piracy" -> _system_n_of [label="ARG2-fn.Vehicle"]
	nominalization -> "_use_v_1-fn.Piracy" [label=ARG1]
	"_work_v_1-fn.Piracy" -> _system_n_of [label="ARG1-fn.Perpetrator"]
	_any_q -> person [label=BV]
	udef_q -> nominalization [label=BV]
	_on_p -> "_work_v_1-fn.Piracy" [label=ARG1]
	appos -> _system_n_of [label=ARG1]
	nominalization -> _operate_v_1 [label=ARG1]
	_because_x -> "_bet_v_on-fn.Impact" [label=ARG2]
	"_be_v_nv-fn.Experiencer_obj" -> _because_x [label="ARG2-fn.Stimulus"]
	_huge_a_1 -> _problem_n_of [label=ARG1]
	"_bet_v_on-fn.Impact" -> _business_n_1 [label="ARG2-fn.Result"]
	_if_x_then -> "_in+order+to_x" [label=ARG2]
	proper_q -> "named(Unisys)" [label=BV]
	def_explicit_q -> _equipment_n_1 [label=BV]
	_from_p -> nominalization [label=ARG2]
	compound -> nominalization [label=ARG2]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	"_be_v_id-fn.Residence" -> _problem_n_of [label="ARG2-fn.Location"]
	_on_p -> _equipment_n_1 [label=ARG2]
	_almost_x_deg -> person [label=ARG1]
	udef_q -> _manufacturer_n_of [label=BV]
	"_bet_v_on-fn.Impact" -> _assumption_n_1 [label="ARG3-fn.Time"]
	_toward_p -> _system_n_of [label=ARG2]
	"_in+order+to_x" -> "_be_v_nv-fn.Experiencer_obj" [label=ARG1]
	"_move_v_1-fn.Competition" -> _customer_n_of [label="ARG1-fn.Participant_1"]
	"_would_v_modal-fn.Cause_to_end" -> "_be_v_id-fn.Residence" [label="ARG1-fn.Process"]
	poss -> _manufacturer_n_of [label=ARG2]
	udef_q -> _system_n_of [label=BV]
	_the_q -> _assumption_n_1 [label=BV]
	udef_q -> _customer_n_of [label=BV]
	appos -> "named(Unix)" [label=ARG2]
	_only_x_deg -> "card(1)" [label=ARG1]
	_a_q -> _problem_n_of [label=BV]
	poss -> person [label=ARG2]
	_on_p -> "_run_v_1-fn.Competition" [label=ARG1]
	poss -> _machine_n_1 [label=ARG1]
	"_run_v_1-fn.Competition" -> _system_n_of [label="ARG1-fn.Participant_1"]
	"_bet_v_on-fn.Impact" -> "named(Unisys)" [label="ARG1-fn.Place"]
	_assumption_n_1 -> "_want_v_1-fn.Competition" [label=ARG1]
	_mainly_x_deg -> proper_q [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	"_in+order+to_x" -> _continue_v_1 [label=ARG2]
	_toward_p -> "_move_v_1-fn.Competition" [label=ARG1]
	_from_p -> "_move_v_1-fn.Competition" [label=ARG1]
	"_be_v_id-fn.Residence" -> generic_entity [label="ARG1-fn.Resident"]
	proper_q -> "named(Unix)" [label=BV]
	_if_x_then -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
	"_be_v_nv-fn.Experiencer_obj" -> pron [label="ARG1-fn.Experiencer"]
}
