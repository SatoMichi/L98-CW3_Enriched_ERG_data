digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Have_as_requirement" -> "named(Watkins)" [label="ARG1-fn.Dependent"]
	compound -> _spokesman_n_1 [label=ARG1]
	proper_q -> "named(Ford)" [label=BV]
	"_seek_v_1-fn.State_continue" -> _meeting_n_of [label="ARG2-fn.State"]
	_in_p -> "named(London)" [label=ARG2]
	compound -> _shareholder_n_1 [label=ARG2]
	udef_q -> _shareholder_n_1 [label=BV]
	_decision_n_1 -> "_seek_v_1-fn.State_continue" [label=ARG1]
	neg -> "_make_v_1-fn.Rite" [label=ARG1]
	compound -> "named(Watkins)" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	focus_d -> "_make_v_1-fn.Rite" [label=ARG2]
	compound -> "named(Ford)" [label=ARG2]
	"_make_v_1-fn.Rite" -> pron [label="ARG1-fn.Leader"]
	compound -> "named(Martyn)" [label=ARG2]
	appos -> "named(Watkins)" [label=ARG1]
	compound -> _meeting_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_a_q -> _meeting_n_of [label=BV]
	compound -> "named(Jaguar)" [label=ARG2]
	proper_q -> "named(Jaguar)" [label=BV]
	appos -> _spokesman_n_1 [label=ARG2]
	proper_q -> "named(London)" [label=BV]
	_in_p -> _spokesman_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	"_make_v_1-fn.Rite" -> _decision_n_1 [label="ARG2-fn.Member"]
	_special_a_1 -> _meeting_n_of [label=ARG1]
	proper_q -> "named(Watkins)" [label=BV]
	_that_q_dem -> _decision_n_1 [label=BV]
	proper_q -> "named(Martyn)" [label=BV]
	_a_q -> _spokesman_n_1 [label=BV]
}
