digraph {
	node [shape=circle style=filled]
	"_be_v_there-fn.Needing" -> _interest_n_in [label="ARG1-fn.Cognizer"]
	"_admit_v_to-fn.Have_as_requirement" -> "named(Nakazato)" [label="ARG1-fn.Dependent"]
	def_explicit_q -> generic_entity [label=BV]
	"_admit_v_to-fn.Have_as_requirement" -> _and_c [label="ARG2-fn.Requirement"]
	_the_q -> _idea_n_of [label=BV]
	proper_q -> "named(Nakazato)" [label=BV]
	compound -> "named(Takashimaya)" [label=ARG2]
	comp -> generic_entity [label=ARG2]
	_a_q -> _manager_n_of [label=BV]
	poss -> generic_entity [label=ARG1]
	compound -> "named(Eiji)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	comp -> _similar_a_to [label=ARG1]
	poss -> pron [label=ARG2]
	appos -> "named(Nakazato)" [label=ARG1]
	poss -> _company_n_of [label=ARG2]
	proper_q -> "named(Eiji)" [label=BV]
	proper_q -> "named(Saks)" [label=BV]
	compound -> "named(Nakazato)" [label=ARG1]
	appos -> _manager_n_of [label=ARG2]
	poss -> "named(Saks)" [label=ARG2]
	_some_q -> _interest_n_in [label=BV]
	_similar_a_to -> _image_n_of [label=ARG1]
	poss -> _image_n_of [label=ARG1]
	_general_a_1 -> _manager_n_of [label=ARG1]
	_interest_n_in -> _idea_n_of [label=ARG1]
	def_explicit_q -> _company_n_of [label=BV]
	def_explicit_q -> _image_n_of [label=BV]
	compound -> _manager_n_of [label=ARG1]
	proper_q -> "named(Takashimaya)" [label=BV]
}
