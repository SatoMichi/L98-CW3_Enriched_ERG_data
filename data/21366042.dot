digraph {
	node [shape=circle style=filled]
	focus_d -> _at_p_temp [label=ARG2]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.Topic"]
	udef_q -> _senator_n_1 [label=BV]
	_at_p_temp -> "_say_v_to-fn.IN" [label=ARG1]
	poss -> _insistence_n_on [label=ARG1]
	proper_q -> "named(Wall)" [label=BV]
	"_out+of_p" -> "_roadblocks/nns_u_unknown" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_out+of_p" -> _way_n_of [label=ARG2]
	_if_x_then -> _could_v_modal [label=ARG2]
	_the_q -> _way_n_of [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Gonzalez)" [label=BV]
	_at_p_temp -> _time_n_of [label=ARG2]
	_some_q_indiv -> _understanding_n_of [label=BV]
	_insistence_n_on -> "named(Wall)" [label=ARG1]
	"_tell_v_1-fn.Telling" -> _senator_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(Garn)" [label=BV]
	_on_p -> _insistence_n_on [label=ARG2]
	"_get_v_state-fn.IN" -> "_roadblocks/nns_u_unknown" [label="ARG2-fn.Patient"]
	_could_v_modal -> _be_v_there [label=ARG1]
	pronoun_q -> pron [label=BV]
	_the_q -> _time_n_of [label=BV]
	_be_v_there -> _understanding_n_of [label=ARG1]
	compound -> "named(Gonzalez)" [label=ARG1]
	_could_v_modal -> "_get_v_state-fn.IN" [label=ARG1]
	"_get_v_state-fn.IN" -> "_out+of_p" [label="ARG3-fn.NotExist"]
	poss -> "named(Garn)" [label=ARG2]
	_on_p -> _understanding_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Gonzalez)" [label="ARG1-fn.Agent"]
	_several_a_1 -> _senator_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.Topic"]
	def_explicit_q -> _insistence_n_on [label=BV]
	"_tell_v_1-fn.Telling" -> _if_x_then [label="ARG3-fn.Recipient"]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.Agent"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_some_q -> "_roadblocks/nns_u_unknown" [label=BV]
}
