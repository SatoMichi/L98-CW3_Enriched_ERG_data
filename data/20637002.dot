digraph {
	node [shape=circle style=filled]
	udef_q -> _term_n_of [label=BV]
	udef_q -> _finance_n_1 [label=BV]
	compound -> _term_n_of [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	compound -> "named(Vaux)" [label=ARG1]
	parg_d -> _proceeds_n_1 [label=ARG2]
	focus_d -> "_use_v_1-fn.Cause_to_end" [label=ARG2]
	udef_q -> _and_c [label=BV]
	_the_q -> _concern_n_1 [label=BV]
	compound -> _and_c [label=ARG2]
	_at_p -> _debt_n_1 [label=ARG1]
	udef_q -> _vice_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_use_v_1-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	udef_q -> _debt_n_1 [label=BV]
	compound -> "named(Robert)" [label=ARG2]
	proper_q -> "named(Vaux)" [label=BV]
	parg_d -> "_use_v_1-fn.Cause_to_end" [label=ARG1]
	udef_q -> _proceeds_n_1 [label=BV]
	udef_q -> _food_n_1 [label=BV]
	compound -> _concern_n_1 [label=ARG1]
	"_use_v_1-fn.Cause_to_end" -> "_reduce_v_1-fn.Cause_to_end" [label="ARG3-fn.Place"]
	_short_a_of -> _term_n_of [label=ARG1]
	compound -> _vice_n_1 [label=ARG2]
	proper_q -> "named(Robert)" [label=BV]
	compound -> _president_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Vaux)" [label="ARG1-fn.Dependent"]
	"_use_v_1-fn.Cause_to_end" -> _proceeds_n_1 [label="ARG2-fn.Means"]
	"_reduce_v_1-fn.Cause_to_end" -> _debt_n_1 [label="ARG2-fn.Means"]
	udef_q -> _president_n_of [label=BV]
	compound -> _debt_n_1 [label=ARG1]
	appos -> _finance_n_1 [label=ARG2]
	appos -> "named(Vaux)" [label=ARG1]
	udef_q -> _beer_n_1 [label=BV]
	appos -> _president_n_of [label=ARG1]
	_at_p -> _concern_n_1 [label=ARG2]
}
