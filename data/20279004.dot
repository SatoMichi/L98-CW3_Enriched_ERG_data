digraph {
	node [shape=circle style=filled]
	parg_d -> "_announce_v_to-fn.Cause_to_continue" [label=ARG1]
	compound -> "named(Barr)" [label=ARG1]
	loc_nonsp -> "_announce_v_to-fn.Cause_to_continue" [label=ARG1]
	compound -> "named(United)" [label=ARG2]
	compound -> _attorney_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	compound -> "named(Power)" [label=ARG1]
	"_announce_v_to-fn.Cause_to_continue" -> _term_n_of [label="ARG2-fn.Process"]
	proper_q -> "named(Barr)" [label=BV]
	udef_q -> _and_c [label=BV]
	proper_q -> "named(Gulf)" [label=BV]
	_the_q -> _term_n_of [label=BV]
	focus_d -> _between_p [label=ARG2]
	compound -> "named(Robert)" [label=ARG2]
	proper_q -> "named(United)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _between_p [label="ARG2-fn.Requirement"]
	_the_q -> "named(States)" [label=BV]
	proper_q -> "named(Power)" [label=BV]
	proper_q -> "named(Robert)" [label=BV]
	proper_q -> "named(L)" [label=BV]
	_today_a_1 -> time_n [label=ARG1]
	udef_q -> _attorney_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Barr)" [label="ARG1-fn.Dependent"]
	_strict_a_1 -> _between_p [label=ARG1]
	compound -> "named(L)" [label=ARG1]
	compound -> "named(States)" [label=ARG1]
	parg_d -> _term_n_of [label=ARG2]
	_between_p -> _term_n_of [label=ARG1]
	compound -> "named_n(US)" [label=ARG2]
	compound -> "named(Gulf)" [label=ARG2]
	udef_q -> "named_n(US)" [label=BV]
	def_implicit_q -> time_n [label=BV]
	_between_p -> _and_c [label=ARG2]
}
