digraph {
	node [shape=circle style=filled]
	"_initiate_v_into-fn.Process_continue" -> _plan_n_1 [label="ARG1-fn.Depictive"]
	udef_q -> _cash_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _dividend_n_1 [label=ARG1]
	"_say_v_to-fn.Taking" -> "_be_v_there-fn.Needing" [label="ARG2-fn.Theme"]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	udef_q -> _shareholder_n_1 [label=BV]
	"_believe_v_1-fn.Attempt" -> "_serve_v_as-fn.State_continue" [label="ARG2-fn.Goal"]
	udef_q -> nominalization [label=BV]
	_no_q -> _plan_n_1 [label=BV]
	"_serve_v_as-fn.State_continue" -> nominalization [label="ARG1-fn.Entity"]
	udef_q -> _mister_n_1 [label=BV]
	eventuality -> "_initiate_v_into-fn.Process_continue" [label=ARG1]
	_the_q -> _board_n_of [label=BV]
	_a_q -> _dividend_n_1 [label=BV]
	"_say_v_to-fn.Taking" -> "named(Johnson)" [label="ARG1-fn.Agent"]
	subord -> "_explain_v_to-fn.Have_as_requirement" [label=ARG2]
	proper_q -> "named(Johnson)" [label=BV]
	focus_d -> "_be_v_there-fn.Needing" [label=ARG2]
	compound -> _cash_n_1 [label=ARG1]
	subord -> "_say_v_to-fn.Taking" [label=ARG1]
	"_believe_v_1-fn.Attempt" -> _board_n_of [label="ARG1-fn.Agent"]
	"_serve_v_as-fn.State_continue" -> _shareholder_n_1 [label="ARG2-fn.State"]
	udef_q -> _stock_n_1 [label=BV]
	"_re-_a_again" -> "_invest_v_1-fn.Competition" [label=ARG1]
	_best_a_1 -> "_serve_v_as-fn.State_continue" [label=ARG1]
	nominalization -> "_invest_v_1-fn.Competition" [label=ARG1]
	"_be_v_there-fn.Needing" -> _plan_n_1 [label="ARG1-fn.Cognizer"]
	"_continue_v_2-fn.State_continue" -> "_believe_v_1-fn.Attempt" [label="ARG1-fn.Entity"]
	compound -> _excess_n_1 [label=ARG2]
	compound -> _stock_n_1 [label=ARG2]
	"_invest_v_1-fn.Competition" -> _cash_n_1 [label="ARG2-fn.Participant_2"]
	parg_d -> "_serve_v_as-fn.State_continue" [label=ARG1]
	"_explain_v_to-fn.Have_as_requirement" -> "_continue_v_2-fn.State_continue" [label="ARG2-fn.Requirement"]
	udef_q -> _excess_n_1 [label=BV]
	_common_a_for -> _dividend_n_1 [label=ARG1]
	parg_d -> _shareholder_n_1 [label=ARG2]
	"_initiate_v_into-fn.Process_continue" -> _dividend_n_1 [label="ARG2-fn.Manner"]
	compound -> "named(Johnson)" [label=ARG1]
}
