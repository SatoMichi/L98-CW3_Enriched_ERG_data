digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	_altogether_a_1 -> _cease_v_cause [label=ARG1]
	focus_d -> loc_nonsp [label=ARG2]
	_would_v_modal -> _cease_v_cause [label=ARG1]
	_also_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	compound -> _index_n_1 [label=ARG2]
	compound -> "named(PaineWebber)" [label=ARG2]
	_last_a_1 -> "dofw(Thu)" [label=ARG1]
	udef_q -> _index_n_1 [label=BV]
	_a_q -> "_arbitrager/nn_u_unknown" [label=BV]
	compound -> "named(Group)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_cease_v_cause -> "_arbitrage/nn_u_unknown" [label=ARG2]
	def_implicit_q -> "dofw(Thu)" [label=BV]
	udef_q -> "_arbitrage/nn_u_unknown" [label=BV]
	_be_v_id -> "_arbitrager/nn_u_unknown" [label=ARG2]
	compound -> "_arbitrage/nn_u_unknown" [label=ARG1]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(PaineWebber)" [label=BV]
	comp_equal -> _big_a_1 [label=ARG1]
	loc_nonsp -> "dofw(Thu)" [label=ARG2]
	_be_v_id -> _firm_n_1 [label=ARG1]
	_the_q -> _firm_n_1 [label=BV]
	neg -> _be_v_id [label=ARG1]
	proper_q -> "named(Merrill)" [label=BV]
	proper_q -> "named(Group)" [label=BV]
	_cease_v_cause -> pron [label=ARG1]
	_big_a_1 -> "_arbitrager/nn_u_unknown" [label=ARG1]
	compound -> _inc_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Group)" [label="ARG1-fn.Agent"]
	compound -> "_arbitrager/nn_u_unknown" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
