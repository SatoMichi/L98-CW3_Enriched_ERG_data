digraph {
	node [shape=circle style=filled]
	udef_q -> _people_n_of [label=BV]
	proper_q -> "named(Ellis)" [label=BV]
	proper_q -> "named(Earl)" [label=BV]
	"_throw_v_in-fn.Attack" -> _people_n_of [label="ARG1-fn.Victim"]
	_the_q -> "named(Board)" [label=BV]
	nominalization -> "_trade_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	_in_p -> _and_c [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "_have_v_1-fn.State_continue" [label="ARG2-fn.Requirement"]
	_in_p -> _partner_n_1 [label=ARG1]
	compound -> "named(Ellis)" [label=ARG1]
	_on_p -> "_trade_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	_a_q -> _partner_n_1 [label=BV]
	"_throw_v_in-fn.Attack" -> _towel_n_1 [label="ARG2-fn.Weapon"]
	appos -> _specialist_n_1 [label=ARG2]
	compound -> "named(Big)" [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_have_v_1-fn.State_continue" -> _lot_n_of [label="ARG2-fn.State"]
	appos -> _partner_n_1 [label=ARG2]
	appos -> _and_c [label=ARG1]
	udef_q -> _and_c [label=BV]
	_lot_n_of -> _people_n_of [label=ARG1]
	compound -> _stock_n_1 [label=ARG1]
	_on_p -> "named(Board)" [label=ARG2]
	proper_q -> "named(UAL)" [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	_a_q -> _lot_n_of [label=BV]
	compound -> "named(Jacobson)" [label=ARG1]
	_a_q -> _specialist_n_1 [label=BV]
	_the_q -> _towel_n_1 [label=BV]
	loc_nonsp -> "_throw_v_in-fn.Attack" [label=ARG1]
	compound -> "named(Earl)" [label=ARG2]
	focus_d -> "_have_v_1-fn.State_continue" [label=ARG2]
	"_have_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	proper_q -> "named(Big)" [label=BV]
	compound -> "named(UAL)" [label=ARG2]
	proper_q -> "named(Benjamin)" [label=BV]
	_today_a_1 -> time_n [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Ellis)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Sons)" [label=BV]
	_in_p -> _specialist_n_1 [label=ARG1]
	"_trade_v_1-fn.Change_position_on_a_scale" -> _stock_n_1 [label="ARG2-fn.Item"]
	compound -> "named(Benjamin)" [label=ARG2]
	compound -> "named(Board)" [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	proper_q -> "named(Jacobson)" [label=BV]
	def_implicit_q -> time_n [label=BV]
	appos -> "named(Ellis)" [label=ARG1]
}
