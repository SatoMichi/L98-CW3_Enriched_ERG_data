digraph {
	node [shape=circle style=filled]
	_if_x_then -> neg [label=ARG2]
	"card(1)" -> generic_entity [label=ARG1]
	focus_d -> "_answer_v_1-fn.Attempt" [label=ARG1]
	"_deftly/rb_u_unknown" -> "_do_v_1-fn.Competition" [label=ARG1]
	_from_p -> _candidate_n_1 [label=ARG2]
	appos -> "_thing_n_of-about" [label=ARG1]
	parg_d -> _technique_n_1 [label=ARG2]
	_from_p -> "_thing_n_of-about" [label=ARG1]
	parg_d -> "_answer_v_1-fn.Attempt" [label=ARG1]
	"_answer_v_1-fn.Attempt" -> "_learn_v_1-fn.Competition" [label="ARG3-fn.Outcome"]
	"_answer_v_1-fn.Attempt" -> generic_entity [label="ARG2-fn.Goal"]
	_colon_p_namely -> "_do_v_1-fn.Competition" [label=ARG1]
	"_do_v_1-fn.Competition" -> _technique_n_1 [label="ARG2-fn.Participant_2"]
	neg -> "_ask_v_1-fn.Competition" [label=ARG1]
	_a_q -> _question_n_about [label=BV]
	pronoun_q -> pron [label=BV]
	"_answer_v_1-fn.Attempt" -> _question_n_about [label="ARG2-fn.Goal"]
	_a_q -> generic_entity [label=BV]
	_strong_a_1 -> "_answer_v_1-fn.Attempt" [label=ARG1]
	focus_d -> "_learn_v_1-fn.Competition" [label=ARG2]
	"_answer_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	_a_q -> _technique_n_1 [label=BV]
	"_ask_v_1-fn.Competition" -> generic_entity [label="ARG2-fn.Participant_2"]
	udef_q -> "_thing_n_of-about" [label=BV]
	"card(1)" -> "_thing_n_of-about" [label=ARG1]
	"_can_v_modal-fn.Existence" -> "_answer_v_1-fn.Attempt" [label="ARG1-fn.Entity"]
	neg -> "_can_v_modal-fn.Existence" [label=ARG1]
	udef_q -> _candidate_n_1 [label=BV]
	"_learn_v_1-fn.Competition" -> "_thing_n_of-about" [label="ARG2-fn.Participant_2"]
	_if_x_then -> "_answer_v_1-fn.Attempt" [label=ARG1]
	comp_so -> "_deftly/rb_u_unknown" [label=ARG1]
	parg_d -> generic_entity [label=ARG2]
	parg_d -> "_do_v_1-fn.Competition" [label=ARG1]
	parg_d -> "_ask_v_1-fn.Competition" [label=ARG1]
	appos -> _technique_n_1 [label=ARG2]
	"_learn_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	parg_d -> _question_n_about [label=ARG2]
}
