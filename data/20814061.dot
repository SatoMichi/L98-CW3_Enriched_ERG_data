digraph {
	node [shape=circle style=filled]
	"_ask_v_1-fn.Attempt" -> "_investigate_v_1-fn.State_continue" [label="ARG3-fn.Outcome"]
	which_q -> reason [label=BV]
	"_investigate_v_1-fn.State_continue" -> "_allow_v_1-fn.State_continue" [label="ARG2-fn.State"]
	parg_d -> pron [label=ARG2]
	"_investigate_v_1-fn.State_continue" -> _police_n_1 [label="ARG1-fn.Entity"]
	_for_p -> reason [label=ARG2]
	"_allow_v_1-fn.State_continue" -> pron [label="ARG2-fn.State"]
	udef_q -> _police_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _flag_n_1 [label=BV]
	"_ask_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	"_allow_v_1-fn.State_continue" -> "_distribute_v_to-fn.Cause_to_end" [label="ARG3-fn.Time"]
	_in_p -> _way_n_of [label=ARG2]
	_for_p -> "_allow_v_1-fn.State_continue" [label=ARG1]
	_in_p -> "_distribute_v_to-fn.Cause_to_end" [label=ARG1]
	"_distribute_v_to-fn.Cause_to_end" -> _flag_n_1 [label="ARG2-fn.Means"]
	"_distribute_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	parg_d -> "_allow_v_1-fn.State_continue" [label=ARG1]
	_this_q_dem -> _way_n_of [label=BV]
	"_ask_v_1-fn.Attempt" -> _police_n_1 [label="ARG2-fn.Goal"]
}
