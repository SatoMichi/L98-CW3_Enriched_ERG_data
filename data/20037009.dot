digraph {
	node [shape=circle style=filled]
	compound -> "named(Sheep)" [label=ARG1]
	_be_v_nv -> pron [label=ARG1]
	_if_x_then -> "_carry_v_1-fn.Bringing" [label=ARG2]
	part_of -> pron [label=ARG1]
	compound -> "named(Chase)" [label=ARG1]
	_like_p -> pron [label=ARG2]
	udef_q -> _relation_n_of [label=BV]
	_international_a_1 -> _relation_n_of [label=ARG1]
	"_think_v_1-fn.IN" -> part_of [label="ARG1-fn.NotExist"]
	"_carry_v_1-fn.Bringing" -> _message_n_of [label="ARG2-fn.Value"]
	compound -> "named(Wild)" [label=ARG2]
	"much-many_a" -> _japanese_n_1 [label=ARG1]
	proper_q -> "named(Wild)" [label=BV]
	_be_v_nv -> "much-many_a" [label=ARG2]
	pronoun_q -> pron [label=BV]
	_the_q -> _japanese_n_1 [label=BV]
	_for_p -> _message_n_of [label=ARG1]
	_like_p -> "much-many_a" [label=ARG1]
	"_carry_v_1-fn.Bringing" -> "named(Chase)" [label="ARG1-fn.Location"]
	_if_x_then -> _be_v_nv [label=ARG1]
	_implicit_a_1 -> _message_n_of [label=ARG1]
	comp -> "much-many_a" [label=ARG1]
	comp -> "_think_v_1-fn.IN" [label=ARG2]
	_most_q -> part_of [label=BV]
	_a_q -> _message_n_of [label=BV]
	_a_q -> "named(Chase)" [label=BV]
	proper_q -> "named(Sheep)" [label=BV]
	_for_p -> _relation_n_of [label=ARG2]
}
