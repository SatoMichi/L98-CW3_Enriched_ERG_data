digraph {
	node [shape=circle style=filled]
	_the_q -> _business_n_1 [label=BV]
	_now_a_1 -> _and_c [label=ARG1]
	poss -> pron [label=ARG2]
	"_want_v_1-fn.Desiring" -> "named(Carat)" [label="ARG1-fn.Pivot"]
	def_explicit_q -> _group_n_of [label=BV]
	_rest_n_of -> "named(Europe)" [label=ARG1]
	_to_p -> _rest_n_of [label=ARG2]
	proper_q -> "named(Carat)" [label=BV]
	udef_q -> _media_n_1 [label=BV]
	"_get_v_state-fn.IN" -> _into_p [label="ARG2-fn.Patient"]
	nominalization -> _buy_v_1 [label=ARG1]
	poss -> _group_n_of [label=ARG1]
	_compete_v_1 -> _group_n_of [label=ARG1]
	_into_p -> _agency_n_1 [label=ARG1]
	"_get_v_state-fn.IN" -> _agency_n_1 [label="ARG1-fn.NotExist"]
	_the_q -> _rest_n_of [label=BV]
	_with_p -> "_get_v_state-fn.IN" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _media_n_1 [label=ARG2]
	_with_p -> _group_n_of [label=ARG2]
	"_want_v_1-fn.Desiring" -> _expand_v_1 [label="ARG2-fn.Theme"]
	_to_p -> _expand_v_1 [label=ARG1]
	proper_q -> "named(Europe)" [label=BV]
	udef_q -> nominalization [label=BV]
	udef_q -> _agency_n_1 [label=BV]
	_other_a_1 -> _agency_n_1 [label=ARG1]
	_expand_v_1 -> "named(Carat)" [label=ARG1]
	_into_p -> _business_n_1 [label=ARG2]
	_own_a_1 -> _group_n_of [label=ARG1]
	compound -> nominalization [label=ARG1]
	compound -> _group_n_of [label=ARG1]
}
