digraph {
	node [shape=circle style=filled]
	proper_q -> "named(British)" [label=BV]
	_indication_n_of -> nominalization [label=ARG1]
	"card(1)" -> generic_entity [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Air)" [label=ARG1]
	compound -> "named(Stephen)" [label=ARG2]
	compound -> _proposal_n_1 [label=ARG1]
	parg_d -> "_lead_v_1-fn.Competition" [label=ARG1]
	which_q -> time_n [label=BV]
	udef_q -> _chairman_n_of [label=BV]
	neg -> "_receive_v_1-fn.Competition" [label=ARG1]
	udef_q -> nominalization [label=BV]
	_from_p -> _proposal_n_1 [label=ARG1]
	compound -> "named(Wolf)" [label=ARG1]
	_any_q -> _indication_n_of [label=BV]
	"_receive_v_1-fn.Competition" -> _indication_n_of [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Air)" [label=BV]
	"_receive_v_1-fn.Competition" -> _proposal_n_1 [label="ARG2-fn.Participant_2"]
	_forthcoming_a_1 -> generic_entity [label=ARG1]
	loc_nonsp -> _forthcoming_a_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> "_buy+out_n_1" [label=BV]
	parg_d -> _group_n_of [label=ARG2]
	compound -> _group_n_of [label=ARG1]
	udef_q -> generic_entity [label=BV]
	udef_q -> _management_n_1 [label=BV]
	proper_q -> "named(UAL)" [label=BV]
	_any_q -> _proposal_n_1 [label=BV]
	proper_q -> "named(Stephen)" [label=BV]
	proper_q -> "named(Stevens)" [label=BV]
	proper_q -> "named(Wolf)" [label=BV]
	compound -> _management_n_1 [label=ARG1]
	nominalization -> "_might_v_modal-fn.Cause_to_end" [label=ARG1]
	"_say_v_to-fn.Surpassing" -> "named(Stevens)" [label="ARG1-fn.Standard_item"]
	_the_q -> _group_n_of [label=BV]
	compound -> _chairman_n_of [label=ARG1]
	"_say_v_to-fn.Surpassing" -> _and_c [label="ARG2-fn.Profiled_item"]
	_new_a_1 -> _proposal_n_1 [label=ARG1]
	_from_p -> _group_n_of [label=ARG2]
	compound -> _labor_n_1 [label=ARG2]
	compound -> "_buy+out_n_1" [label=ARG2]
	compound -> "named(UAL)" [label=ARG2]
	udef_q -> _labor_n_1 [label=BV]
	compound -> "named(British)" [label=ARG2]
	"_lead_v_1-fn.Competition" -> _group_n_of [label="ARG2-fn.Participant_2"]
	loc_nonsp -> time_n [label=ARG2]
	"_receive_v_1-fn.Competition" -> "named(Air)" [label="ARG1-fn.Participant_1"]
	"_might_v_modal-fn.Cause_to_end" -> _forthcoming_a_1 [label="ARG1-fn.Process"]
	compound -> "named(Stevens)" [label=ARG1]
	"_lead_v_1-fn.Competition" -> "named(Wolf)" [label="ARG1-fn.Participant_1"]
}
