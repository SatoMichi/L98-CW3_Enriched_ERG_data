digraph {
	node [shape=circle style=filled]
	compound -> "named(Health)" [label=ARG1]
	udef_q -> _dividend_n_1 [label=BV]
	compound -> "named(Nationwide)" [label=ARG2]
	"_say_v_to-fn.Surpassing" -> "named(Health)" [label="ARG1-fn.Standard_item"]
	"_make_v_up-fn.Assemble" -> _payment_n_of [label="ARG2-fn.Group"]
	"_remedy_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	nominalization -> _finance_v_1 [label=ARG1]
	proper_q -> "named(Health)" [label=BV]
	"_have_v_prd-fn.Cause_to_end" -> _under_p [label="ARG3-fn.Place"]
	udef_q -> nominalization [label=BV]
	_under_p -> _activity_n_1 [label=ARG1]
	_numerous_a_1 -> _activity_n_1 [label=ARG1]
	"_have_v_prd-fn.Cause_to_end" -> _activity_n_1 [label="ARG2-fn.Means"]
	compound -> nominalization [label=ARG2]
	"_make_v_up-fn.Assemble" -> pron [label="ARG1-fn.Individuals"]
	_the_q -> _problem_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Nationwide)" [label=BV]
	_late_a_for -> time_n [label=ARG1]
	"_in+order+to_x" -> "_have_v_prd-fn.Cause_to_end" [label=ARG1]
	comp -> _late_a_for [label=ARG1]
	_under_p -> _way_n_i [label=ARG2]
	"_in+order+to_x" -> "_remedy_v_1-fn.Competition" [label=ARG2]
	"_say_v_to-fn.Surpassing" -> _and_c [label="ARG2-fn.Profiled_item"]
	_if_x_then -> _possible_a_for [label=ARG2]
	"_have_v_prd-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	def_explicit_q -> time_n [label=BV]
	"_remedy_v_1-fn.Competition" -> _problem_n_of [label="ARG2-fn.Participant_2"]
	loc_nonsp -> time_n [label=ARG2]
	_if_x_then -> "_make_v_up-fn.Assemble" [label=ARG1]
	compound -> _payment_n_of [label=ARG1]
	idiom_q_i -> _way_n_i [label=BV]
	udef_q -> _activity_n_1 [label=BV]
	loc_nonsp -> "_make_v_up-fn.Assemble" [label=ARG1]
	compound -> _dividend_n_1 [label=ARG2]
	_the_q -> _payment_n_of [label=BV]
	compound -> _activity_n_1 [label=ARG1]
}
