digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Barney)" [label=ARG1]
	poss -> _projection_n_of [label=ARG1]
	proper_q -> "named(Smith)" [label=BV]
	proper_q -> "named(Barney)" [label=BV]
	compound -> _projection_n_of [label=ARG1]
	def_explicit_q -> "named(Doyle)" [label=BV]
	poss -> _reaction_n_1 [label=ARG1]
	def_explicit_q -> _projection_n_of [label=BV]
	compound -> "yofc(1990)" [label=ARG2]
	poss -> "named(Barney)" [label=ARG2]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_trim_v_1-fn.Competition" -> _projection_n_of [label="ARG2-fn.Participant_2"]
	_to_p -> _dollar_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Anheuser)" [label=BV]
	_from_p -> "_trim_v_1-fn.Competition" [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	"_trim_v_1-fn.Competition" -> "named(Doyle)" [label="ARG1-fn.Participant_1"]
	loc_nonsp -> "named(Doyle)" [label=ARG1]
	parg_d -> "_justify_v_to-fn.State_continue" [label=ARG1]
	compound -> _earnings_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	poss -> "named(Doyle)" [label=ARG1]
	"_call_v_1-fn.State_continue" -> "_justify_v_to-fn.State_continue" [label="ARG3-fn.Time"]
	compound -> "named(Anheuser)" [label=ARG2]
	poss -> pron [label=ARG2]
	"_justify_v_to-fn.State_continue" -> _reaction_n_1 [label="ARG2-fn.State"]
	_a_p_per -> _share_n_of [label=ARG2]
	udef_q -> _earnings_n_1 [label=BV]
	compound -> "named(Doyle)" [label=ARG1]
	udef_q -> _share_n_of [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
	compound -> "named(Smith)" [label=ARG2]
	"_call_v_1-fn.State_continue" -> _reaction_n_1 [label="ARG2-fn.State"]
	proper_q -> "yofc(1990)" [label=BV]
	"card(2.95)" -> _dollar_n_1 [label=ARG1]
	_a_p_per -> _dollar_n_1 [label=ARG1]
	def_explicit_q -> _reaction_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	"card(3.10)" -> _dollar_n_1 [label=ARG1]
	"_call_v_1-fn.State_continue" -> "named(Doyle)" [label="ARG1-fn.Entity"]
	poss -> _market_n_1 [label=ARG2]
	_to_p -> "_trim_v_1-fn.Competition" [label=ARG1]
	_from_p -> _dollar_n_1 [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	parg_d -> _reaction_n_1 [label=ARG2]
}
