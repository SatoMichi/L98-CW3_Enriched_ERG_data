digraph {
	node [shape=circle style=filled]
	compound -> "named(Terrizzi)" [label=ARG1]
	neg -> "_say_v_1-fn.IN" [label=ARG1]
	_the_q -> _end_n_of [label=BV]
	"_take_v_2-fn.Taking_time" -> _day_n_of [label="ARG3-fn.NotExist"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_explain_v_to-fn.Statement" -> _if_x_then [label="ARG2-fn.Topic"]
	_be_v_there -> _move_n_1 [label=ARG1]
	udef_q -> _day_n_of [label=BV]
	"_such+a_q" -> _move_n_1 [label=BV]
	"_say_v_1-fn.IN" -> "named(Terrizzi)" [label="ARG1-fn.Agent"]
	_about_x_deg -> udef_q [label=ARG1]
	"_complete_v_2-fn.Activity_finish" -> _end_n_of [label="ARG2-fn.Theme"]
	subord -> neg [label=ARG1]
	_end_n_of -> _transaction_n_1 [label=ARG1]
	subord -> "_explain_v_to-fn.Statement" [label=ARG2]
	"card(3)" -> _day_n_of [label=ARG1]
	"_take_v_2-fn.Taking_time" -> "_complete_v_2-fn.Activity_finish" [label="ARG1-fn.Theme"]
	_would_v_modal -> "_take_v_2-fn.Taking_time" [label=ARG1]
	_if_x_then -> _would_v_modal [label=ARG1]
	_if_x_then -> _be_v_there [label=ARG2]
	_the_q -> _transaction_n_1 [label=BV]
	_specific_a_to -> "_say_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Terrizzi)" [label=BV]
	_loose_a_with -> _end_n_of [label=ARG1]
}
