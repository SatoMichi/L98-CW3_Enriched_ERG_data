digraph {
	node [shape=circle style=filled]
	udef_q -> _parent_n_of [label=BV]
	_very_x_deg -> _rich_a_in [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Rothschild)" [label="ARG1-fn.Agent"]
	compound -> "named(Elie)" [label=ARG2]
	_especially_x_deg -> _if_x_then [label=ARG1]
	proper_q -> "named(Elie)" [label=BV]
	compound -> "named(Rothschild)" [label=ARG1]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	compound -> "named(DE)" [label=ARG2]
	compound -> _baron_n_1 [label=ARG2]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	_rich_a_in -> _parent_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_make_v_1 -> _exception_n_to [label=ARG2]
	_very_x_deg -> _young_a_1 [label=ARG1]
	_a_q -> "named(Rothschild)" [label=BV]
	proper_q -> "named(DE)" [label=BV]
	_make_v_1 -> pron [label=ARG1]
	"_have_v_1-fn.IN" -> _parent_n_of [label="ARG2-fn.Theme"]
	_young_a_1 -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> _make_v_1 [label="ARG2-fn.NotExist"]
	udef_q -> _baron_n_1 [label=BV]
	udef_q -> _exception_n_to [label=BV]
	_if_x_then -> _and_c [label=ARG2]
	"_smile_v_1-fn.Making_faces" -> "named(Rothschild)" [label="ARG1-fn.Agent"]
	focus_d -> _make_v_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
