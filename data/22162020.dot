digraph {
	node [shape=circle style=filled]
	compound -> "named(Industrial)" [label=ARG1]
	compound -> _bank_n_of [label=ARG2]
	parg_d -> "named(Bank)" [label=ARG2]
	parg_d -> _own_v_1 [label=ARG1]
	udef_q -> _state_n_of [label=BV]
	"_include_v_1-fn.NF" -> "named(Bank)" [label="ARG2-fn.Theme"]
	compound -> _state_n_of [label=ARG2]
	compound -> _own_v_1 [label=ARG1]
	poss -> "named(China)" [label=ARG2]
	parg_d -> _syndicate_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Citic)" [label=BV]
	proper_q -> "named(Industrial)" [label=BV]
	compound -> "named(Citic)" [label=ARG2]
	"_make_v_up-of-fn.IN" -> _syndicate_n_1 [label="ARG2-fn.Product"]
	"_include_v_1-fn.NF" -> pron [label="ARG1-fn.NotExist"]
	_european_a_1 -> _bank_n_of [label=ARG1]
	proper_q -> "named(China)" [label=BV]
	parg_d -> "_make_v_up-of-fn.IN" [label=ARG1]
	_mostly_a_1 -> "_make_v_up-of-fn.IN" [label=ARG1]
	"_make_v_up-of-fn.IN" -> _bank_n_of [label="ARG3-fn.NotExist"]
	def_explicit_q -> "named(Bank)" [label=BV]
	poss -> "named(Bank)" [label=ARG1]
	compound -> "named(Bank)" [label=ARG1]
	compound -> _syndicate_n_1 [label=ARG1]
	_own_v_1 -> "named(Bank)" [label=ARG2]
	_the_q -> _syndicate_n_1 [label=BV]
	udef_q -> _bank_n_of [label=BV]
}
