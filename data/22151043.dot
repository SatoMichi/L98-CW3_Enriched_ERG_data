digraph {
	node [shape=circle style=filled]
	"_make_v_1-fn.Causation" -> "named(Ilyushins)" [label="ARG1-fn.Agent"]
	_in_p -> _advance_n_of [label=ARG1]
	_on_p -> "_make_v_1-fn.Causation" [label=ARG1]
	udef_q -> _air_n_1 [label=BV]
	proper_q -> "named(Moscow)" [label=BV]
	compound -> _efficiency_n_1 [label=ARG1]
	_to_p -> "_make_v_1-fn.Causation" [label=ARG1]
	udef_q -> _advance_n_of [label=BV]
	_in_p -> _efficiency_n_1 [label=ARG2]
	_on_p -> _hop_n_1 [label=ARG2]
	"_make_v_1-fn.Causation" -> pron [label="ARG2-fn.Theme"]
	_a_q -> _stop_n_1 [label=BV]
	_to_p -> "named(Managua)" [label=ARG2]
	proper_q -> "named(Managua)" [label=BV]
	"_fly_v_to-fn.Operate_vehicle" -> "named(Ilyushins)" [label="ARG2-fn.Theme"]
	_unnecessary_a_for -> _stop_n_1 [label=ARG1]
	udef_q -> _aircraft_n_1 [label=BV]
	udef_q -> _efficiency_n_1 [label=BV]
	udef_q -> "named(Ilyushins)" [label=BV]
	pronoun_q -> pron [label=BV]
	"card(1)" -> _hop_n_1 [label=ARG1]
	proper_q -> "named(Aeroflot)" [label=BV]
	_can_v_modal -> "_make_v_1-fn.Causation" [label=ARG1]
	compound -> _fleet_n_1 [label=ARG1]
	proper_q -> "named(Shannon)" [label=BV]
	compound -> "named(Shannon)" [label=ARG2]
	"_fly_v_to-fn.Operate_vehicle" -> "named(Aeroflot)" [label="ARG1-fn.Agent"]
	_from_p_time -> "named(Moscow)" [label=ARG2]
	udef_q -> _hop_n_1 [label=BV]
	_most_q -> _fleet_n_1 [label=BV]
	_the_q -> _year_n_1 [label=BV]
	compound -> _air_n_1 [label=ARG2]
	proper_q -> "named(Western)" [label=BV]
	_still_a_1 -> "_fly_v_to-fn.Operate_vehicle" [label=ARG1]
	_over_p -> _year_n_1 [label=ARG2]
	compound -> _fuel_n_1 [label=ARG1]
	neg -> _can_v_modal [label=ARG1]
	_from_p_time -> "_make_v_1-fn.Causation" [label=ARG1]
	"_make_v_cause-fn.Causation" -> _advance_n_of [label="ARG1-fn.Agent"]
	udef_q -> _fuel_n_1 [label=BV]
	compound -> _aircraft_n_1 [label=ARG2]
	_over_p -> _advance_n_of [label=ARG1]
	_for_p -> _fleet_n_1 [label=ARG2]
	"_make_v_cause-fn.Causation" -> _unnecessary_a_for [label="ARG2-fn.Theme"]
	_inefficient_a_1 -> "named(Ilyushins)" [label=ARG1]
	_for_p -> _unnecessary_a_for [label=ARG1]
	compound -> "named(Western)" [label=ARG2]
	compound -> _stop_n_1 [label=ARG1]
}
