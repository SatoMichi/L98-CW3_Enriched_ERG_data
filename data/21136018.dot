digraph {
	node [shape=circle style=filled]
	focus_d -> "_recognize_v_1-fn.Competition" [label=ARG2]
	"_recognize_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_good_a_at-for-of" -> _chance_n_of [label=ARG1]
	comp -> generic_entity [label=ARG2]
	_a_q -> _chance_n_of [label=BV]
	subord -> "_good_a_at-for-of" [label=ARG2]
	_that_q_dem -> generic_entity [label=BV]
	"_say_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	comp -> "_good_a_at-for-of" [label=ARG1]
	subord -> "_do_v_suffice-fn.State_continue" [label=ARG1]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_a+bit_x_deg" -> comp [label=ARG1]
	"_do_v_suffice-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "_recognize_v_1-fn.Competition" [label="ARG2-fn.Means"]
	"_recognize_v_1-fn.Competition" -> "_be_v_there-fn.Cause_to_end" [label="ARG2-fn.Participant_2"]
	"_be_v_there-fn.Cause_to_end" -> _chance_n_of [label="ARG1-fn.Process"]
	_chance_n_of -> subord [label=ARG1]
}
