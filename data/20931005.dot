digraph {
	node [shape=circle style=filled]
	_regard_v_as -> _step_n_1 [label=ARG3]
	poss -> pron [label=ARG2]
	"ord(1)" -> _step_n_1 [label=ARG1]
	proper_q -> "named(Lee)" [label=BV]
	"_tell_v_1-fn.Telling" -> pron [label="ARG1-fn.Agent"]
	"_tell_v_1-fn.Telling" -> _make_v_1 [label="ARG3-fn.Recipient"]
	def_explicit_q -> _return_n_of [label=BV]
	_when_x_subord -> "_say_v_to-fn.IN" [label=ARG1]
	_make_v_1 -> _statement_n_of [label=ARG2]
	_toward_p -> _step_n_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_with_p -> "named(Bush)" [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_regard_v_as -> _statement_n_of [label=ARG2]
	_on_p -> _return_n_of [label=ARG2]
	_regard_v_as -> pron [label=ARG1]
	_a_q -> _step_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _return_n_of [label=ARG1]
	_the_q -> _chinese_n_1 [label=BV]
	_on_p -> "_meet_v_1-fn.IN" [label=ARG1]
	_to_p -> _statement_n_of [label=ARG1]
	_the_q -> _president_n_of [label=BV]
	proper_q -> "named(Bush)" [label=BV]
	udef_q -> _statement_n_of [label=BV]
	"_tell_v_1-fn.Telling" -> _president_n_of [label="ARG2-fn.Topic"]
	_with_p -> "_meet_v_1-fn.IN" [label=ARG1]
	_when_x_subord -> "_meet_v_1-fn.IN" [label=ARG2]
	"_meet_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "named(Lee)" [label="ARG1-fn.Agent"]
	_toward_p -> "_reconciliation/nn_u_unknown" [label=ARG2]
	udef_q -> "_reconciliation/nn_u_unknown" [label=BV]
	_to_p -> pron [label=ARG2]
	_make_v_1 -> _chinese_n_1 [label=ARG1]
	compound -> "named(Lee)" [label=ARG1]
	"_say_v_to-fn.IN" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.NotExist"]
	compound -> "named(Bush)" [label=ARG1]
}
