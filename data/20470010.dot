digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	_in_p -> _assertion_n_of [label=ARG1]
	_for_p -> "named(Warner)" [label=ARG2]
	compound -> "named(Peters)" [label=ARG1]
	"_describe_v_as-fn.Communication_means" -> _assertion_n_of [label="ARG2-fn.Addressee"]
	"_describe_v_as-fn.Communication_means" -> _nonsense_n_1 [label="ARG3-fn.Message"]
	_while_x -> "_run_v_1-fn.Competition" [label=ARG1]
	compound -> _court_n_of [label=ARG2]
	proper_q -> "named(Peters)" [label=BV]
	udef_q -> _filing_n_1 [label=BV]
	"_produce_v_1-fn.Renting" -> _movie_n_of [label="ARG2-fn.Goods"]
	"_fulfil_v_1-fn.State_continue" -> _contract_n_1 [label="ARG2-fn.State"]
	_in_p -> "_could_v_modal-fn.Cause_to_end" [label=ARG1]
	_in_p -> _theory_n_of [label=ARG2]
	udef_q -> _theory_n_of [label=BV]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_run_v_1-fn.Competition" -> _and_c [label="ARG1-fn.Participant_1"]
	compound -> _filing_n_1 [label=ARG1]
	_while_x -> "_fulfil_v_1-fn.State_continue" [label=ARG2]
	_prior_a_1 -> _filing_n_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _nonsense_n_1 [label=BV]
	_assertion_n_of -> "_could_v_modal-fn.Cause_to_end" [label=ARG1]
	udef_q -> _movie_n_of [label=BV]
	proper_q -> "named(Sony)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_could_v_modal-fn.Cause_to_end" -> _while_x [label="ARG1-fn.Process"]
	"_run_v_1-fn.Competition" -> "named(Columbia)" [label="ARG2-fn.Participant_2"]
	poss -> pron [label=ARG2]
	"_describe_v_as-fn.Communication_means" -> "named(Warner)" [label="ARG1-fn.Communicator"]
	_for_p -> _movie_n_of [label=ARG1]
	poss -> _contract_n_1 [label=ARG1]
	_contract_n_1 -> "_produce_v_1-fn.Renting" [label=ARG1]
	poss -> _assertion_n_of [label=ARG1]
	proper_q -> "named(Columbia)" [label=BV]
	_still_a_1 -> "_fulfil_v_1-fn.State_continue" [label=ARG1]
	proper_q -> "named(Guber)" [label=BV]
	proper_q -> "named(Warner)" [label=BV]
	udef_q -> _court_n_of [label=BV]
	def_explicit_q -> _contract_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	def_explicit_q -> _assertion_n_of [label=BV]
	_in_p -> _filing_n_1 [label=ARG2]
	poss -> "named(Sony)" [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	compound -> "named(Guber)" [label=ARG1]
	loc_nonsp -> "_describe_v_as-fn.Communication_means" [label=ARG1]
}
