digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> "_in+order+to_x" [label="ARG2-fn.NotExist"]
	_comprehensive_a_1 -> thing [label=ARG1]
	compound -> "named(Jacob)" [label=ARG1]
	_some_q -> thing [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_easy_a_for -> pron [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_roll_v_out -> thing [label=ARG2]
	_pay_v_for -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Jacob)" [label="ARG1-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_that_x_deg -> _comprehensive_a_1 [label=ARG1]
	"_in+order+to_x" -> neg [label=ARG1]
	"_make_v_cause-fn.Causation" -> _pay_v_for [label="ARG2-fn.Theme"]
	"_in+order+to_x" -> _and_c [label=ARG2]
	"_make_v_cause-fn.Causation" -> pron [label="ARG1-fn.Agent"]
	neg -> _easy_a_for [label=ARG1]
	proper_q -> "named(Jacob)" [label=BV]
	focus_d -> _easy_a_for [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_roll_v_out -> pron [label=ARG1]
}
