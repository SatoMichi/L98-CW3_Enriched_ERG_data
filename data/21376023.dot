digraph {
	node [shape=circle style=filled]
	_occasional_a_1 -> "_get_v_state-fn.IN" [label=ARG1]
	"_innately/rb_u_unknown" -> _do_v_1 [label=ARG1]
	_also_a_1 -> "_get_v_1-fn.IN" [label=ARG1]
	udef_q -> "_party_n_of-to" [label=BV]
	"_pathologically/rb_u_unknown" -> _do_v_1 [label=ARG1]
	"_get_v_1-fn.IN" -> _access_n_1 [label="ARG2-fn.Patient"]
	"_get_v_state-fn.IN" -> pron [label="ARG2-fn.Patient"]
	_to_p -> _and_c [label=ARG2]
	focus_d -> _and_c [label=ARG2]
	udef_q -> _trouble_n_1 [label=BV]
	_do_v_1 -> pron [label=ARG2]
	udef_q -> _access_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_into_p -> _trouble_n_1 [label=ARG2]
	_to_p -> _access_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	udef_q -> _society_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_may_v_modal -> "_get_v_state-fn.IN" [label=ARG1]
	"_get_v_state-fn.IN" -> _into_p [label="ARG3-fn.NotExist"]
	"_get_v_1-fn.IN" -> pron [label="ARG3-fn.NotExist"]
	udef_q -> _and_c [label=BV]
	_while_x -> _may_v_modal [label=ARG2]
	_into_p -> pron [label=ARG1]
	_while_x -> _also_a_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
