digraph {
	node [shape=circle style=filled]
	_for_p -> _offer_n_1 [label=ARG1]
	times -> "card(475)" [label=ARG2]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	_to_p -> _dollar_n_1 [label=ARG2]
	_the_q -> _estate_n_1 [label=BV]
	udef_q -> generic_entity [label=BV]
	_for_p -> _dollar_n_1 [label=ARG2]
	times -> "card(400)" [label=ARG2]
	"much-many_a" -> generic_entity [label=ARG1]
	_a_q -> _offer_n_1 [label=BV]
	"_get_v_1-fn.IN" -> _and_c [label="ARG1-fn.Agent"]
	proper_q -> "named(Atlas)" [label=BV]
	neg -> "_get_v_1-fn.IN" [label=ARG1]
	_for_p -> generic_entity [label=ARG2]
	proper_q -> "named(Chase)" [label=BV]
	"_get_v_1-fn.IN" -> _offer_n_1 [label="ARG2-fn.Theme"]
	_look_v_1 -> _and_c [label=ARG1]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	_the_q -> _building_n_1 [label=BV]
	comp -> "much-many_a" [label=ARG1]
	_entire_a_1 -> _building_n_1 [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	compound -> "named(Atlas)" [label=ARG2]
	_look_v_1 -> "_sell_v_1-fn.Commerce_sell" [label=ARG2]
	times -> "card(375)" [label=ARG2]
	_for_p -> "_sell_v_1-fn.Commerce_sell" [label=ARG1]
	"_sell_v_1-fn.Commerce_sell" -> _and_c [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_sell_v_1-fn.Commerce_sell" -> _building_n_1 [label="ARG2-fn.Theme"]
	comp -> _dollar_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> _estate_n_1 [label=ARG1]
	udef_q -> _dollar_n_1 [label=BV]
}
