digraph {
	node [shape=circle style=filled]
	udef_q -> _production_n_of [label=BV]
	_able_a_1 -> _supervisor_n_of [label=ARG1]
	_unlikely_a_for -> _or_c [label=ARG1]
	udef_q -> _workstation_n_1 [label=BV]
	_correct_v_1 -> _supervisor_n_of [label=ARG1]
	_on_p -> _line_n_of [label=ARG2]
	focus_d -> _as_p [label=ARG2]
	_a_q -> _result_n_of [label=BV]
	compound -> _production_n_of [label=ARG2]
	_a_q -> _or_c [label=BV]
	_as_p -> _unlikely_a_for [label=ARG1]
	_correct_v_1 -> pron [label=ARG2]
	_able_a_1 -> _correct_v_1 [label=ARG2]
	_a_q -> _line_n_of [label=BV]
	udef_q -> _computer_n_1 [label=BV]
	_if_x_then -> _unlikely_a_for [label=ARG1]
	focus_d -> _unlikely_a_for [label=ARG1]
	pronoun_q -> pron [label=BV]
	_as_p -> _result_n_of [label=ARG2]
	_if_x_then -> "_develop_v_1-fn.IN" [label=ARG2]
	compound -> _line_n_of [label=ARG1]
	"_in+front+of_p" -> _or_c [label=ARG2]
	_personal_a_1 -> _computer_n_1 [label=ARG1]
	_on_p -> "_develop_v_1-fn.IN" [label=ARG1]
	"_know_v_about-fn.IN" -> pron [label="ARG3-fn.Predicate"]
	_some_q_indiv -> _supervisor_n_of [label=BV]
	"_know_v_about-fn.IN" -> _supervisor_n_of [label="ARG1-fn.Agent"]
	"_in+front+of_p" -> "_sit_v_1-fn.Posture" [label=ARG1]
	"_develop_v_1-fn.IN" -> _problem_n_of [label="ARG1-fn.NotExist"]
	"_sit_v_1-fn.Posture" -> _supervisor_n_of [label="ARG1-fn.NotExist"]
	_a_q -> _problem_n_of [label=BV]
}
