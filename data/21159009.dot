digraph {
	node [shape=circle style=filled]
	nominalization -> _may_v_modal [label=ARG1]
	_a_q -> _case_n_of [label=BV]
	"_use_v_as-fn.IN" -> _charge_n_of [label="ARG2-fn.NotExist"]
	_on_p -> nominalization [label=ARG2]
	_for_p -> nominalization [label=ARG2]
	which_q -> time_n [label=BV]
	_may_v_modal -> "_use_v_as-fn.IN" [label=ARG1]
	_certain_a_of -> _limit_n_of [label=ARG1]
	"_use_v_as-fn.IN" -> _prosecutor_n_1 [label="ARG1-fn.NotExist"]
	udef_q -> _charge_n_of [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	udef_q -> _prosecutor_n_1 [label=BV]
	_a_q -> _basis_n_of [label=BV]
	_another_q -> _provision_n_1 [label=BV]
	udef_q -> _fraud_n_1 [label=BV]
	udef_q -> _tax_n_1 [label=BV]
	nominalization -> "_bring_v_1-fn.Bringing" [label=ARG1]
	compound -> _case_n_of [label=ARG1]
	loc_nonsp -> "_use_v_as-fn.IN" [label=ARG1]
	compound -> _charge_n_of [label=ARG1]
	_clarify_v_to -> _provision_n_1 [label=ARG1]
	udef_q -> "_racketeering/nn_u_unknown" [label=BV]
	"_bring_v_1-fn.Bringing" -> _case_n_of [label="ARG2-fn.Theme"]
	udef_q -> nominalization [label=BV]
	compound -> "_racketeering/nn_u_unknown" [label=ARG2]
	_clarify_v_to -> _limit_n_of [label=ARG2]
	compound -> _fraud_n_1 [label=ARG1]
	"_use_v_as-fn.IN" -> _basis_n_of [label="ARG3-fn.NotExist"]
	compound -> _tax_n_1 [label=ARG2]
	_on_p -> _limit_n_of [label=ARG1]
	udef_q -> _limit_n_of [label=BV]
	_for_p -> _basis_n_of [label=ARG1]
}
