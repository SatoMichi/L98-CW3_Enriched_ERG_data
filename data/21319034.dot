digraph {
	node [shape=circle style=filled]
	_with_p -> _management_n_1 [label=ARG2]
	proper_q -> "named(Francois)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _minority_n_1 [label=ARG2]
	proper_q -> "named(Poncet)" [label=BV]
	udef_q -> _minority_n_1 [label=BV]
	_a_q -> _alliance_n_1 [label=BV]
	"_take_v_1-fn.Attempt" -> _group_n_of [label="ARG1-fn.Agent"]
	"_intend_v_for-fn.Have_as_requirement" -> subord [label="ARG2-fn.Requirement"]
	udef_q -> _mister_n_1 [label=BV]
	"_take_v_1-fn.Attempt" -> _stake_n_1 [label="ARG2-fn.Goal"]
	subord -> "_strike_v_1-fn.Preference" [label=ARG2]
	"_respond_v_to-fn.State_continue" -> "_intend_v_for-fn.Have_as_requirement" [label="ARG2-fn.State"]
	udef_q -> _management_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_current_a_1 -> _management_n_1 [label=ARG1]
	_initial_a_1 -> "_intend_v_for-fn.Have_as_requirement" [label=ARG1]
	"_intend_v_for-fn.Have_as_requirement" -> _group_n_of [label="ARG1-fn.Dependent"]
	compound -> _stake_n_1 [label=ARG1]
	compound -> "named(Francois)" [label=ARG2]
	def_explicit_q -> _group_n_of [label=BV]
	poss -> _group_n_of [label=ARG1]
	"_respond_v_to-fn.State_continue" -> "named(Poncet)" [label="ARG1-fn.Entity"]
	"_strike_v_1-fn.Preference" -> _alliance_n_1 [label="ARG2-fn.Event"]
	_with_p -> _alliance_n_1 [label=ARG1]
	compound -> "named(Poncet)" [label=ARG1]
	_only_x_deg -> _a_q [label=ARG1]
	subord -> "_take_v_1-fn.Attempt" [label=ARG1]
	_a_q -> _stake_n_1 [label=BV]
}
