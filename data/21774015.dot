digraph {
	node [shape=circle style=filled]
	compound -> _effect_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	compound -> "named(Burnham)" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Reidy)" [label="ARG1-fn.Agent"]
	_with_p -> _analyst_n_1 [label=ARG1]
	_with_p -> "named(Lambert)" [label=ARG2]
	proper_q -> "named(Drexel)" [label=BV]
	"_say_v_to-fn.Taking" -> neg [label="ARG2-fn.Theme"]
	proper_q -> "named(Burnham)" [label=BV]
	udef_q -> _ripple_n_1 [label=BV]
	_a_q -> _analyst_n_1 [label=BV]
	compound -> "named(Reidy)" [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	compound -> _inc_n_1 [label=ARG2]
	compound -> "named(John)" [label=ARG2]
	appos -> _analyst_n_1 [label=ARG2]
	compound -> _ripple_n_1 [label=ARG2]
	proper_q -> "named(Lambert)" [label=BV]
	neg -> "_be_v_there-fn.Needing" [label=ARG1]
	"_be_v_there-fn.Needing" -> _question_n_about [label="ARG1-fn.Cognizer"]
	_a_q -> _effect_n_1 [label=BV]
	"_continue_v_2-fn.State_continue" -> "_be_v_there-fn.Needing" [label="ARG1-fn.Entity"]
	compound -> "named(Lambert)" [label=ARG1]
	_question_n_about -> "_continue_v_2-fn.State_continue" [label=ARG1]
	proper_q -> "named(Reidy)" [label=BV]
	"much-many_a" -> _question_n_about [label=ARG1]
	compound -> "named(Drexel)" [label=ARG2]
	appos -> "named(Reidy)" [label=ARG1]
	"_be_v_there-fn.Needing" -> _effect_n_1 [label="ARG1-fn.Cognizer"]
	udef_q -> _question_n_about [label=BV]
	proper_q -> "named(John)" [label=BV]
}
