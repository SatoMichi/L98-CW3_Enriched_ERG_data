digraph {
	node [shape=circle style=filled]
	_intelligent_a_1 -> "_handle_v_1-fn.NF" [label=ARG1]
	_but_x -> "_keep_v_from-fn.Cause_to_continue" [label=ARG1]
	_the_q -> "named(Board)" [label=BV]
	compound -> _index_n_1 [label=ARG2]
	_such_q -> _fund_n_1 [label=BV]
	def_implicit_q -> time_n [label=BV]
	"_want_v_1-fn.Desiring" -> "named(Board)" [label="ARG1-fn.Pivot"]
	"_keep_v_from-fn.Cause_to_continue" -> "named(Board)" [label="ARG1-fn.Agent"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _market_n_1 [label=BV]
	udef_q -> _index_n_1 [label=BV]
	"_want_v_1-fn.Desiring" -> _but_x [label="ARG2-fn.Theme"]
	_to_p -> _flee_v_from [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_flee_v_from -> _fund_n_1 [label=ARG1]
	_long_a_1 -> time_n [label=ARG1]
	_to_p -> _market_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	compound -> "named(Board)" [label=ARG1]
	focus_d -> "_want_v_1-fn.Desiring" [label=ARG2]
	comp_equal -> _long_a_1 [label=ARG1]
	"_keep_v_from-fn.Cause_to_continue" -> _flee_v_from [label="ARG3-fn.NotExist"]
	compound -> "named(Phelan)" [label=ARG1]
	_but_x -> loc_nonsp [label=ARG2]
	comp_equal -> "_handle_v_1-fn.NF" [label=ARG2]
	_overseas_a_1 -> _market_n_1 [label=ARG1]
	"_handle_v_1-fn.NF" -> pron [label="ARG2-fn.Theme"]
	proper_q -> "named(Phelan)" [label=BV]
	"_say_v_to-fn.IN" -> "_want_v_1-fn.Desiring" [label="ARG2-fn.Topic"]
	compound -> "named(Big)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	compound -> _fund_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_keep_v_from-fn.Cause_to_continue" -> _fund_n_1 [label="ARG2-fn.Theme"]
	proper_q -> "named(Big)" [label=BV]
}
