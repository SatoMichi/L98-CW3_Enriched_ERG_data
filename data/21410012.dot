digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _car_n_1 [label=BV]
	_competitive_a_1 -> _car_n_1 [label=ARG1]
	_crowded_a_1 -> _market_n_1 [label=ARG1]
	"_convince_v_of-fn.Getting" -> neg [label="ARG3-fn.Source"]
	focus_d -> "_become_v_id-fn.Residence" [label=ARG1]
	proper_q -> "named(Ford)" [label=BV]
	compound -> _luxury_n_1 [label=ARG2]
	"_become_v_id-fn.Residence" -> _official_n_1 [label="ARG1-fn.Resident"]
	"_in+order+to_x" -> "_make_v_cause-fn.Cure" [label=ARG2]
	udef_q -> _luxury_n_1 [label=BV]
	compound -> "named(Ford)" [label=ARG2]
	_the_q -> _investment_n_1 [label=BV]
	"_recover_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_in_p -> "_make_v_cause-fn.Cure" [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	"_expect_v_1-fn.Competition" -> "_recover_v_1-fn.Competition" [label="ARG2-fn.Participant_2"]
	pronoun_q -> pron [label=BV]
	"_in+order+to_x" -> "_require_v_of-fn.State_continue" [label=ARG1]
	"_expect_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_in_p -> _market_n_1 [label=ARG2]
	"_convince_v_of-fn.Getting" -> _official_n_1 [label="ARG2-fn.Theme"]
	parg_d -> "_convince_v_of-fn.Getting" [label=ARG1]
	poss -> _car_n_1 [label=ARG1]
	"_require_v_of-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	neg -> "_could_v_modal-fn.Cause_to_end" [label=ARG1]
	parg_d -> _official_n_1 [label=ARG2]
	"_become_v_id-fn.Residence" -> "_convince_v_of-fn.Getting" [label="ARG2-fn.Location"]
	_meanwhile_p -> "_become_v_id-fn.Residence" [label=ARG1]
	focus_d -> _meanwhile_p [label=ARG2]
	proper_q -> "named(Saab)" [label=BV]
	"_require_v_of-fn.State_continue" -> _investment_n_1 [label="ARG2-fn.State"]
	"_could_v_modal-fn.Cause_to_end" -> "_expect_v_1-fn.Competition" [label="ARG1-fn.Process"]
	compound -> _official_n_1 [label=ARG1]
	"_recover_v_1-fn.Competition" -> _investment_n_1 [label="ARG2-fn.Participant_2"]
	"_would_v_modal-fn.Cause_to_end" -> "_in+order+to_x" [label="ARG1-fn.Process"]
	udef_q -> _official_n_1 [label=BV]
	"_make_v_cause-fn.Cure" -> _competitive_a_1 [label="ARG2-fn.Patient"]
	_increasing_a_1 -> _crowded_a_1 [label=ARG1]
	"_make_v_cause-fn.Cure" -> pron [label="ARG1-fn.Healer"]
	compound -> _market_n_1 [label=ARG1]
	poss -> "named(Saab)" [label=ARG2]
}
