digraph {
	node [shape=circle style=filled]
	loc_nonsp -> _computer_n_1 [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	"_understand_v_by-fn.Motion" -> pron [label="ARG2-fn.Source"]
	udef_q -> nominalization [label=BV]
	"_in+order+to_x" -> loc_nonsp [label=ARG1]
	_here_a_1 -> place_n [label=ARG1]
	loc_nonsp -> nominalization [label=ARG1]
	udef_q -> _program_n_of [label=BV]
	"_need_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	pronoun_q -> pron [label=BV]
	compound -> _program_n_of [label=ARG2]
	compound -> nominalization [label=ARG1]
	"_stay_v_1-fn.Competition" -> nominalization [label="ARG1-fn.Participant_1"]
	udef_q -> _computer_n_1 [label=BV]
	_just_a_1 -> "_need_v_1-fn.Competition" [label=ARG1]
	"_stay_v_1-fn.Competition" -> _computer_n_1 [label="ARG1-fn.Participant_1"]
	"_need_v_1-fn.Competition" -> "_understand_v_by-fn.Motion" [label="ARG2-fn.Participant_2"]
	loc_nonsp -> place_n [label=ARG2]
	"_in+order+to_x" -> "_stay_v_1-fn.Competition" [label=ARG2]
	nominalization -> _trade_v_1 [label=ARG1]
}
