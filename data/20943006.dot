digraph {
	node [shape=circle style=filled]
	"_continue_v_2-fn.Activity_ongoing" -> "_provide_v_1-fn.Supply" [label="ARG1-fn.NotExist"]
	"_provide_v_1-fn.Supply" -> _service_n_1 [label="ARG2-fn.Theme"]
	poss -> pron [label=ARG2]
	def_explicit_q -> _line_n_of [label=BV]
	"_provide_v_1-fn.Supply" -> "named(Data)" [label="ARG1-fn.Agent"]
	compound -> "named(Control)" [label=ARG2]
	_for_p -> _customer_n_of [label=ARG2]
	proper_q -> "named(Control)" [label=BV]
	compound -> _product_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Cyber)" [label=BV]
	compound -> _line_n_of [label=ARG1]
	udef_q -> _service_n_1 [label=BV]
	poss -> _line_n_of [label=ARG1]
	proper_q -> "named(Data)" [label=BV]
	_would_v_modal -> "_continue_v_2-fn.Activity_ongoing" [label=ARG1]
	compound -> "named(Data)" [label=ARG1]
	compound -> _maintenance_n_1 [label=ARG2]
	udef_q -> _maintenance_n_1 [label=BV]
	udef_q -> _customer_n_of [label=BV]
	_however_a_1 -> _would_v_modal [label=ARG1]
	_customer_n_of -> _line_n_of [label=ARG1]
	compound -> "named(Cyber)" [label=ARG2]
	_for_p -> "_provide_v_1-fn.Supply" [label=ARG1]
	udef_q -> _product_n_1 [label=BV]
	compound -> _service_n_1 [label=ARG1]
}
