digraph {
	node [shape=circle style=filled]
	parg_d -> _understand_v_by [label=ARG1]
	"_get_v_1-fn.IN" -> _education_n_1 [label="ARG2-fn.Theme"]
	"_demand_v_of-fn.Have_as_requirement" -> generic_entity [label="ARG1-fn.NotExist"]
	poss -> pron [label=ARG2]
	_that_q_dem -> generic_entity [label=BV]
	poss -> _child_n_1 [label=ARG1]
	_a_q -> _education_n_1 [label=BV]
	_traditional_a_1 -> _understand_v_by [label=ARG1]
	"_know_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_want_v_1-fn.Desiring" -> _as_x_prd [label="ARG2-fn.Theme"]
	"_get_v_1-fn.IN" -> _child_n_1 [label="ARG1-fn.Agent"]
	_as_x_prd -> _understand_v_by [label=ARG2]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_enough_q -> _sense_n_of [label=BV]
	"_demand_v_of-fn.Have_as_requirement" -> thing [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_same_a_as -> _parent_n_of [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	"_want_v_1-fn.Desiring" -> _parent_n_of [label="ARG1-fn.Pivot"]
	"_have_v_1-fn.IN" -> _sense_n_of [label="ARG2-fn.Theme"]
	"_in+order+to_x" -> "_have_v_1-fn.IN" [label=ARG1]
	_decent_a_1 -> _education_n_1 [label=ARG1]
	_these_q_dem -> _parent_n_of [label=BV]
	def_explicit_q -> _child_n_1 [label=BV]
	"_in+order+to_x" -> "_know_v_1-fn.IN" [label=ARG2]
	_fortunate_a_1 -> "_want_v_1-fn.Desiring" [label=ARG1]
	_as_x_prd -> "_get_v_1-fn.IN" [label=ARG1]
	"_know_v_1-fn.IN" -> "_demand_v_of-fn.Have_as_requirement" [label="ARG2-fn.Theme"]
	_common_a_for -> _sense_n_of [label=ARG1]
	which_q -> thing [label=BV]
}
