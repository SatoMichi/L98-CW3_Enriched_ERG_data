digraph {
	node [shape=circle style=filled]
	_if_x_then -> neg [label=ARG2]
	"_negotiate_v_1-fn.Competition" -> _borrowings_n_1 [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> _if_x_then [label="ARG2-fn.Means"]
	compound -> "_lawsuits/nns_u_unknown" [label=ARG1]
	compound -> _bankruptcy_n_1 [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	pronoun_q -> pron [label=BV]
	"_re-_a_again" -> "_negotiate_v_1-fn.Competition" [label=ARG1]
	poss -> pron [label=ARG2]
	udef_q -> _protection_n_of [label=BV]
	"_seek_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_negotiate_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	udef_q -> "_lawsuits/nns_u_unknown" [label=BV]
	_from_p -> _protection_n_of [label=ARG1]
	compound -> _court_n_of [label=ARG1]
	"_seek_v_1-fn.Competition" -> _protection_n_of [label="ARG2-fn.Participant_2"]
	poss -> _borrowings_n_1 [label=ARG1]
	def_explicit_q -> _borrowings_n_1 [label=BV]
	compound -> _protection_n_of [label=ARG1]
	neg -> "_can_v_modal-fn.Existence" [label=ARG1]
	udef_q -> _court_n_of [label=BV]
	"_might_v_modal-fn.Cause_to_end" -> "_seek_v_1-fn.Competition" [label="ARG1-fn.Process"]
	_if_x_then -> "_might_v_modal-fn.Cause_to_end" [label=ARG1]
	udef_q -> _bankruptcy_n_1 [label=BV]
	_from_p -> "_lawsuits/nns_u_unknown" [label=ARG2]
	compound -> _creditor_n_1 [label=ARG2]
	udef_q -> _creditor_n_1 [label=BV]
	"_can_v_modal-fn.Existence" -> "_negotiate_v_1-fn.Competition" [label="ARG1-fn.Entity"]
}
