digraph {
	node [shape=circle style=filled]
	"_establish_v_1-fn.Intentionally_create" -> _standard_n_1 [label="ARG2-fn.NotExist"]
	proper_q -> "named(NEC)" [label=BV]
	"_need_v_1-fn.Required_event" -> "_invite_v_in-fn.Request" [label="ARG2-fn.Theme"]
	"_invite_v_in-fn.Request" -> "named(NEC)" [label="ARG1-fn.NotExist"]
	_behind_p_dir -> _fall_v_1 [label=ARG1]
	def_explicit_q -> _standard_n_1 [label=BV]
	poss -> pron [label=ARG2]
	"_invite_v_in-fn.Request" -> _ally_n_1 [label="ARG2-fn.NotExist"]
	"_try_v_1-fn.Attempt" -> "_stop_v_prd-fn.Activity_stop" [label="ARG2-fn.Theme"]
	proper_q -> "named(Apple)" [label=BV]
	"_try_v_1-fn.Attempt" -> "named(IBM)" [label="ARG1-fn.Agent"]
	_behind_p_dir -> "named(Computer)" [label=ARG2]
	"_need_v_1-fn.Required_event" -> "named(NEC)" [label="ARG1-fn.Pivot"]
	_from_p -> _start_n_1 [label=ARG2]
	_ahead_p -> "named(NEC)" [label=ARG1]
	neg -> "_need_v_1-fn.Required_event" [label=ARG1]
	proper_q -> "named(IBM)" [label=BV]
	"_stop_v_prd-fn.Activity_stop" -> _fall_v_1 [label="ARG1-fn.Agent"]
	compound -> "named(Computer)" [label=ARG1]
	_fall_v_1 -> "named(IBM)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_establish_v_1-fn.Intentionally_create" -> "named(IBM)" [label="ARG1-fn.NotExist"]
	compound -> _upstart_n_1 [label=ARG2]
	proper_q -> "named(Computer)" [label=BV]
	udef_q -> _ally_n_1 [label=BV]
	udef_q -> _upstart_n_1 [label=BV]
	compound -> "named(Apple)" [label=ARG2]
	_competitive_a_1 -> _ally_n_1 [label=ARG1]
	poss -> _standard_n_1 [label=ARG1]
	_from_p -> _ahead_p [label=ARG1]
	_the_q -> _start_n_1 [label=BV]
	"_in+order+to_x" -> "_try_v_1-fn.Attempt" [label=ARG2]
	"_in+order+to_x" -> "_establish_v_1-fn.Intentionally_create" [label=ARG1]
}
