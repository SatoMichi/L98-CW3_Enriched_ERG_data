digraph {
	node [shape=circle style=filled]
	udef_q -> "named_n(US)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Tandy)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Tandy)" [label=BV]
	appos -> "named(Memories)" [label=ARG1]
	compound -> _memory_n_of [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	"_join_v_1-fn.Cause_to_amalgamate" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _chip_n_1 [label=BV]
	neg -> "_join_v_1-fn.Cause_to_amalgamate" [label=ARG1]
	_the_q -> _group_n_of [label=BV]
	_for_p -> _market_n_1 [label=ARG1]
	_seek_v_1 -> "_battle_v_1-fn.Hostile_encounter" [label=ARG2]
	compound -> "named_n(US)" [label=ARG2]
	udef_q -> _computer_n_1 [label=BV]
	udef_q -> _memory_n_of [label=BV]
	"_join_v_1-fn.Cause_to_amalgamate" -> "named(Memories)" [label="ARG2-fn.Patient"]
	compound -> _computer_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	_seek_v_1 -> _group_n_of [label=ARG1]
	udef_q -> _corporation_n_1 [label=BV]
	"_battle_v_1-fn.Hostile_encounter" -> _japanese_n_1 [label="ARG2-fn.Co-Agent"]
	_the_q -> _japanese_n_1 [label=BV]
	compound -> "named(Memories)" [label=ARG1]
	appos -> _group_n_of [label=ARG2]
	_for_p -> _chip_n_1 [label=ARG2]
	compound -> _chip_n_1 [label=ARG1]
	_in_p -> "_battle_v_1-fn.Hostile_encounter" [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	_in_p -> _market_n_1 [label=ARG2]
	proper_q -> "named(Memories)" [label=BV]
	"_battle_v_1-fn.Hostile_encounter" -> _group_n_of [label="ARG1-fn.Agent"]
	_the_q -> _market_n_1 [label=BV]
	compound -> "named(Tandy)" [label=ARG1]
}
