digraph {
	node [shape=circle style=filled]
	_of_p -> _level_n_1 [label=ARG1]
	_of_p -> _and_c [label=ARG2]
	_at_p -> _level_n_1 [label=ARG2]
	_current_a_1 -> _level_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> _and_c [label=BV]
	focus_d -> _at_p [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	_economic_a_1 -> _activity_n_1 [label=ARG1]
	udef_q -> _earnings_n_1 [label=BV]
	udef_q -> _level_n_1 [label=BV]
	_fair_a_1 -> "_value_v_1-fn.Process_stop" [label=ARG1]
	_at_p -> "_value_v_1-fn.Process_stop" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	"_say_v_to-fn.Have_as_requirement" -> "_value_v_1-fn.Process_stop" [label="ARG2-fn.Requirement"]
	"_value_v_1-fn.Process_stop" -> _stock_n_1 [label="ARG2-fn.Place"]
	focus_d -> "_value_v_1-fn.Process_stop" [label=ARG1]
	udef_q -> _activity_n_1 [label=BV]
	parg_d -> _stock_n_1 [label=ARG2]
	parg_d -> "_value_v_1-fn.Process_stop" [label=ARG1]
}
