digraph {
	node [shape=circle style=filled]
	udef_q -> _analyst_n_1 [label=BV]
	compound -> "named(Grippo)" [label=ARG1]
	compound -> "named(J)" [label=ARG1]
	neg -> "_take_v_to-fn.Cause_to_end" [label=ARG1]
	_of_p -> "named(Macdonald)" [label=ARG1]
	compound -> "named(Riely)" [label=ARG1]
	"_take_v_to-fn.Cause_to_end" -> generic_entity [label="ARG2-fn.Means"]
	udef_q -> _media_n_1 [label=BV]
	compound -> _stock_n_1 [label=ARG1]
	compound -> "named(Wall)" [label=ARG2]
	udef_q -> _stock_n_1 [label=BV]
	proper_q -> "named(Grippo)" [label=BV]
	"_take_v_to-fn.Cause_to_end" -> "named(Street)" [label="ARG1-fn.Process"]
	compound -> "named(Street)" [label=ARG1]
	compound -> _analyst_n_1 [label=ARG1]
	compound -> "named(Macdonald)" [label=ARG2]
	proper_q -> "named(Richard)" [label=BV]
	proper_q -> "named(Riely)" [label=BV]
	proper_q -> "named(Wall)" [label=BV]
	_kind_a_of -> "_take_v_to-fn.Cause_to_end" [label=ARG1]
	compound -> _media_n_1 [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	_of_p -> "named(Riely)" [label=ARG2]
	proper_q -> "named(Street)" [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Macdonald)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(J)" [label=BV]
	compound -> "named(Richard)" [label=ARG2]
	proper_q -> "named(Macdonald)" [label=BV]
}
