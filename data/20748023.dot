digraph {
	node [shape=circle style=filled]
	compound -> _secretary_n_of [label=ARG2]
	udef_q -> _secretary_n_of [label=BV]
	"_tell_v_1-fn.Telling" -> "named(Baker)" [label="ARG1-fn.Agent"]
	compound -> "named(James)" [label=ARG2]
	_to_p -> _trip_n_of [label=ARG2]
	_this_q_dem -> _trip_n_of [label=BV]
	"_tell_v_1-fn.Telling" -> _reporter_n_of [label="ARG2-fn.Topic"]
	_be_v_there -> _component_n_1 [label=ARG1]
	_symbolic_a_1 -> _component_n_1 [label=ARG1]
	_let_v_1 -> "_say_v_to-fn.IN" [label=ARG2]
	proper_q -> "named(Baker)" [label=BV]
	pronoun_q -> pron [label=BV]
	_a_q -> _component_n_1 [label=BV]
	proper_q -> "dofw(Wed)" [label=BV]
	"_say_v_to-fn.IN" -> _be_v_there [label="ARG2-fn.Topic"]
	_secretary_n_of -> "named(State)" [label=ARG1]
	proper_q -> "named(James)" [label=BV]
	udef_q -> _reporter_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_let_v_1 -> pron [label=ARG1]
	proper_q -> "named(State)" [label=BV]
	compound -> "named(Baker)" [label=ARG1]
	loc_nonsp -> "dofw(Wed)" [label=ARG2]
	loc_nonsp -> "_tell_v_1-fn.Telling" [label=ARG1]
	_to_p -> _component_n_1 [label=ARG1]
}
