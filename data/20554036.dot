digraph {
	node [shape=circle style=filled]
	focus_d -> _could_v_modal [label=ARG2]
	_fact_n_1 -> _in_p [label=ARG1]
	_in_p -> pron [label=ARG1]
	"_write_v_to-fn.Statement" -> _could_v_modal [label="ARG2-fn.NotExist"]
	_against_p -> _defend_v_from [label=ARG1]
	"_write_v_to-fn.Statement" -> "named(Kroll)" [label="ARG1-fn.NotExist"]
	_conceivable_a_1 -> _have_v_1 [label=ARG1]
	_in_p -> _process_n_of [label=ARG2]
	compound -> "named(Kroll)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_process_n_of -> nominalization [label=ARG1]
	_the_q -> _charge_n_of [label=BV]
	proper_q -> "named(Kroll)" [label=BV]
	_could_v_modal -> _have_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_defend_v_from -> pron [label=ARG2]
	_have_v_1 -> _fact_n_1 [label=ARG1]
	nominalization -> _defend_v_from [label=ARG1]
	udef_q -> nominalization [label=BV]
	_the_q -> _fact_n_1 [label=BV]
	_on_p -> _impact_n_1 [label=ARG1]
	_have_v_1 -> _impact_n_1 [label=ARG2]
	_on_p -> "named(Y&R)" [label=ARG2]
	_adverse_a_1 -> _impact_n_1 [label=ARG1]
	focus_d -> "_write_v_to-fn.Statement" [label=ARG1]
	_against_p -> _charge_n_of [label=ARG2]
	proper_q -> "named(Y&R)" [label=BV]
	_present_a_1 -> _charge_n_of [label=ARG1]
	_a_q -> _impact_n_1 [label=BV]
	_the_q -> _process_n_of [label=BV]
}
