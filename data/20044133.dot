digraph {
	node [shape=circle style=filled]
	_guilty_a_of -> pron [label=ARG1]
	compound -> _missus_n_1 [label=ARG2]
	_because_x -> "_realize_v_1-fn.Competition" [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> "named(Yeargin)" [label="ARG1-fn.Process"]
	compound -> "named(Yeargin)" [label=ARG1]
	_because_x -> "_plead_v_with-for-fn.Have_as_requirement" [label=ARG1]
	"_plead_v_with-for-fn.Have_as_requirement" -> _guilty_a_of [label="ARG2-fn.Requirement"]
	"_no+longer_a_1" -> _possible_a_for [label=ARG1]
	_afraid_a_of -> pron [label=ARG1]
	"_plead_v_with-for-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	_afraid_a_of -> _charge_n_of [label=ARG2]
	_because_x -> _afraid_a_of [label=ARG2]
	proper_q -> "named(Yeargin)" [label=BV]
	"_realize_v_1-fn.Competition" -> "_would_v_modal-fn.Cause_to_end" [label="ARG2-fn.Participant_2"]
	udef_q -> _charge_n_of [label=BV]
	udef_q -> _reinstatement_n_of [label=BV]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	pronoun_q -> pron [label=BV]
	udef_q -> _missus_n_1 [label=BV]
	"_would_v_modal-fn.Cause_to_end" -> _possible_a_for [label="ARG1-fn.Process"]
	_further_a_1 -> _charge_n_of [label=ARG1]
	_possible_a_for -> "_win_v_1-fn.Competition" [label=ARG1]
	comp -> _further_a_1 [label=ARG1]
	"_win_v_1-fn.Competition" -> _reinstatement_n_of [label="ARG2-fn.Participant_2"]
	"_realize_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
}
