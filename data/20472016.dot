digraph {
	node [shape=circle style=filled]
	_of_p -> "named(Brannon)" [label=ARG1]
	proper_q -> "named(Merrill)" [label=BV]
	proper_q -> "named(Capital)" [label=BV]
	compound -> "named(Phillip)" [label=ARG2]
	proper_q -> "named(Phillip)" [label=BV]
	"_minimize_v_1-fn.Achieving_first" -> generic_entity [label="ARG2-fn.New_idea"]
	"_say_v_to-fn.Taking" -> pron [label="ARG1-fn.Agent"]
	pronoun_q -> pron [label=BV]
	"_look_v_at-fn.Needing" -> pron [label="ARG2-fn.Requirement"]
	"_add_v_to-fn.Cause_to_end" -> "named(Brannon)" [label="ARG1-fn.Process"]
	_this_q_dem -> generic_entity [label=BV]
	"_add_v_to-fn.Cause_to_end" -> _colon_p_namely [label="ARG2-fn.Means"]
	"_want_v_1-fn.Getting" -> pron [label="ARG1-fn.Recipient"]
	_no_q -> person [label=BV]
	compound -> "named(Markets)" [label=ARG1]
	"_want_v_1-fn.Getting" -> _and_c [label="ARG2-fn.Theme"]
	"_say_v_to-fn.Taking" -> "_look_v_at-fn.Needing" [label="ARG2-fn.Theme"]
	proper_q -> "named(Lynch)" [label=BV]
	"_minimize_v_1-fn.Achieving_first" -> pron [label="ARG1-fn.Cognizer"]
	neg -> "_want_v_1-fn.Getting" [label=ARG1]
	proper_q -> "named(Markets)" [label=BV]
	proper_q -> "named(Brannon)" [label=BV]
	compound -> "named(Lynch)" [label=ARG1]
	"_look_v_at-fn.Needing" -> person [label="ARG1-fn.Cognizer"]
	compound -> "named(Brannon)" [label=ARG1]
	_of_p -> "named(Markets)" [label=ARG2]
	compound -> "named(Capital)" [label=ARG1]
	_colon_p_namely -> neg [label=ARG1]
	compound -> "named(Merrill)" [label=ARG2]
}
