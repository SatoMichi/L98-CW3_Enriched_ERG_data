digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Have_as_requirement" -> _company_n_of [label="ARG1-fn.Dependent"]
	"_make_v_1-fn.Rite" -> _reduction_n_of [label="ARG2-fn.Member"]
	"_phase_v_out-fn.Activity_start" -> pron [label="ARG1-fn.Place"]
	superl -> _old_a_1 [label=ARG1]
	"_decide_v_1-fn.Rite" -> _and_c [label="ARG2-fn.Member"]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_as_p -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	def_explicit_q -> _capacity_n_1 [label=BV]
	_as_p -> _result_n_of [label=ARG2]
	"_decide_v_1-fn.Rite" -> pron [label="ARG1-fn.Leader"]
	_appropriate_a_to -> _reduction_n_of [label=ARG1]
	"_make_v_1-fn.Rite" -> pron [label="ARG1-fn.Leader"]
	_in_p -> _reduction_n_of [label=ARG1]
	"_operate_v_1-fn.Cause_to_end" -> _expense_n_1 [label="ARG1-fn.Process"]
	_old_a_1 -> _capacity_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_decide_v_1-fn.Rite" [label="ARG2-fn.Requirement"]
	_the_q -> _company_n_of [label=BV]
	_a_q -> _result_n_of [label=BV]
	poss -> pron [label=ARG2]
	"_phase_v_out-fn.Activity_start" -> _capacity_n_1 [label="ARG2-fn.Purpose"]
	_in_p -> _expense_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	focus_d -> _as_p [label=ARG2]
	udef_q -> _reduction_n_of [label=BV]
	poss -> _capacity_n_1 [label=ARG1]
	udef_q -> _expense_n_1 [label=BV]
}
