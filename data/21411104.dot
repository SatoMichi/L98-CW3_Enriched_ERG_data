digraph {
	node [shape=circle style=filled]
	"_get_v_state-fn.Residence" -> _to_p [label="ARG3-fn.Co_resident"]
	_besides_a_1 -> _though_x [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_to_p -> thing [label=ARG1]
	compound -> "named(Jones)" [label=ARG1]
	"_out+of_p" -> "_get_v_state-fn.Residence" [label=ARG1]
	"_out+of_p" -> _team_n_of [label=ARG2]
	"_keep_v_on-fn.Activity_ongoing" -> "_lose_v_1-fn.Competition" [label="ARG1-fn.Duration"]
	"_get_v_state-fn.Residence" -> thing [label="ARG2-fn.Location"]
	_though_x -> "_may_v_modal-fn.Communication_manner" [label=ARG1]
	_a_q -> _extent_n_of [label=BV]
	_to_p -> _extent_n_of [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	free_relative_q -> thing [label=BV]
	_though_x -> "_keep_v_on-fn.Activity_ongoing" [label=ARG2]
	pronoun_q -> pron [label=BV]
	_large_a_1 -> _extent_n_of [label=ARG1]
	"_lose_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Jones)" [label=BV]
	_already_a_1 -> "_get_v_state-fn.Residence" [label=ARG1]
	"_may_v_modal-fn.Communication_manner" -> "_get_v_state-fn.Residence" [label="ARG1-fn.Speaker"]
	"_want_v_1-fn.Competition" -> thing [label="ARG2-fn.Participant_2"]
	_the_q -> _team_n_of [label=BV]
	"_get_v_state-fn.Residence" -> "named(Jones)" [label="ARG1-fn.Resident"]
	_even_x_deg -> _though_x [label=ARG1]
	focus_d -> _to_p [label=ARG2]
	focus_d -> "_may_v_modal-fn.Communication_manner" [label=ARG1]
	"_want_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
}
