digraph {
	node [shape=circle style=filled]
	"_get_v_state-fn.IN" -> _return_n_of [label="ARG2-fn.Theme"]
	_on_p -> _rate_n_of [label=ARG2]
	appos -> "named(Wilson)" [label=ARG1]
	proper_q -> "named(Wilson)" [label=BV]
	compound -> "named(South+Carolina)" [label=ARG1]
	compound -> _planner_n_1 [label=ARG1]
	_if_x_then -> "_guess_v_1-fn.Estimating" [label=ARG2]
	udef_q -> _return_n_of [label=BV]
	compound -> "named(James)" [label=ARG2]
	_from_p -> _return_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Wilson)" [label="ARG1-fn.NotExist"]
	udef_q -> _rate_n_of [label=BV]
	proper_q -> "named(E)" [label=BV]
	_like_a_1 -> _equity_n_1 [label=ARG2]
	proper_q -> "named(Columbia)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_guess_v_1-fn.Estimating" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _bond_n_1 [label=BV]
	_right_a_1 -> "_guess_v_1-fn.Estimating" [label=ARG1]
	_like_a_1 -> _return_n_of [label=ARG1]
	_on_p -> "_guess_v_1-fn.Estimating" [label=ARG1]
	compound -> "named(Columbia)" [label=ARG2]
	focus_d -> "_get_v_state-fn.IN" [label=ARG2]
	udef_q -> _equity_n_1 [label=BV]
	_a_q -> _planner_n_1 [label=BV]
	proper_q -> "named(James)" [label=BV]
	appos -> _planner_n_1 [label=ARG2]
	compound -> "named(Wilson)" [label=ARG1]
	_if_x_then -> "_get_v_state-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.NotExist"]
	proper_q -> "named(South+Carolina)" [label=BV]
	compound -> "named(E)" [label=ARG1]
	"_get_v_state-fn.IN" -> _from_p [label="ARG3-fn.Source"]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.Agent"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_from_p -> _bond_n_1 [label=ARG2]
}
