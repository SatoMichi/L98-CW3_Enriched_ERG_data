digraph {
	node [shape=circle style=filled]
	compound -> "named(Garrison)" [label=ARG1]
	"_know_v_as-fn.IN" -> "_chasers/nns_u_unknown" [label="ARG3-fn.Predicate"]
	compound -> "named(Lake)" [label=ARG2]
	poss -> "named(View)" [label=ARG2]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	parg_d -> "_know_v_as-fn.IN" [label=ARG1]
	proper_q -> "named(Lake)" [label=BV]
	parg_d -> pron [label=ARG2]
	poss -> _president_n_of [label=ARG1]
	appos -> _president_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_want_v_1-fn.Desiring" -> "_know_v_as-fn.IN" [label="ARG2-fn.Theme"]
	focus_d -> "_want_v_1-fn.Desiring" [label=ARG2]
	compound -> "named(William)" [label=ARG2]
	def_explicit_q -> _president_n_of [label=BV]
	proper_q -> "named(Garrison)" [label=BV]
	udef_q -> "_chasers/nns_u_unknown" [label=BV]
	compound -> "named(View)" [label=ARG1]
	appos -> "named(Garrison)" [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	compound -> "_chasers/nns_u_unknown" [label=ARG1]
	udef_q -> _ambulance_n_1 [label=BV]
	neg -> "_want_v_1-fn.Desiring" [label=ARG1]
	"_know_v_as-fn.IN" -> pron [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(Garrison)" [label="ARG1-fn.Agent"]
	compound -> _ambulance_n_1 [label=ARG2]
	proper_q -> "named(William)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(View)" [label=BV]
}
