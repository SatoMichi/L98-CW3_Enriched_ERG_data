digraph {
	node [shape=circle style=filled]
	"_in+order+to_x" -> "_want_v_1-fn.Competition" [label=ARG1]
	_by_p -> "_spark_v_1-fn.Competition" [label=ARG1]
	"_could_v_modal-fn.Cotheme" -> ellipsis_ref [label="ARG1-fn.Theme"]
	"_say_v_to-fn.Cause_to_end" -> "named(New+York)" [label="ARG1-fn.Process"]
	compound -> "named(Armonk)" [label=ARG2]
	"_bring_v_out-fn.Undergo_change" -> "_mainframes/nns_u_unknown" [label="ARG2-fn.Final_category"]
	loc_nonsp -> "_bring_v_out-fn.Undergo_change" [label=ARG1]
	proper_q -> "named(Armonk)" [label=BV]
	comp_equal -> _soon_p [label=ARG1]
	proper_q -> "named(IBM)" [label=BV]
	udef_q -> _sale_n_of [label=BV]
	proper_q -> "named(New+York)" [label=BV]
	"much-many_a" -> _sale_n_of [label=ARG1]
	"_bring_v_out-fn.Undergo_change" -> pron [label="ARG1-fn.Entity"]
	comp_equal -> "_could_v_modal-fn.Cotheme" [label=ARG2]
	ellipsis_ref -> pron [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "_in+order+to_x" [label="ARG2-fn.Means"]
	comp_equal -> "much-many_a" [label=ARG1]
	"_spark_v_1-fn.Competition" -> _sale_n_of [label="ARG2-fn.Participant_2"]
	pronoun_q -> pron [label=BV]
	"_want_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_soon_p -> time_n [label=ARG1]
	_the_q -> _year_n_1 [label=BV]
	_possible_a_for -> ellipsis [label=ARG1]
	"_want_v_1-fn.Competition" -> "_bring_v_out-fn.Undergo_change" [label="ARG2-fn.Participant_2"]
	"_spark_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	compound -> "named(New+York)" [label=ARG1]
	comp_equal -> _possible_a_for [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	"_in+order+to_x" -> "_spark_v_1-fn.Competition" [label=ARG2]
	_end_n_of -> _year_n_1 [label=ARG1]
	compound -> "named(IBM)" [label=ARG2]
	_by_p -> _end_n_of [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	_the_q -> _end_n_of [label=BV]
	_the_q -> "_mainframes/nns_u_unknown" [label=BV]
}
