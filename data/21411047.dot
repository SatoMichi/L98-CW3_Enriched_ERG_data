digraph {
	node [shape=circle style=filled]
	"_go_v_ing-fn.Undergo_change" -> "_look_v_for-fn.Needing" [label="ARG2-fn.Final_category"]
	_when_x_subord -> "_return_v_1-fn.State_continue" [label=ARG1]
	"_go_v_ing-fn.Undergo_change" -> pron [label="ARG1-fn.Entity"]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Jones)" [label=ARG1]
	_a_q -> _replacement_n_of [label=BV]
	compound -> "named(Landry)" [label=ARG1]
	neg -> _surprising_a_1 [label=ARG1]
	_for_p -> "named(Landry)" [label=ARG2]
	"_return_v_1-fn.State_continue" -> "named(Jones)" [label="ARG1-fn.Entity"]
	_for_p -> _replacement_n_of [label=ARG1]
	poss -> _root_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_look_v_for-fn.Needing" -> _replacement_n_of [label="ARG2-fn.Requirement"]
	pronoun_q -> pron [label=BV]
	compound -> "named(Arkansas)" [label=ARG2]
	poss -> pron [label=ARG2]
	"_look_v_for-fn.Needing" -> pron [label="ARG1-fn.Cognizer"]
	_surprising_a_1 -> _when_x_subord [label=ARG1]
	_when_x_subord -> "_go_v_ing-fn.Undergo_change" [label=ARG2]
	proper_q -> "named(Jones)" [label=BV]
	proper_q -> "named(Arkansas)" [label=BV]
	_to_p -> "_return_v_1-fn.State_continue" [label=ARG1]
	compound -> _root_n_1 [label=ARG1]
	_so_a_thus -> neg [label=ARG1]
	_to_p -> _root_n_1 [label=ARG2]
	proper_q -> "named(Landry)" [label=BV]
	def_explicit_q -> _root_n_1 [label=BV]
}
