digraph {
	node [shape=circle style=filled]
	_ask_v_for -> _customer_n_of [label=ARG1]
	proper_q -> "named(I.B.M.)" [label=BV]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	_also_a_1 -> "_supply_v_1-fn.NF" [label=ARG1]
	_about_p -> _story_n_of [label=ARG1]
	proper_q -> "named(Business)" [label=BV]
	_about_p -> "named(IBM)" [label=ARG2]
	_if_x_then -> _also_a_1 [label=ARG1]
	udef_q -> _story_n_of [label=BV]
	_ask_v_for -> _story_n_of [label=ARG3]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	compound -> "named(Machines)" [label=ARG1]
	proper_q -> "named(IBM)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Amram)" [label="ARG1-fn.Agent"]
	udef_q -> _or_c [label=BV]
	udef_q -> implicit_conj [label=BV]
	compound -> "named(Amram)" [label=ARG1]
	compound -> "named(Blue)" [label=ARG1]
	compound -> "named(International)" [label=ARG2]
	compound -> "named(Business)" [label=ARG1]
	_a_q -> _customer_n_of [label=BV]
	focus_d -> "_supply_v_1-fn.NF" [label=ARG2]
	"_supply_v_1-fn.NF" -> _story_n_of [label="ARG2-fn.Theme"]
	"_mention_v_to-fn.Statement" -> _story_n_of [label="ARG1-fn.Agent"]
	_if_x_then -> _ask_v_for [label=ARG2]
	_the_q -> _computer_n_1 [label=BV]
	proper_q -> "named(Blue)" [label=BV]
	"_supply_v_1-fn.NF" -> _computer_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(Big)" [label=ARG2]
	"_mention_v_to-fn.Statement" -> implicit_conj [label="ARG2-fn.Topic"]
	proper_q -> "named(Machines)" [label=BV]
	proper_q -> "named(Amram)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(International)" [label=BV]
	proper_q -> "named(Big)" [label=BV]
}
