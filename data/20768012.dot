digraph {
	node [shape=circle style=filled]
	_outgoing_a_1 -> _money_n_1 [label=ARG1]
	compound -> _fund_n_1 [label=ARG2]
	"_lose_v_1-fn.Change_position_on_a_scale" -> _group_n_of [label="ARG1-fn.Attribute"]
	appos -> _president_n_of [label=ARG2]
	udef_q -> _group_n_of [label=BV]
	udef_q -> _control_n_of [label=BV]
	compound -> "named(Harvey)" [label=ARG1]
	udef_q -> part_of [label=BV]
	proper_q -> "named(Dalbar)" [label=BV]
	udef_q -> _fund_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_control_n_of -> part_of [label=ARG1]
	compound -> "named(Louis)" [label=ARG2]
	poss -> _president_n_of [label=ARG1]
	compound -> _group_n_of [label=ARG1]
	appos -> "named(Harvey)" [label=ARG1]
	focus_d -> "_lose_v_1-fn.Change_position_on_a_scale" [label=ARG2]
	proper_q -> "named(Harvey)" [label=BV]
	_the_q -> _money_n_1 [label=BV]
	"much-many_a" -> part_of [label=ARG1]
	_mutual_a_1 -> _fund_n_1 [label=ARG1]
	"_lose_v_1-fn.Change_position_on_a_scale" -> _control_n_of [label="ARG2-fn.Item"]
	def_explicit_q -> _president_n_of [label=BV]
	neg -> "_lose_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	proper_q -> "named(Louis)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	"_say_v_to-fn.Have_as_requirement" -> "named(Harvey)" [label="ARG1-fn.Dependent"]
	poss -> "named(Dalbar)" [label=ARG2]
	part_of -> _money_n_1 [label=ARG1]
}
