digraph {
	node [shape=circle style=filled]
	_czech_a_1 -> _compatriot_n_1 [label=ARG1]
	_slow_a_1 -> _part_n_1 [label=ARG1]
	"_help_v_out-fn.Cause_to_continue" -> pron [label="ARG1-fn.Agent"]
	"_have_v_qmodal-fn.Amounting_to" -> "_make_v_cause-fn.Cure" [label="ARG1-fn.Value"]
	udef_q -> nominalization [label=BV]
	_across_p_dir -> _plaza_n_1 [label=ARG2]
	loc_nonsp -> "named(Met)" [label=ARG2]
	nominalization -> "_sing_v_1-fn.Competition" [label=ARG1]
	loc_nonsp -> "_make_v_cause-fn.Cure" [label=ARG1]
	"_could_v_modal-fn.Cause_to_end" -> _and_c [label="ARG1-fn.Process"]
	_still_a_1 -> "_make_v_cause-fn.Cure" [label=ARG1]
	_to_p -> "_step_v_1-fn.Competition" [label=ARG1]
	def_explicit_q -> _compatriot_n_1 [label=BV]
	"_debut_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	poss -> _compatriot_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_the_q -> _plaza_n_1 [label=BV]
	poss -> pron [label=ARG2]
	_by_p_means -> "_help_v_out-fn.Cause_to_continue" [label=ARG1]
	"_help_v_out-fn.Cause_to_continue" -> _compatriot_n_1 [label="ARG2-fn.Process"]
	_maybe_a_1 -> "_could_v_modal-fn.Cause_to_end" [label=ARG1]
	"_make_v_cause-fn.Cure" -> "_debut_v_1-fn.Competition" [label="ARG2-fn.Patient"]
	proper_q -> "named(Traviata)" [label=BV]
	_by_p_means -> nominalization [label=ARG2]
	"_sing_v_1-fn.Competition" -> _part_n_1 [label="ARG2-fn.Participant_2"]
	_the_q -> "named(Met)" [label=BV]
	_of_p -> "named(Traviata)" [label=ARG2]
	_across_p_dir -> "_step_v_1-fn.Competition" [label=ARG1]
	_to_p -> "named(Met)" [label=ARG2]
	"_step_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_make_v_cause-fn.Cure" -> pron [label="ARG1-fn.Healer"]
	_of_p -> _part_n_1 [label=ARG1]
	_the_q -> _part_n_1 [label=BV]
}
