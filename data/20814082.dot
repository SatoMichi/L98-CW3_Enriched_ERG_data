digraph {
	node [shape=circle style=filled]
	"_use_v_as-fn.Amounting_to" -> _opportunity_n_1 [label="ARG3-fn.Time_span"]
	"_say_v_to-fn.Have_as_requirement" -> _official_n_1 [label="ARG1-fn.Dependent"]
	compound -> "named(Day)" [label=ARG1]
	udef_q -> _snake_n_1 [label=BV]
	proper_q -> "named(University)" [label=BV]
	_a_q -> _official_n_1 [label=BV]
	compound -> _customs_n_1 [label=ARG2]
	"_use_v_as-fn.Amounting_to" -> _collector_n_1 [label="ARG1-fn.Value"]
	proper_q -> "named(Snake)" [label=BV]
	udef_q -> _customs_n_1 [label=BV]
	_in_p -> "named_n(Netherlands)" [label=ARG2]
	_a_q -> _opportunity_n_1 [label=BV]
	appos -> _event_n_item [label=ARG2]
	_rare_a_1 -> _snake_n_1 [label=ARG1]
	compound -> "named(Snake)" [label=ARG2]
	compound -> "named(Utrecht)" [label=ARG2]
	_opportunity_n_1 -> "_obtain_v_1-fn.Cause_to_end" [label=ARG1]
	parg_d -> _event_n_item [label=ARG2]
	_a_q -> _event_n_item [label=BV]
	parg_d -> "_use_v_as-fn.Amounting_to" [label=ARG1]
	"_obtain_v_1-fn.Cause_to_end" -> _snake_n_1 [label="ARG2-fn.Means"]
	_in_p -> "named(University)" [label=ARG1]
	_a_q -> "named(Day)" [label=BV]
	compound -> _official_n_1 [label=ARG1]
	_the_q -> "named_n(Netherlands)" [label=BV]
	_the_q -> _arrest_n_1 [label=BV]
	_some_q -> _collector_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_follow_v_1-fn.State_continue" [label="ARG2-fn.Requirement"]
	proper_q -> "named(Utrecht)" [label=BV]
	compound -> "named(University)" [label=ARG1]
	appos -> "named(Day)" [label=ARG1]
	"_follow_v_1-fn.State_continue" -> _arrest_n_1 [label="ARG1-fn.Entity"]
	"_use_v_as-fn.Amounting_to" -> _event_n_item [label="ARG2-fn.Attribute"]
	_at_p -> "named(Day)" [label=ARG1]
	_at_p -> "named(University)" [label=ARG2]
	"_follow_v_1-fn.State_continue" -> "named(Day)" [label="ARG2-fn.State"]
}
