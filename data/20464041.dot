digraph {
	node [shape=circle style=filled]
	_a_q -> _reserve_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "_establish_v_1-fn.State_continue" [label="ARG2-fn.Requirement"]
	_the_q -> _bank_n_of [label=BV]
	udef_q -> _default_n_1 [label=BV]
	udef_q -> _loan_n_1 [label=BV]
	_of_p -> _reserve_n_1 [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	udef_q -> interval [label=BV]
	_against_p -> _loan_n_1 [label=ARG2]
	_in_p -> _default_n_1 [label=ARG2]
	interval_p_start -> interval [label=ARG1]
	"_establish_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	pronoun_q -> pron [label=BV]
	_a_q -> _loan_n_1 [label=BV]
	times -> "card(4)" [label=ARG2]
	compound -> _loss_n_of [label=ARG1]
	times -> "card(2.5)" [label=ARG2]
	compound -> _loan_n_1 [label=ARG1]
	udef_q -> _loss_n_of [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	"_establish_v_1-fn.State_continue" -> _reserve_n_1 [label="ARG2-fn.State"]
	compound -> _reserve_n_1 [label=ARG1]
	interval_p_end -> interval [label=ARG1]
	interval_p_end -> _dollar_n_1 [label=ARG2]
	_against_p -> "_establish_v_1-fn.State_continue" [label=ARG1]
	_in_p -> _loan_n_1 [label=ARG1]
	interval_p_start -> _dollar_n_1 [label=ARG2]
	udef_q -> _construction_n_of [label=BV]
	_also_a_1 -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_of_p -> interval [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> _bank_n_of [label="ARG1-fn.Dependent"]
	compound -> _construction_n_of [label=ARG2]
}
