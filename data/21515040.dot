digraph {
	node [shape=circle style=filled]
	compound -> _operation_n_of [label=ARG1]
	comp -> _big_a_1 [label=ARG1]
	poss -> pron [label=ARG2]
	_with_x_subord -> _operate_v_1 [label=ARG2]
	_in_p -> _inexperienced_a_1 [label=ARG1]
	nominalization -> _mine_v_1 [label=ARG1]
	proper_q -> "named(Falconbridge)" [label=BV]
	"_have_v_1-fn.IN" -> _problem_n_of [label="ARG2-fn.Theme"]
	_a_q -> _partner_n_1 [label=BV]
	udef_q -> "_home_n_of-n" [label=BV]
	"_hold_v_1-fn.Defend" -> _swede_n_1 [label="ARG1-fn.Agent"]
	_in_p -> _operation_n_of [label=ARG2]
	compound -> nominalization [label=ARG2]
	udef_q -> _problem_n_of [label=BV]
	_break_v_up -> "named(Noranda)" [label=ARG1]
	def_explicit_q -> _own_n_1 [label=BV]
	compound -> _turf_n_1 [label=ARG1]
	_big_a_1 -> _partner_n_1 [label=ARG1]
	_the_q -> _swede_n_1 [label=BV]
	"_prefer_v_to-fn.Preference" -> _break_v_up [label="ARG2-fn.NotExist"]
	poss -> _own_n_1 [label=ARG1]
	_would_v_modal -> "_prefer_v_to-fn.Preference" [label=ARG1]
	_like_p -> _partner_n_1 [label=ARG1]
	_operate_v_1 -> _partner_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	def_explicit_q -> _turf_n_1 [label=BV]
	_could_v_modal -> "_have_v_1-fn.IN" [label=ARG1]
	_relatively_x_deg -> _inexperienced_a_1 [label=ARG1]
	_some_q -> _analyst_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _analyst_n_1 [label="ARG1-fn.Agent"]
	"_prefer_v_to-fn.Preference" -> "named(Noranda)" [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	udef_q -> nominalization [label=BV]
	proper_q -> "named(Noranda)" [label=BV]
	_break_v_up -> "named(Falconbridge)" [label=ARG2]
	_on_p -> _operate_v_1 [label=ARG1]
	_international_a_1 -> _operation_n_of [label=ARG1]
	compound -> "_home_n_of-n" [label=ARG2]
	_like_p -> "named(Noranda)" [label=ARG2]
	_much_x_deg -> comp [label=ARG1]
	"_hold_v_1-fn.Defend" -> _own_n_1 [label="ARG2-fn.Theme"]
	"_have_v_1-fn.IN" -> "_hold_v_1-fn.Defend" [label="ARG3-fn.NotExist"]
	_on_p -> _turf_n_1 [label=ARG2]
	poss -> _turf_n_1 [label=ARG1]
	udef_q -> _operation_n_of [label=BV]
	_inexperienced_a_1 -> _swede_n_1 [label=ARG1]
	_with_x_subord -> _could_v_modal [label=ARG1]
	"_have_v_1-fn.IN" -> _swede_n_1 [label="ARG1-fn.Pivot"]
}
