digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Halas)" [label=BV]
	compound -> _predecessor_n_1 [label=ARG2]
	compound -> "named(Michael)" [label=ARG2]
	appos -> _and_c [label=ARG2]
	focus_d -> "_contend_v_1-fn.Quitting" [label=ARG1]
	compound -> "named(Halas)" [label=ARG1]
	_a_q -> _grandson_n_of [label=BV]
	udef_q -> _predecessor_n_1 [label=BV]
	compound -> "named(McCaskey)" [label=ARG1]
	_the_q -> "named(Bears)" [label=BV]
	"_have_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_have_v_1-fn.Competition" -> _lease_n_1 [label="ARG2-fn.Participant_2"]
	_grandson_n_of -> "named(Halas)" [label=ARG1]
	_the_q -> _lease_n_1 [label=BV]
	focus_d -> "_have_v_1-fn.Competition" [label=ARG2]
	udef_q -> _and_c [label=BV]
	poss -> "named_n(NFL)" [label=ARG2]
	_the_q -> "named_n(NFL)" [label=BV]
	proper_q -> "named(Michael)" [label=BV]
	_bad_a_1 -> _lease_n_1 [label=ARG1]
	_in_p -> _lease_n_1 [label=ARG1]
	proper_q -> "named(B)" [label=BV]
	"_found_v_1-fn.Competition" -> "named(Halas)" [label="ARG1-fn.Participant_1"]
	pronoun_q -> pron [label=BV]
	_in_p -> "named_n(NFL)" [label=ARG2]
	appos -> "named(McCaskey)" [label=ARG1]
	"_found_v_1-fn.Competition" -> _organization_n_1 [label="ARG2-fn.Participant_2"]
	proper_q -> "named(George)" [label=BV]
	proper_q -> "named(McCaskey)" [label=BV]
	compound -> "named(Chicago)" [label=ARG2]
	poss -> _organization_n_1 [label=ARG1]
	proper_q -> "named(Chicago)" [label=BV]
	"_contend_v_1-fn.Quitting" -> "_have_v_1-fn.Competition" [label="ARG2-fn.Employer"]
	compound -> _organization_n_1 [label=ARG1]
	"_contend_v_1-fn.Quitting" -> "named(McCaskey)" [label="ARG1-fn.Employee"]
	_president_n_of -> "named(Bears)" [label=ARG1]
	def_explicit_q -> _organization_n_1 [label=BV]
	_the_q -> _president_n_of [label=BV]
	compound -> "named(Bears)" [label=ARG1]
	compound -> "named(B)" [label=ARG1]
	superl -> _bad_a_1 [label=ARG1]
	compound -> "named(George)" [label=ARG2]
}
