digraph {
	node [shape=circle style=filled]
	_to_p -> _standard_n_1 [label=ARG2]
	neg -> "_build_v_1-fn.Building" [label=ARG1]
	"_say_v_to-fn.IN" -> _argue_v_with [label="ARG2-fn.NotExist"]
	_proper_a_1 -> _standard_n_1 [label=ARG1]
	parg_d -> _structure_n_1 [label=ARG2]
	"_build_v_1-fn.Building" -> _structure_n_1 [label="ARG2-fn.Product"]
	_to_p -> "_build_v_1-fn.Building" [label=ARG1]
	focus_d -> _plaintiff_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	parg_d -> "_damage_v_1-fn.Damaging" [label=ARG1]
	_argue_v_with -> neg [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _plaintiff_n_1 [label=BV]
	udef_q -> _structure_n_1 [label=BV]
	compound -> _design_n_of [label=ARG2]
	_argue_v_with -> _plaintiff_n_1 [label=ARG1]
	parg_d -> "_build_v_1-fn.Building" [label=ARG1]
	udef_q -> _design_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _standard_n_1 [label=BV]
	compound -> _standard_n_1 [label=ARG1]
	"_damage_v_1-fn.Damaging" -> _structure_n_1 [label="ARG2-fn.Patient"]
}
