digraph {
	node [shape=circle style=filled]
	"card(1)" -> generic_entity [label=ARG1]
	focus_d -> "_think_v_1-fn.Attempt_suasion" [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_want_v_1-fn.State_continue" -> "_go_v_1-fn.Change_position_on_a_scale" [label="ARG2-fn.State"]
	nominalization -> "_want_v_1-fn.State_continue" [label=ARG1]
	_clear_a_of -> _sense_n_of [label=ARG1]
	which_q -> place_n [label=BV]
	udef_q -> generic_entity [label=BV]
	"_have_v_1-fn.State_continue" -> _sense_n_of [label="ARG2-fn.State"]
	pronoun_q -> pron [label=BV]
	"_want_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	"_think_v_1-fn.Attempt_suasion" -> pron [label="ARG1-fn.Content"]
	_a_q -> _sense_n_of [label=BV]
	loc_nonsp -> "_go_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> generic_entity [label="ARG1-fn.Dependent"]
	_sense_n_of -> nominalization [label=ARG1]
	"_have_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	"_think_v_1-fn.Attempt_suasion" -> "_have_v_1-fn.State_continue" [label="ARG2-fn.Addressee"]
	loc_nonsp -> place_n [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	"_go_v_1-fn.Change_position_on_a_scale" -> _company_n_of [label="ARG1-fn.Attribute"]
	neg -> "_think_v_1-fn.Attempt_suasion" [label=ARG1]
	_the_q -> _company_n_of [label=BV]
}
