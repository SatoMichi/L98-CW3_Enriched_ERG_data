digraph {
	node [shape=circle style=filled]
	compound -> "named(Division)" [label=ARG1]
	compound -> "named(Creek)" [label=ARG1]
	udef_q -> _service_n_1 [label=BV]
	_for_p -> _service_n_1 [label=ARG2]
	_as_p -> "_open_v_cause-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Walnut)" [label=BV]
	_in_p -> "named(Creek)" [label=ARG2]
	_as_p -> part_of [label=ARG2]
	compound -> _disaster_n_1 [label=ARG2]
	def_explicit_q -> _plan_n_1 [label=BV]
	compound -> _emergency_n_1 [label=ARG2]
	compound -> "named(National)" [label=ARG2]
	_the_q -> _concern_n_1 [label=BV]
	def_explicit_q -> "named(Division)" [label=BV]
	proper_q -> "named(Service)" [label=BV]
	_a_q -> _center_n_of [label=BV]
	udef_q -> _emergency_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	compound -> "named(Service)" [label=ARG1]
	_part_q -> part_of [label=BV]
	compound -> _recovery_n_1 [label=ARG1]
	poss -> _plan_n_1 [label=ARG1]
	part_of -> _plan_n_1 [label=ARG1]
	_in_p -> _center_n_of [label=ARG1]
	poss -> _concern_n_1 [label=ARG2]
	compound -> "named(Walnut)" [label=ARG2]
	udef_q -> _recovery_n_1 [label=BV]
	compound -> _plan_n_1 [label=ARG1]
	proper_q -> "named(National)" [label=BV]
	"_open_v_cause-fn.Cause_to_end" -> _center_n_of [label="ARG2-fn.Means"]
	"_open_v_cause-fn.Cause_to_end" -> "named(Division)" [label="ARG1-fn.Process"]
	compound -> _service_n_1 [label=ARG1]
	proper_q -> "named(Creek)" [label=BV]
	udef_q -> _disaster_n_1 [label=BV]
	_for_p -> _center_n_of [label=ARG1]
	poss -> "named(Division)" [label=ARG1]
}
