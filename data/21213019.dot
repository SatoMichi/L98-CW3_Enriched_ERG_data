digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Oppenheimer)" [label=BV]
	compound -> "named(Suckow)" [label=ARG1]
	"_say_v_to-fn.IN" -> _while_x [label="ARG2-fn.NotExist"]
	proper_q -> "named(Management)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Suckow)" [label="ARG1-fn.NotExist"]
	compound -> _bond_n_1 [label=ARG1]
	_while_x -> subord [label=ARG1]
	_at_p -> "named(Management)" [label=ARG2]
	compound -> _corporation_n_1 [label=ARG2]
	compound -> _junk_n_1 [label=ARG2]
	compound -> _holder_n_of [label=ARG1]
	compound -> _security_n_1 [label=ARG1]
	subord -> "_watch_v_1-fn.Perception_active" [label=ARG1]
	_just_a_1 -> "_watch_v_1-fn.Perception_active" [label=ARG1]
	udef_q -> _income_n_1 [label=BV]
	proper_q -> "named(Paul)" [label=BV]
	compound -> _stock_n_1 [label=ARG2]
	udef_q -> _junk_n_1 [label=BV]
	compound -> _income_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _corporation_n_1 [label=BV]
	compound -> "named(Paul)" [label=ARG2]
	udef_q -> _bond_n_1 [label=BV]
	proper_q -> "named(Suckow)" [label=BV]
	_while_x -> "_fall_v_1-fn.Change_position_on_a_scale" [label=ARG2]
	udef_q -> _stock_n_1 [label=BV]
	udef_q -> _security_n_1 [label=BV]
	"_watch_v_1-fn.Perception_active" -> _holder_n_of [label="ARG1-fn.NotExist"]
	"_fall_v_1-fn.Change_position_on_a_scale" -> _market_n_1 [label="ARG1-fn.NotExist"]
	_at_p -> _director_n_of [label=ARG1]
	neg -> "_know_v_1-fn.IN" [label=ARG1]
	_most_q -> _holder_n_of [label=BV]
	which_q -> thing [label=BV]
	"_watch_v_1-fn.Perception_active" -> pron [label="ARG2-fn.NotExist"]
	"_know_v_1-fn.IN" -> _do_v_1 [label="ARG2-fn.NotExist"]
	focus_d -> "_watch_v_1-fn.Perception_active" [label=ARG2]
	_do_v_1 -> thing [label=ARG2]
	_fixed_a_1 -> _income_n_1 [label=ARG1]
	compound -> "named(Management)" [label=ARG1]
	compound -> _market_n_1 [label=ARG1]
	compound -> "named(Oppenheimer)" [label=ARG2]
	appos -> "named(Suckow)" [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	appos -> _director_n_of [label=ARG2]
	udef_q -> _director_n_of [label=BV]
	_director_n_of -> _security_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	subord -> neg [label=ARG2]
}
