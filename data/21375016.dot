digraph {
	node [shape=circle style=filled]
	_with_p -> _executive_n_1 [label=ARG2]
	udef_q -> _dinner_n_1 [label=BV]
	_with_p -> _discussion_n_1 [label=ARG1]
	"_acknowledge_v_to-fn.Statement" -> _discussion_n_1 [label="ARG1-fn.Agent"]
	poss -> pron [label=ARG2]
	compound -> "named(Joseph)" [label=ARG1]
	compound -> _discussion_n_1 [label=ARG1]
	def_explicit_q -> _discussion_n_1 [label=BV]
	_the_q -> _executive_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_a_q -> _interview_n_1 [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	compound -> _executive_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _problem_n_of [label=BV]
	compound -> "named(Prudential)" [label=ARG2]
	_for_p -> _junk_n_1 [label=ARG2]
	poss -> _discussion_n_1 [label=ARG1]
	compound -> _dinner_n_1 [label=ARG2]
	proper_q -> "named(Joseph)" [label=BV]
	"_say_v_to-fn.IN" -> "_acknowledge_v_to-fn.Statement" [label="ARG2-fn.Topic"]
	udef_q -> _junk_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Prudential)" [label=BV]
	"_acknowledge_v_to-fn.Statement" -> _problem_n_of [label="ARG2-fn.Topic"]
	_in_p_state -> _interview_n_1 [label=ARG2]
	_for_p -> _problem_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Joseph)" [label="ARG1-fn.Agent"]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
