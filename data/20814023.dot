digraph {
	node [shape=circle style=filled]
	with_p -> "_forge_v_1-fn.Competition" [label=ARG1]
	nominalization -> _retail_v_1 [label=ARG1]
	"_get_v_1-fn.Competition" -> nominalization [label="ARG2-fn.Participant_2"]
	compound -> _investment_n_1 [label=ARG2]
	"_want_v_1-fn.Competition" -> "_get_v_1-fn.Competition" [label="ARG2-fn.Participant_2"]
	_from_p -> _and_c [label=ARG2]
	_european_a_1 -> _store_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_get_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	udef_q -> _and_c [label=BV]
	_ideal_a_1 -> "_say_v_to-fn.Surpassing" [label=ARG1]
	udef_q -> _department_n_1 [label=BV]
	compound -> nominalization [label=ARG2]
	pronoun_q -> pron [label=BV]
	_a_q -> _network_n_of [label=BV]
	nominalization -> _back_v_1 [label=ARG1]
	compound -> _network_n_of [label=ARG1]
	"_forge_v_1-fn.Competition" -> _network_n_of [label="ARG2-fn.Participant_2"]
	_japanese_a_1 -> _store_n_1 [label=ARG1]
	compound -> _store_n_1 [label=ARG1]
	_global_a_1 -> _network_n_of [label=ARG1]
	udef_q -> _investment_n_1 [label=BV]
	compound -> _banker_n_1 [label=ARG1]
	compound -> _department_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Surpassing" [label=ARG1]
	"_say_v_to-fn.Surpassing" -> "_want_v_1-fn.Competition" [label="ARG2-fn.Profiled_item"]
	_a_q -> _store_n_1 [label=BV]
	with_p -> nominalization [label=ARG2]
	udef_q -> _banker_n_1 [label=BV]
	"_say_v_to-fn.Surpassing" -> _banker_n_1 [label="ARG1-fn.Standard_item"]
	_from_p -> nominalization [label=ARG1]
	"_want_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
}
