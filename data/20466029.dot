digraph {
	node [shape=circle style=filled]
	_a_q -> _rhino_n_1 [label=BV]
	compound -> "named(Foods)" [label=ARG1]
	"_understand_v_by-fn.Motion" -> "named(Foods)" [label="ARG2-fn.Source"]
	compound -> "named(Michael)" [label=ARG2]
	udef_q -> nominalization [label=BV]
	_in_p -> _company_n_of [label=ARG1]
	_a_q -> _company_n_of [label=BV]
	compound -> _company_n_of [label=ARG1]
	"_package_v_1-fn.Competition" -> _food_n_1 [label="ARG2-fn.Participant_2"]
	_like_p -> nominalization [label=ARG2]
	proper_q -> "named(Michael)" [label=BV]
	parg_d -> "_package_v_1-fn.Competition" [label=ARG1]
	compound -> _industry_n_1 [label=ARG1]
	"_mis-_a_error" -> "_understand_v_by-fn.Motion" [label=ARG1]
	nominalization -> "_find_v_1-fn.Competition" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_this_q_dem -> generic_entity [label=BV]
	_like_p -> "_breed_n_of-n" [label=ARG1]
	_a_q -> "_breed_n_of-n" [label=BV]
	"_argue_v_with-fn.Avoiding" -> "_understand_v_by-fn.Motion" [label="ARG2-fn.Place"]
	compound -> _food_n_1 [label=ARG2]
	_in_p -> _industry_n_1 [label=ARG2]
	udef_q -> _food_n_1 [label=BV]
	"_be_v_id-fn.Residence" -> _company_n_of [label="ARG2-fn.Location"]
	"_argue_v_with-fn.Avoiding" -> pron [label="ARG1-fn.Agent"]
	proper_q -> "named(Foods)" [label=BV]
	compound -> _growth_n_of [label=ARG2]
	appos -> "_breed_n_of-n" [label=ARG2]
	appos -> _company_n_of [label=ARG1]
	udef_q -> _growth_n_of [label=BV]
	_colon_p_namely -> "_understand_v_by-fn.Motion" [label=ARG1]
	_rare_a_1 -> "_breed_n_of-n" [label=ARG1]
	parg_d -> _food_n_1 [label=ARG2]
	parg_d -> "_understand_v_by-fn.Motion" [label=ARG1]
	parg_d -> "named(Foods)" [label=ARG2]
	_the_q -> _industry_n_1 [label=BV]
	"_be_v_id-fn.Residence" -> generic_entity [label="ARG1-fn.Resident"]
	"_find_v_1-fn.Competition" -> _rhino_n_1 [label="ARG2-fn.Participant_2"]
	_white_a_1 -> _rhino_n_1 [label=ARG1]
}
