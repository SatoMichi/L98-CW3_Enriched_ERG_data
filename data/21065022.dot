digraph {
	node [shape=circle style=filled]
	compound -> "named(John)" [label=ARG2]
	"_file_v_1-fn.Submitting_documents" -> _attorney_n_1 [label="ARG1-fn.Agent"]
	poss -> _attorney_n_1 [label=ARG1]
	proper_q -> "named(Lang)" [label=BV]
	appos -> "named(Lorin)" [label=ARG2]
	def_explicit_q -> _attorney_n_1 [label=BV]
	_should_v_modal -> "_kill_v_1-fn.Killing" [label=ARG1]
	"_include_v_1-fn.NF" -> _record_n_of [label="ARG1-fn.NotExist"]
	proper_q -> "named(Laff)" [label=BV]
	compound -> "named(Lang)" [label=ARG1]
	compound -> "_stockbroker/nn_u_unknown" [label=ARG1]
	parg_d -> "_kill_v_1-fn.Killing" [label=ARG1]
	_the_q -> _witness_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	parg_d -> "_tape_v_1-fn.NF" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_file_v_1-fn.Submitting_documents" -> _memorandum_n_1 [label="ARG2-fn.Theme"]
	_in_p_state -> "_tell_v_1-fn.Telling" [label=ARG1]
	proper_q -> "named(Haas)" [label=BV]
	parg_d -> _conversation_n_1 [label=ARG2]
	"_tape_v_1-fn.NF" -> _conversation_n_1 [label="ARG2-fn.Theme"]
	"_tell_v_1-fn.Telling" -> _witness_n_1 [label="ARG1-fn.Agent"]
	poss -> "named(Laff)" [label=ARG2]
	proper_q -> "named(Lorin)" [label=BV]
	"_include_v_1-fn.NF" -> _conversation_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(Lorin)" [label=ARG1]
	compound -> "named(Haas)" [label=ARG2]
	_secret_a_1 -> "_tape_v_1-fn.NF" [label=ARG1]
	proper_q -> "named(Henry)" [label=BV]
	udef_q -> _trial_n_1 [label=BV]
	_a_q -> _memorandum_n_1 [label=BV]
	compound -> _trial_n_1 [label=ARG2]
	"_ask_v_1-fn.Request" -> _memorandum_n_1 [label="ARG1-fn.NotExist"]
	compound -> "named(Henry)" [label=ARG2]
	_the_q -> _record_n_of [label=BV]
	appos -> _witness_n_1 [label=ARG1]
	"_tell_v_1-fn.Telling" -> "_stockbroker/nn_u_unknown" [label="ARG2-fn.Topic"]
	compound -> "named(Laff)" [label=ARG1]
	compound -> _record_n_of [label=ARG1]
	_a_q -> "_stockbroker/nn_u_unknown" [label=BV]
	_in_p_state -> _conversation_n_1 [label=ARG2]
	proper_q -> "named(John)" [label=BV]
	_a_q -> _conversation_n_1 [label=BV]
	appos -> "named(Lang)" [label=ARG2]
	"_kill_v_1-fn.Killing" -> "named(Laff)" [label="ARG2-fn.Patient"]
	"_tell_v_1-fn.Telling" -> _should_v_modal [label="ARG3-fn.Recipient"]
	"_ask_v_1-fn.Request" -> "_include_v_1-fn.NF" [label="ARG2-fn.NotExist"]
	parg_d -> "named(Laff)" [label=ARG2]
	appos -> _attorney_n_1 [label=ARG1]
}
