digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	_at_p -> _issue_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	proper_q -> "named(Francisco)" [label=BV]
	def_explicit_q -> _knowledge_n_of [label=BV]
	compound -> "named(San)" [label=ARG2]
	_at_p -> _technology_n_1 [label=ARG1]
	udef_q -> _program_n_of [label=BV]
	_the_q -> _technology_n_1 [label=BV]
	"_underlie_v_1-fn.NF" -> _technology_n_1 [label="ARG1-fn.Theme"]
	appos -> _developer_n_of [label=ARG2]
	_to_p -> _be_v_id [label=ARG1]
	compound -> "named(Goodman)" [label=ARG1]
	_a_q -> _developer_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Goodman)" [label=BV]
	appos -> "named(Goodman)" [label=ARG1]
	_of_p -> "named(HyperCard)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Goodman)" [label="ARG1-fn.Agent"]
	poss -> _knowledge_n_of [label=ARG1]
	compound -> _developer_n_of [label=ARG1]
	_a_q -> _technology_n_1 [label=BV]
	udef_q -> _issue_n_1 [label=BV]
	compound -> "named(Francisco)" [label=ARG1]
	_of_p -> _technology_n_1 [label=ARG1]
	compound -> "named(Danny)" [label=ARG2]
	proper_q -> "named(Danny)" [label=BV]
	_be_v_id -> _technology_n_1 [label=ARG2]
	neg -> _be_v_id [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	compound -> _program_n_of [label=ARG1]
	proper_q -> "named(San)" [label=BV]
	_to_p -> _knowledge_n_of [label=ARG2]
	udef_q -> _area_n_of [label=BV]
	compound -> _area_n_of [label=ARG1]
	compound -> "named(HyperCard)" [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(HyperCard)" [label=BV]
}
