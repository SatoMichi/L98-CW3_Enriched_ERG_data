digraph {
	node [shape=circle style=filled]
	subord -> "_give_v_1-fn.Competition" [label=ARG2]
	"_benefit_v_from-fn.Getting" -> _rate_n_of [label="ARG2-fn.Theme"]
	comp -> _low_a_1 [label=ARG1]
	def_explicit_q -> "_outlays/nns_u_unknown" [label=BV]
	_low_a_1 -> _rate_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_give_v_1-fn.Competition" -> _boost_n_1 [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Genentech)" [label=BV]
	udef_q -> _tax_n_1 [label=BV]
	_on_p_state -> _side_n_1 [label=ARG2]
	"_due+to_p" -> "_benefit_v_from-fn.Getting" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> subord [label="ARG2-fn.Means"]
	compound -> _rate_n_of [label=ARG1]
	focus_d -> _on_p_state [label=ARG2]
	"_give_v_1-fn.Competition" -> _earnings_n_1 [label="ARG3-fn.Participants"]
	"_say_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	poss -> "_outlays/nns_u_unknown" [label=ARG1]
	compound -> _research_n_1 [label=ARG2]
	"_benefit_v_from-fn.Getting" -> "named(Genentech)" [label="ARG1-fn.Recipient"]
	pronoun_q -> pron [label=BV]
	subord -> "_benefit_v_from-fn.Getting" [label=ARG1]
	poss -> pron [label=ARG2]
	udef_q -> _earnings_n_1 [label=BV]
	compound -> _side_n_1 [label=ARG1]
	_the_q -> _side_n_1 [label=BV]
	compound -> _tax_n_1 [label=ARG2]
	udef_q -> _research_n_1 [label=BV]
	compound -> "_outlays/nns_u_unknown" [label=ARG1]
	udef_q -> _plus_n_1 [label=BV]
	focus_d -> "_benefit_v_from-fn.Getting" [label=ARG1]
	_a_q -> _boost_n_1 [label=BV]
	"_due+to_p" -> "_outlays/nns_u_unknown" [label=ARG2]
	_on_p_state -> "_benefit_v_from-fn.Getting" [label=ARG1]
	compound -> _plus_n_1 [label=ARG2]
	_a_q -> _rate_n_of [label=BV]
}
