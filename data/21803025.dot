digraph {
	node [shape=circle style=filled]
	udef_q -> _train_n_of [label=BV]
	compound -> _operation_n_of [label=ARG1]
	_late_p -> time_n [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_plan_v_1-fn.Purpose" -> pron [label="ARG1-fn.Experiencer"]
	compound -> _train_n_of [label=ARG2]
	"_resume_v_1-fn.Process_resume" -> _operation_n_of [label="ARG2-fn.Theme"]
	"_resume_v_1-fn.Process_resume" -> pron [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "_plan_v_1-fn.Purpose" [label="ARG2-fn.Topic"]
	loc_nonsp -> time_n [label=ARG2]
	pronoun_q -> pron [label=BV]
	_to_p -> _operation_n_of [label=ARG1]
	loc_nonsp -> "_resume_v_1-fn.Process_resume" [label=ARG1]
	_some_q -> _operation_n_of [label=BV]
	"_say_v_to-fn.IN" -> "named(Amtrak)" [label="ARG1-fn.Agent"]
	_to_p -> "named(Oakland)" [label=ARG2]
	proper_q -> "named(Oakland)" [label=BV]
	proper_q -> "named(Amtrak)" [label=BV]
	"_plan_v_1-fn.Purpose" -> "_resume_v_1-fn.Process_resume" [label="ARG2-fn.NotExist"]
	def_implicit_q -> time_n [label=BV]
}
