digraph {
	node [shape=circle style=filled]
	"_need_v_1-fn.Needing" -> _sugar_n_1 [label="ARG2-fn.NotExist"]
	parg_d -> "_know_v_1-fn.IN" [label=ARG1]
	poss -> pron [label=ARG2]
	_the_q -> _dealer_n_1 [label=BV]
	"_give_v_1-fn.Giving" -> _support_n_of [label="ARG2-fn.Theme"]
	poss -> _support_n_of [label=ARG1]
	_the_q -> _expectation_n_of [label=BV]
	_apparent_a_1 -> "_give_v_1-fn.Giving" [label=ARG1]
	"_give_v_1-fn.Giving" -> _market_n_1 [label="ARG3-fn.Recipient"]
	focus_d -> _and_c [label=ARG2]
	_principal_a_1 -> _support_n_of [label=ARG1]
	def_explicit_q -> _support_n_of [label=BV]
	_expectation_n_of -> _come_v_1 [label=ARG1]
	_in_p_dir -> _come_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_come_v_1 -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> _dealer_n_1 [label="ARG1-fn.NotExist"]
	_the_q -> _sugar_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.NotExist"]
	"_need_v_1-fn.Needing" -> pron [label="ARG1-fn.NotExist"]
	"_give_v_1-fn.Giving" -> _expectation_n_of [label="ARG1-fn.Agent"]
	_the_q -> _market_n_1 [label=BV]
	"_know_v_1-fn.IN" -> "_need_v_1-fn.Needing" [label="ARG2-fn.NotExist"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
