digraph {
	node [shape=circle style=filled]
	"_acknowledge_v_to-fn.State_continue" -> "named(Peters)" [label="ARG1-fn.Entity"]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Peters)" [label=ARG1]
	_in_p -> _situation_n_1 [label=ARG2]
	_in_p -> _and_c [label=ARG1]
	proper_q -> "named(Peters)" [label=BV]
	"_acknowledge_v_to-fn.State_continue" -> generic_entity [label="ARG2-fn.State"]
	udef_q -> _and_c [label=BV]
	"_say_v_to-fn.Taking" -> neg [label="ARG2-fn.Theme"]
	udef_q -> _mister_n_1 [label=BV]
	_with_p -> _in_p [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.Taking" -> "named(Peters)" [label="ARG1-fn.Agent"]
	_the_q -> _situation_n_1 [label=BV]
	neg -> _unlike_p [label=ARG1]
	proper_q -> "named(Guber)" [label=BV]
	proper_q -> "named(Warner)" [label=BV]
	_unlike_p -> _situation_n_1 [label=ARG2]
	_that_q_dem -> generic_entity [label=BV]
	_with_p -> "named(Warner)" [label=ARG2]
	compound -> "named(Guber)" [label=ARG1]
	_unlike_p -> pron [label=ARG1]
}
