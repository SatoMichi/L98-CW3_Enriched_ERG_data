digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Review)" [label=BV]
	proper_q -> "named(Inquiry)" [label=BV]
	def_explicit_q -> "named(Board)" [label=BV]
	"_fear_v_1-fn.Experiencer_focus" -> pron [label="ARG1-fn.NotExist"]
	comp -> _late_a_for [label=ARG1]
	"_say_v_to-fn.IN" -> "_fear_v_1-fn.Experiencer_focus" [label="ARG2-fn.NotExist"]
	_either_a_also -> "_complain_v_to-about-fn.Statement" [label=ARG1]
	def_explicit_q -> time_n [label=BV]
	udef_q -> "_retribution/nn_u_unknown" [label=BV]
	poss -> _state_n_of [label=ARG2]
	poss -> "named(Board)" [label=ARG1]
	_to_p -> "_complain_v_to-about-fn.Statement" [label=ARG1]
	_the_q -> _state_n_of [label=BV]
	subord -> neg [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	compound -> "named(Inquiry)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Judicial)" [label=ARG2]
	compound -> _and_c [label=ARG2]
	compound -> "named(Board)" [label=ARG1]
	subord -> "_say_v_to-fn.IN" [label=ARG2]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	"_fear_v_1-fn.Experiencer_focus" -> "_retribution/nn_u_unknown" [label="ARG2-fn.NotExist"]
	_to_p -> "named(Board)" [label=ARG2]
	proper_q -> "named(Judicial)" [label=BV]
	_late_a_for -> time_n [label=ARG1]
	udef_q -> _and_c [label=BV]
	"_complain_v_to-about-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	neg -> "_complain_v_to-about-fn.Statement" [label=ARG1]
}
