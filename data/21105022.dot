digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Have_as_requirement" -> "_have_v_1-fn.State_continue" [label="ARG2-fn.Requirement"]
	"_have_v_1-fn.State_continue" -> _idea_n_of [label="ARG2-fn.State"]
	_the_q -> _idea_n_of [label=BV]
	udef_q -> _price_n_of [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	"_lower_v_cause-fn.Cause_to_end" -> _price_n_of [label="ARG2-fn.Means"]
	udef_q -> nominalization [label=BV]
	_right_a_1 -> _idea_n_of [label=ARG1]
	nominalization -> "_lower_v_cause-fn.Cause_to_end" [label=ARG1]
	_throughout_p -> _store_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Sears)" [label=BV]
	poss -> pron [label=ARG2]
	def_explicit_q -> _store_n_1 [label=BV]
	_by_p_means -> "_have_v_1-fn.State_continue" [label=ARG1]
	_by_p_means -> nominalization [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	"_have_v_1-fn.State_continue" -> "named(Sears)" [label="ARG1-fn.Entity"]
	_throughout_p -> "_lower_v_cause-fn.Cause_to_end" [label=ARG1]
	focus_d -> _by_p_means [label=ARG2]
	poss -> _store_n_1 [label=ARG1]
}
