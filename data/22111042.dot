digraph {
	node [shape=circle style=filled]
	compound -> "named(John)" [label=ARG2]
	compound -> "named(True)" [label=ARG2]
	_of_p -> _subsidiary_n_1 [label=ARG1]
	"_want_v_1-fn.Desiring" -> _move_v_cause [label="ARG2-fn.NotExist"]
	appos -> _subsidiary_n_1 [label=ARG2]
	nominalization -> _market_v_1 [label=ARG1]
	_for_p -> _director_n_of [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	proper_q -> "named(Stoner)" [label=BV]
	_of_p -> _and_c [label=ARG2]
	compound -> nominalization [label=ARG2]
	"_want_v_1-fn.Desiring" -> _people_n_of [label="ARG1-fn.NotExist"]
	proper_q -> "named(Black)" [label=BV]
	appos -> "named(Temper)" [label=ARG1]
	proper_q -> "named(Decker)" [label=BV]
	_a_q -> _subsidiary_n_1 [label=BV]
	udef_q -> _corporation_n_1 [label=BV]
	udef_q -> _people_n_of [label=BV]
	udef_q -> _leaf_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Stoner)" [label="ARG1-fn.NotExist"]
	compound -> "named(Stoner)" [label=ARG1]
	_move_v_cause -> _pile_n_of [label=ARG2]
	appos -> "named(Stoner)" [label=ARG1]
	udef_q -> nominalization [label=BV]
	_move_v_cause -> _people_n_of [label=ARG1]
	compound -> _pile_n_of [label=ARG1]
	proper_q -> "named(True)" [label=BV]
	_for_p -> "named(Temper)" [label=ARG2]
	compound -> _leaf_n_1 [label=ARG2]
	_a_q -> _pile_n_of [label=BV]
	proper_q -> "named(John)" [label=BV]
	compound -> _director_n_of [label=ARG1]
	udef_q -> _and_c [label=BV]
	compound -> "named(Temper)" [label=ARG1]
	appos -> _director_n_of [label=ARG2]
	proper_q -> "named(Temper)" [label=BV]
	udef_q -> _director_n_of [label=BV]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	neg -> "_want_v_1-fn.Desiring" [label=ARG1]
}
