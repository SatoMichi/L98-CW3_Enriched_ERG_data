digraph {
	node [shape=circle style=filled]
	_the_q -> _bakery_n_1 [label=BV]
	_for_p -> _amount_n_of [label=ARG2]
	_a_q -> _amount_n_of [label=BV]
	compound -> _company_n_of [label=ARG1]
	compound -> "named(Family)" [label=ARG1]
	"_un-_a_rvrs" -> "_disclose_v_to-fn.Amounting_to" [label=ARG1]
	compound -> "named(Mills)" [label=ARG2]
	parg_d -> _amount_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _convenience_n_1 [label=BV]
	proper_q -> "named(Bakery)" [label=BV]
	"_sell_v_1-fn.Competition" -> "named(Bakery)" [label="ARG3-fn.Participants"]
	udef_q -> _food_n_1 [label=BV]
	compound -> "named(Bakery)" [label=ARG1]
	"_sell_v_1-fn.Competition" -> _bakery_n_1 [label="ARG2-fn.Participant_2"]
	_for_p -> "_sell_v_1-fn.Competition" [label=ARG1]
	parg_d -> "_disclose_v_to-fn.Amounting_to" [label=ARG1]
	proper_q -> "named(Mills)" [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "_sell_v_1-fn.Competition" [label="ARG2-fn.Means"]
	"_sell_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_say_v_to-fn.Cause_to_end" -> _company_n_of [label="ARG1-fn.Process"]
	compound -> _food_n_1 [label=ARG1]
	"_disclose_v_to-fn.Amounting_to" -> _amount_n_of [label="ARG2-fn.Attribute"]
	_the_q -> _company_n_of [label=BV]
	proper_q -> "named(Family)" [label=BV]
	compound -> _convenience_n_1 [label=ARG2]
}
