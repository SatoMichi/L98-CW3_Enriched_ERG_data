digraph {
	node [shape=circle style=filled]
	compound -> "named(New)" [label=ARG2]
	_behind_p_dir -> _fall_v_1 [label=ARG1]
	"_once+again_a_1" -> _might_v_modal [label=ARG1]
	poss -> pron [label=ARG2]
	_behind_p_dir -> _competitor_n_1 [label=ARG2]
	proper_q -> "named(New)" [label=BV]
	compound -> _competitor_n_1 [label=ARG1]
	_in_p -> "_falter_v_1-fn.NF" [label=ARG1]
	"_say_v_to-fn.IN" -> _might_v_modal [label="ARG2-fn.NotExist"]
	poss -> _competitor_n_1 [label=ARG1]
	appos -> _exchange_n_1 [label=ARG2]
	_fall_v_1 -> pron [label=ARG1]
	compound -> _chief_n_1 [label=ARG2]
	compound -> "named(Commodity)" [label=ARG2]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	def_explicit_q -> _competitor_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(York)" [label=ARG1]
	udef_q -> _chief_n_1 [label=BV]
	compound -> _exchange_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	appos -> _competitor_n_1 [label=ARG1]
	_the_q -> _exchange_n_1 [label=BV]
	_if_x_then -> "_falter_v_1-fn.NF" [label=ARG2]
	_in_p -> _move_n_1 [label=ARG2]
	proper_q -> "named(York)" [label=BV]
	proper_q -> "named(Commodity)" [label=BV]
	_these_q_dem -> _move_n_1 [label=BV]
	"_falter_v_1-fn.NF" -> _exchange_n_1 [label="ARG1-fn.NotExist"]
	_might_v_modal -> _fall_v_1 [label=ARG1]
}
