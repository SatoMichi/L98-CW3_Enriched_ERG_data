digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Have_as_requirement" -> "_hurt_v_1-fn.Cause_to_make_noise" [label="ARG2-fn.Requirement"]
	proper_q -> "named(South)" [label=BV]
	compound -> "named(America)" [label=ARG1]
	udef_q -> _problem_n_of [label=BV]
	parg_d -> _unit_n_of [label=ARG2]
	parg_d -> "_hurt_v_1-fn.Cause_to_make_noise" [label=ARG1]
	proper_q -> "named(America)" [label=BV]
	compound -> _battery_n_of [label=ARG2]
	proper_q -> "named(Ralston)" [label=BV]
	_economic_a_1 -> _problem_n_of [label=ARG1]
	"_continue_v_1-fn.State_continue" -> _problem_n_of [label="ARG1-fn.Entity"]
	_in_p -> "named(America)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_in_p -> _problem_n_of [label=ARG1]
	def_explicit_q -> _unit_n_of [label=BV]
	"_hurt_v_1-fn.Cause_to_make_noise" -> _problem_n_of [label="ARG1-fn.Agent"]
	"_hurt_v_1-fn.Cause_to_make_noise" -> _unit_n_of [label="ARG2-fn.Sound_maker"]
	compound -> "named(South)" [label=ARG2]
	compound -> "named(Eveready)" [label=ARG2]
	udef_q -> _battery_n_of [label=BV]
	poss -> _unit_n_of [label=ARG1]
	compound -> _unit_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Ralston)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Eveready)" [label=BV]
}
