digraph {
	node [shape=circle style=filled]
	_should_v_modal -> "_try_v_1-fn.Attempt" [label=ARG1]
	_be_v_id -> _trader_n_1 [label=ARG2]
	"_try_v_1-fn.Attempt" -> _people_n_of [label="ARG1-fn.Agent"]
	"_buy_v_1-fn.Commerce_buy" -> _trader_n_1 [label="ARG1-fn.Agent"]
	_next_a_1 -> _stock_n_1 [label=ARG1]
	neg -> _should_v_modal [label=ARG1]
	udef_q -> _trader_n_1 [label=BV]
	_in_p -> _effort_n_1 [label=ARG2]
	_the_q -> _stock_n_1 [label=BV]
	"_ride_v_1-fn.IN" -> _trend_n_1 [label="ARG2-fn.Theme"]
	_be_v_id -> _people_n_of [label=ARG1]
	superl -> _late_a_for [label=ARG1]
	_effort_n_1 -> _or_c [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _people_n_of [label=BV]
	_the_q -> _trend_n_1 [label=BV]
	_economic_a_1 -> _trend_n_1 [label=ARG1]
	_in_p -> _and_c [label=ARG1]
	"_catch_v_1-fn.NF" -> _stock_n_1 [label="ARG2-fn.Theme"]
	_a_q -> _effort_n_1 [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_try_v_1-fn.Attempt" -> _be_v_id [label="ARG2-fn.Theme"]
	"_sell_v_1-fn.Commerce_sell" -> _trader_n_1 [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
	_late_a_for -> _trend_n_1 [label=ARG1]
	_hot_a_1 -> _stock_n_1 [label=ARG1]
}
