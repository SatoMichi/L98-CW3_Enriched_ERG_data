digraph {
	node [shape=circle style=filled]
	_to_p -> _or_c [label=ARG2]
	loc_nonsp -> "_rise_v_1-fn.Experiencer_obj" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_rise_v_1-fn.Experiencer_obj" [label="ARG2-fn.Requirement"]
	"card(17)" -> _percent_n_of [label=ARG1]
	_from_p -> "_rise_v_1-fn.Experiencer_obj" [label=ARG1]
	"card(1.47)" -> _dollar_n_1 [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	"_rise_v_1-fn.Experiencer_obj" -> _net_n_1 [label="ARG1-fn.Experiencer"]
	udef_q -> _or_c [label=BV]
	proper_q -> "named(Squibb)" [label=BV]
	compound -> "named(Squibb)" [label=ARG1]
	_a_p_per -> _share_n_of [label=ARG2]
	udef_q -> _percent_n_of [label=BV]
	udef_q -> _share_n_of [label=BV]
	udef_q -> _net_n_1 [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	times -> "card(144.5)" [label=ARG2]
	_from_p -> _or_c [label=ARG2]
	_a_p_per -> _dollar_n_1 [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	udef_q -> _corporation_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Squibb)" [label="ARG1-fn.Dependent"]
	_to_p -> "_rise_v_1-fn.Experiencer_obj" [label=ARG1]
	"card(1.25)" -> _dollar_n_1 [label=ARG1]
	times -> "card(123)" [label=ARG2]
	loc_nonsp -> _percent_n_of [label=ARG2]
}
