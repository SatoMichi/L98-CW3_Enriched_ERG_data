digraph {
	node [shape=circle style=filled]
	compound -> "named(Ogilvy)" [label=ARG2]
	_the_q -> "named(Mafia)" [label=BV]
	_at_p -> _top_n_1 [label=ARG2]
	compound -> _term_n_of [label=ARG2]
	_as_x_subord -> _obvious_a_to [label=ARG1]
	_as_x_subord -> _be_v_id [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_enormous_a_1 -> _disruption_n_of [label=ARG1]
	_obvious_a_to -> _be_v_id [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_as_x_subord -> "_call_v_name-fn.IN" [label=ARG2]
	"_say_v_1-fn.IN" -> "named(Dougherty)" [label="ARG1-fn.NotExist"]
	_be_v_id -> _disruption_n_of [label=ARG2]
	_be_v_id -> "_thing_n_of-about" [label=ARG1]
	_be_v_id -> _member_n_of [label=ARG2]
	_be_v_id -> "named(Graham)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_as_x_subord -> "_say_v_1-fn.IN" [label=ARG2]
	compound -> "named(Dougherty)" [label=ARG1]
	"_call_v_name-fn.IN" -> pron [label="ARG3-fn.Result"]
	_the_q -> _top_n_1 [label=BV]
	proper_q -> "named(Dougherty)" [label=BV]
	proper_q -> "named(Graham)" [label=BV]
	udef_q -> _disruption_n_of [label=BV]
	"_need_v_1-fn.Needing" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> _term_n_of [label=BV]
	proper_q -> "named(Ogilvy)" [label=BV]
	"_need_v_1-fn.Needing" -> "_thing_n_of-about" [label="ARG2-fn.NotExist"]
	compound -> "named(Mafia)" [label=ARG1]
	_the_q -> "_thing_n_of-about" [label=BV]
	_last_a_1 -> "_thing_n_of-about" [label=ARG1]
	_member_n_of -> "named(Mafia)" [label=ARG1]
	_at_p -> _disruption_n_of [label=ARG1]
	_a_q -> _member_n_of [label=BV]
	_long_a_1 -> _term_n_of [label=ARG1]
	compound -> _member_n_of [label=ARG1]
}
