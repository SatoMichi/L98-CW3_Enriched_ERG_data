digraph {
	node [shape=circle style=filled]
	_a_q -> _attorney_n_1 [label=BV]
	proper_q -> "named(Gibson)" [label=BV]
	neg -> _relevant_a_1 [label=ARG1]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.Topic"]
	_because_x -> _once_x_subord [label=ARG2]
	compound -> "named(Wayne)" [label=ARG2]
	proper_q -> "named(Crutcher)" [label=BV]
	_represent_v_1 -> _attorney_n_1 [label=ARG1]
	compound -> "named(Los)" [label=ARG2]
	proper_q -> "named(Wayne)" [label=BV]
	_the_q -> _executive_n_1 [label=BV]
	proper_q -> "named(Peters)" [label=BV]
	proper_q -> "named(Los)" [label=BV]
	_any_q -> _time_n_of [label=BV]
	_in_p -> implicit_conj [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Smith)" [label="ARG1-fn.Agent"]
	compound -> _executive_n_1 [label=ARG1]
	appos -> _attorney_n_1 [label=ARG2]
	_at_p -> _attorney_n_1 [label=ARG1]
	_would_v_modal -> _let_v_1 [label=ARG1]
	"_terminate_v_cause-fn.Activity_stop" -> pron [label="ARG2-fn.Theme"]
	_at_p_temp -> _time_n_of [label=ARG2]
	"_tell_v_1-fn.Telling" -> _and_c [label="ARG1-fn.Agent"]
	udef_q -> implicit_conj [label=BV]
	compound -> "named(Sony)" [label=ARG2]
	compound -> "named(Angeles)" [label=ARG1]
	proper_q -> "named(Sony)" [label=BV]
	"_see_v_1-fn.Perception_experience" -> _contract_n_1 [label="ARG2-fn.Stimulus"]
	"_say_v_to-fn.IN" -> _because_x [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	"_tell_v_1-fn.Telling" -> _would_v_modal [label="ARG3-fn.Recipient"]
	_at_p -> implicit_conj [label=ARG2]
	_the_q -> _contract_n_1 [label=BV]
	_in_p -> "named(Angeles)" [label=ARG2]
	_at_p_temp -> "_terminate_v_cause-fn.Activity_stop" [label=ARG1]
	proper_q -> "named(Dunn)" [label=BV]
	proper_q -> "named(Guber)" [label=BV]
	compound -> "named(Smith)" [label=ARG1]
	neg -> "_see_v_1-fn.Perception_experience" [label=ARG1]
	_represent_v_1 -> "named(Sony)" [label=ARG2]
	"_see_v_1-fn.Perception_experience" -> _executive_n_1 [label="ARG1-fn.Experiencer"]
	_once_x_subord -> "_tell_v_1-fn.Telling" [label=ARG2]
	_once_x_subord -> neg [label=ARG1]
	proper_q -> "named(Warner)" [label=BV]
	appos -> "named(Smith)" [label=ARG1]
	proper_q -> "named(Angeles)" [label=BV]
	_because_x -> neg [label=ARG1]
	proper_q -> "named(Smith)" [label=BV]
	udef_q -> _and_c [label=BV]
	_let_v_1 -> "named(Warner)" [label=ARG1]
	_relevant_a_1 -> pron [label=ARG1]
	_let_v_1 -> "_terminate_v_cause-fn.Activity_stop" [label=ARG2]
}
