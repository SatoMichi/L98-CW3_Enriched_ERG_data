digraph {
	node [shape=circle style=filled]
	compound -> "named(Humpty)" [label=ARG2]
	compound -> "named(Foods)" [label=ARG1]
	compound -> "named(Michael)" [label=ARG2]
	compound -> "named(Dumpty)" [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_give_v_1-fn.State_continue" -> _chance_n_of [label="ARG2-fn.State"]
	"_get_v_state-fn.State_continue" -> pron [label="ARG2-fn.State"]
	comp_equal -> "named(Dumpty)" [label=ARG2]
	proper_q -> "named(Michael)" [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Humpty)" [label=BV]
	"_get_v_state-fn.State_continue" -> _together_p [label="ARG3-fn.Time"]
	_much_x_deg -> comp_equal [label=ARG1]
	proper_q -> "named(Foods)" [label=BV]
	_chance_n_of -> nominalization [label=ARG1]
	proper_q -> "named(Dumpty)" [label=BV]
	nominalization -> "_get_v_state-fn.State_continue" [label=ARG1]
	udef_q -> _chance_n_of [label=BV]
	udef_q -> _investor_n_1 [label=BV]
	"much-many_a" -> _investor_n_1 [label=ARG1]
	comp_equal -> _much_x_deg [label=ARG1]
	"_give_v_1-fn.State_continue" -> "named(Foods)" [label="ARG3-fn.Time"]
	_about_x_deg -> comp_equal [label=ARG1]
	_together_p -> pron [label=ARG1]
	"_give_v_1-fn.State_continue" -> _investor_n_1 [label="ARG1-fn.Entity"]
}
