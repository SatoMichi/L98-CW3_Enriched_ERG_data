digraph {
	node [shape=circle style=filled]
	appos -> _bank_n_of [label=ARG1]
	"_cure_v_of-fn.Cure" -> pron [label="ARG1-fn.Agent"]
	compound -> _company_n_1 [label=ARG2]
	focus_d -> _in_p_state [label=ARG2]
	compound -> "named(Trust)" [label=ARG1]
	_take_v_1 -> pron [label=ARG1]
	proper_q -> "named(Tokyo)" [label=BV]
	"_notify_v_of-fn.Telling" -> _bank_n_of [label="ARG1-fn.Agent"]
	"_in+order+to_x" -> "_cure_v_of-fn.Cure" [label=ARG2]
	_take_v_1 -> _action_n_1 [label=ARG2]
	"_notify_v_of-fn.Telling" -> _default_n_1 [label="ARG3-fn.Topic"]
	pronoun_q -> pron [label=BV]
	_a_q -> _default_n_1 [label=BV]
	proper_q -> "named(Trust)" [label=BV]
	_bank_n_of -> "named(Tokyo)" [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	appos -> "named(Trust)" [label=ARG2]
	"_notify_v_of-fn.Telling" -> pron [label="ARG2-fn.Recipient"]
	_also_a_1 -> "_notify_v_of-fn.Telling" [label=ARG1]
	_in_p_state -> _addition_n_1 [label=ARG2]
	_might_v_modal -> "_in+order+to_x" [label=ARG1]
	_the_q -> _default_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _bank_n_of [label="ARG1-fn.Agent"]
	"_in+order+to_x" -> _take_v_1 [label=ARG1]
	udef_q -> _action_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(HealthVest)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> _might_v_modal [label="ARG2-fn.Topic"]
	proper_q -> "named(HealthVest)" [label=BV]
	udef_q -> _company_n_1 [label=BV]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _addition_n_1 [label=BV]
	udef_q -> _bank_n_of [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_cure_v_of-fn.Cure" -> _default_n_1 [label="ARG2-fn.NotExist"]
}
