digraph {
	node [shape=circle style=filled]
	_the_q -> _discipline_n_1 [label=BV]
	"_get_v_state-fn.get.04" -> _rid_v_of [label="ARG2-fn.Patient"]
	compound -> "named(Stone)" [label=ARG1]
	poss -> pron [label=ARG2]
	_unfair_a_to -> _discipline_n_1 [label=ARG1]
	"_get_v_state-fn.get.04" -> _manager_n_of [label="ARG1-fn.Agent"]
	_rid_v_of -> _manager_n_of [label=ARG2]
	udef_q -> _reason_n_for [label=BV]
	"_want_v_1-fn.Desiring" -> "_get_v_state-fn.get.04" [label="ARG2-fn.Theme"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_rid_v_of -> pron [label=ARG3]
	parg_d -> _rid_v_of [label=ARG1]
	parg_d -> _manager_n_of [label=ARG2]
	_personal_a_1 -> _reason_n_for [label=ARG1]
	"_think_v_1-fn.IN" -> _unfair_a_to [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_for_p -> _reason_n_for [label=ARG2]
	"_think_v_1-fn.IN" -> "named(Stone)" [label="ARG1-fn.NotExist"]
	def_explicit_q -> _manager_n_of [label=BV]
	"_want_v_1-fn.Desiring" -> _manager_n_of [label="ARG1-fn.Pivot"]
	_for_p -> "_get_v_state-fn.get.04" [label=ARG1]
	poss -> _manager_n_of [label=ARG1]
	proper_q -> "named(Stone)" [label=BV]
	"_believe_v_1-fn.Awareness" -> "_want_v_1-fn.Desiring" [label="ARG2-fn.NotExist"]
	"_believe_v_1-fn.Awareness" -> pron [label="ARG1-fn.NotExist"]
}
