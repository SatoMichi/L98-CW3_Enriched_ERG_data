digraph {
	node [shape=circle style=filled]
	"_lay_v_1-fn.Placing" -> part_of [label="ARG2-fn.Theme"]
	_in_p_state -> _article_n_of [label=ARG2]
	compound -> _page_n_1 [label=ARG1]
	part_of -> _blame_n_1 [label=ARG1]
	_turn_n_of -> _adjust_v_to [label=ARG1]
	udef_q -> _editorial_n_1 [label=BV]
	def_implicit_q -> "mofy(Oct)" [label=BV]
	def_explicit_q -> "dofm(10)" [label=BV]
	_be_v_id -> _turn_n_of [label=ARG2]
	proper_q -> "named(Craig)" [label=BV]
	_ail_v_cause -> _country_n_of [label=ARG2]
	_ail_v_cause -> thing [label=ARG1]
	_of_p -> "named(Bank)" [label=ARG2]
	"_develop_v_1-fn.IN" -> _country_n_of [label="ARG1-fn.NotExist"]
	_a_q -> _article_n_of [label=BV]
	_the_q -> "named(Bank)" [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	_for_p -> nominalization [label=ARG2]
	compound -> _editorial_n_1 [label=ARG2]
	_in_p_state -> _adjust_v_to [label=ARG1]
	of_p -> "mofy(Oct)" [label=ARG2]
	_be_v_id -> pron [label=ARG1]
	proper_q -> "named(Roberts)" [label=BV]
	"_lay_v_1-fn.Placing" -> _at_p [label="ARG3-fn.Destination"]
	proper_q -> "named(Paul)" [label=BV]
	"_lay_v_1-fn.Placing" -> "named(Roberts)" [label="ARG1-fn.Agent"]
	pronoun_q -> pron [label=BV]
	udef_q -> _country_n_of [label=BV]
	compound -> "named(Paul)" [label=ARG2]
	compound -> _article_n_of [label=ARG1]
	compound -> "named(Craig)" [label=ARG1]
	focus_d -> _be_v_id [label=ARG1]
	poss -> "named(Bank)" [label=ARG2]
	def_explicit_q -> _turn_n_of [label=BV]
	compound -> "named(World)" [label=ARG2]
	proper_q -> "named(World)" [label=BV]
	udef_q -> nominalization [label=BV]
	_the_q -> _blame_n_1 [label=BV]
	compound -> "dofm(10)" [label=ARG2]
	_most_q -> part_of [label=BV]
	compound -> "named(Bank)" [label=ARG1]
	_the_q -> _doorstep_n_1 [label=BV]
	poss -> _turn_n_of [label=ARG1]
	nominalization -> _ail_v_cause [label=ARG1]
	_for_p -> _blame_n_1 [label=ARG1]
	_at_p -> part_of [label=ARG1]
	_at_p -> _doorstep_n_1 [label=ARG2]
	of_p -> "dofm(10)" [label=ARG1]
	_of_p -> _doorstep_n_1 [label=ARG1]
	udef_q -> _page_n_1 [label=BV]
	compound -> "named(Roberts)" [label=ARG1]
	which_q -> thing [label=BV]
}
