digraph {
	node [shape=circle style=filled]
	poss -> _plan_n_1 [label=ARG1]
	poss -> _couple_n_1 [label=ARG2]
	_that_q_dem -> _sense_n_of [label=BV]
	_spend_v_1 -> _plan_n_1 [label=ARG1]
	"_in+order+to_x" -> _meet_v_1 [label=ARG2]
	_the_q -> _return_n_of [label=BV]
	_the_q -> _couple_n_1 [label=BV]
	poss -> pron [label=ARG2]
	_actual_a_1 -> _risky_a_for [label=ARG1]
	comp -> _risky_a_for [label=ARG1]
	neg -> "_in+order+to_x" [label=ARG1]
	_indeed_a_1 -> _if_x_then [label=ARG1]
	def_explicit_q -> _plan_n_1 [label=BV]
	"_generate_v_1-fn.IN" -> _return_n_of [label="ARG1-fn.NotExist"]
	_in_p -> _sense_n_of [label=ARG2]
	poss -> _portfolio_n_1 [label=ARG1]
	_if_x_then -> _could_v_modal [label=ARG1]
	def_explicit_q -> _portfolio_n_1 [label=BV]
	_if_x_then -> neg [label=ARG2]
	_in_p -> _risky_a_for [label=ARG1]
	"_generate_v_1-fn.IN" -> _dollar_n_1 [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	comp -> _old_a_1 [label=ARG1]
	parg_d -> "_expect_v_1-fn.IN" [label=ARG1]
	_risky_a_for -> _portfolio_n_1 [label=ARG1]
	parg_d -> _return_n_of [label=ARG2]
	_enough_q -> _dollar_n_1 [label=BV]
	"_expect_v_1-fn.IN" -> _return_n_of [label="ARG2-fn.Theme"]
	_old_a_1 -> _couple_n_1 [label=ARG1]
	_meet_v_1 -> _return_n_of [label=ARG1]
	_meet_v_1 -> _plan_n_1 [label=ARG2]
	_could_v_modal -> _actual_a_1 [label=ARG1]
	"_in+order+to_x" -> "_generate_v_1-fn.IN" [label=ARG1]
}
