digraph {
	node [shape=circle style=filled]
	udef_q -> _investigation_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_say_v_to-fn.IN" [label="ARG2-fn.NotExist"]
	"_result_v_in-fn.NF" -> _action_n_1 [label="ARG2-fn.Theme"]
	poss -> _executive_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Seidman)" [label="ARG1-fn.Agent"]
	compound -> _mister_n_1 [label=ARG2]
	_further_a_1 -> _action_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	focus_d -> _investigation_n_1 [label=ARG2]
	poss -> "named(Lincoln)" [label=ARG2]
	"_result_v_in-fn.NF" -> _investigation_n_1 [label="ARG1-fn.NotExist"]
	def_explicit_q -> _executive_n_1 [label=BV]
	_may_v_modal -> "_result_v_in-fn.NF" [label=ARG1]
	_against_p -> _action_n_1 [label=ARG1]
	proper_q -> "named(Lincoln)" [label=BV]
	udef_q -> _fraud_n_1 [label=BV]
	compound -> _fraud_n_1 [label=ARG2]
	proper_q -> "named(Seidman)" [label=BV]
	pronoun_q -> pron [label=BV]
	_include_v_1 -> "named(Seidman)" [label=ARG1]
	_include_v_1 -> _action_n_1 [label=ARG2]
	_against_p -> _executive_n_1 [label=ARG2]
	comp -> _further_a_1 [label=ARG1]
	_further_a_1 -> _investigation_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _may_v_modal [label="ARG2-fn.NotExist"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	compound -> _action_n_1 [label=ARG1]
	udef_q -> _action_n_1 [label=BV]
	compound -> "named(Seidman)" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
