digraph {
	node [shape=circle style=filled]
	"_grandly/rb_u_unknown" -> _tout_v_to [label=ARG1]
	_in_p -> "_split_v_1-fn.Cause_to_fragment" [label=ARG1]
	_tout_v_to -> _system_n_of [label=ARG2]
	_inner_a_1 -> _workings_n_1 [label=ARG1]
	"_reveal_v_to-fn.Evidence" -> _workings_n_1 [label="ARG2-fn.NotExist"]
	def_explicit_q -> _workings_n_1 [label=BV]
	poss -> _suspension_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	_the_q -> _suspension_n_1 [label=BV]
	compound -> _corporation_n_1 [label=ARG2]
	poss -> _system_n_of [label=ARG1]
	def_explicit_q -> _system_n_of [label=BV]
	compound -> "named(Motor)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _corporation_n_1 [label=BV]
	proper_q -> "named(Toyota)" [label=BV]
	proper_q -> "named(Motor)" [label=BV]
	_a_q -> _car_n_1 [label=BV]
	_half_q -> generic_entity [label=BV]
	"_in+order+to_x" -> "_reveal_v_to-fn.Evidence" [label=ARG2]
	_tout_v_to -> "named(Motor)" [label=ARG1]
	"_split_v_1-fn.Cause_to_fragment" -> _car_n_1 [label="ARG1-fn.NotExist"]
	_in_p -> generic_entity [label=ARG2]
	"_reveal_v_to-fn.Evidence" -> _car_n_1 [label="ARG1-fn.NotExist"]
	poss -> _workings_n_1 [label=ARG1]
	"_in+order+to_x" -> "_split_v_1-fn.Cause_to_fragment" [label=ARG1]
	compound -> "named(Toyota)" [label=ARG2]
	_in_p -> _system_n_of [label=ARG1]
	_in_p -> _car_n_1 [label=ARG2]
}
