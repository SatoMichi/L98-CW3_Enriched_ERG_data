digraph {
	node [shape=circle style=filled]
	udef_q -> _expense_n_1 [label=BV]
	"_remain_v_1-fn.State_continue" -> _independent_a_of [label="ARG2-fn.Theme"]
	"_continue_v_2-fn.Activity_ongoing" -> "_in+order+to_x" [label="ARG2-fn.NotExist"]
	"_deduct_v_from-fn.NF" -> _employee_n_of [label="ARG1-fn.NotExist"]
	udef_q -> _employee_n_of [label=BV]
	appos -> _professional_n_1 [label=ARG2]
	"_avoid_v_1-fn.Avoiding" -> _worker_n_1 [label="ARG1-fn.Agent"]
	udef_q -> _worker_n_1 [label=BV]
	"_want_v_1-fn.Desiring" -> _and_c [label="ARG2-fn.Theme"]
	"_in+order+to_x" -> "_continue_v_2-fn.Activity_ongoing" [label=ARG2]
	"_continue_v_2-fn.Activity_ongoing" -> _worker_n_1 [label="ARG1-fn.NotExist"]
	"_in+order+to_x" -> "_deduct_v_from-fn.NF" [label=ARG2]
	"_remain_v_1-fn.State_continue" -> _worker_n_1 [label="ARG1-fn.NotExist"]
	"_in+order+to_x" -> "_remain_v_1-fn.State_continue" [label=ARG1]
	udef_q -> _tax_n_1 [label=BV]
	_independent_a_of -> _worker_n_1 [label=ARG1]
	"_in+order+to_x" -> neg [label=ARG1]
	_especially_x_deg -> udef_q [label=ARG1]
	udef_q -> _professional_n_1 [label=BV]
	nominalization -> _withhold_v_1 [label=ARG1]
	appos -> _worker_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	"_deduct_v_from-fn.NF" -> _expense_n_1 [label="ARG2-fn.NotExist"]
	"much-many_a" -> _expense_n_1 [label=ARG1]
	"_want_v_1-fn.Desiring" -> _worker_n_1 [label="ARG1-fn.Pivot"]
	ellipsis_ref -> _employee_n_of [label=ARG1]
	"_avoid_v_1-fn.Avoiding" -> nominalization [label="ARG2-fn.Theme"]
	"much-many_a" -> _worker_n_1 [label=ARG1]
	compound -> _tax_n_1 [label=ARG2]
	compound -> nominalization [label=ARG1]
	neg -> _can_v_modal [label=ARG1]
	"_in+order+to_x" -> "_avoid_v_1-fn.Avoiding" [label=ARG2]
	_can_v_modal -> ellipsis_ref [label=ARG1]
}
