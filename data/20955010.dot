digraph {
	node [shape=circle style=filled]
	appos -> "named(Ruder)" [label=ARG2]
	poss -> pron [label=ARG2]
	focus_d -> _like_p [label=ARG2]
	_in_p -> _crisis_n_1 [label=ARG1]
	_like_p -> "_face_v_1-fn.Confronting_problem" [label=ARG1]
	_a_q -> _crisis_n_1 [label=BV]
	_with_p -> _crisis_n_1 [label=ARG2]
	idiom_q_i -> _office_n_1 [label=BV]
	def_explicit_q -> _predecessor_n_1 [label=BV]
	proper_q -> "named(Ruder)" [label=BV]
	_with_p -> pron [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	parg_d -> "_face_v_1-fn.Confronting_problem" [label=ARG1]
	"_face_v_1-fn.Confronting_problem" -> pron [label="ARG2-fn.NotExist"]
	parg_d -> pron [label=ARG2]
	compound -> _stock_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	nominalization -> _come_v_1 [label=ARG1]
	udef_q -> _stock_n_1 [label=BV]
	loc_nonsp -> "_face_v_1-fn.Confronting_problem" [label=ARG1]
	_into_p -> _office_n_1 [label=ARG2]
	compound -> "named(David)" [label=ARG2]
	_after_p -> time_n [label=ARG1]
	compound -> "named(Ruder)" [label=ARG1]
	_like_p -> _predecessor_n_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	poss -> _predecessor_n_1 [label=ARG1]
	appos -> _predecessor_n_1 [label=ARG1]
	_in_p -> _market_n_1 [label=ARG2]
	"_face_v_1-fn.Confronting_problem" -> _with_p [label="ARG3-fn.NotExist"]
	_soon_p -> time_n [label=ARG1]
	focus_d -> "_face_v_1-fn.Confronting_problem" [label=ARG1]
	compound -> _market_n_1 [label=ARG1]
	proper_q -> "named(David)" [label=BV]
	_the_q -> _market_n_1 [label=BV]
	_into_p -> _come_v_1 [label=ARG1]
	_after_p -> nominalization [label=ARG2]
	def_implicit_q -> time_n [label=BV]
}
