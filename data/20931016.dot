digraph {
	node [shape=circle style=filled]
	"_convey_v_to-fn.Bringing" -> _statement_n_of [label="ARG2-fn.Topic"]
	"_invite_v_to-fn.Request" -> "named_n(House)" [label="ARG1-fn.NotExist"]
	compound -> _president_n_of [label=ARG2]
	"_invite_v_to-fn.Request" -> pron [label="ARG2-fn.NotExist"]
	poss -> pron [label=ARG2]
	compound -> "named(White)" [label=ARG2]
	"_ask_v_1-fn.Request" -> pron [label="ARG2-fn.NotExist"]
	"_ask_v_1-fn.Request" -> "_convey_v_to-fn.Bringing" [label="ARG3-fn.NotExist"]
	poss -> _statement_n_of [label=ARG1]
	compound -> "named_n(House)" [label=ARG1]
	_the_q -> "named_n(House)" [label=BV]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	"_convey_v_to-fn.Bringing" -> "named(Bush)" [label="ARG3-fn.Recipient"]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(White)" [label=BV]
	_spontaneous_a_1 -> "_invite_v_to-fn.Request" [label=ARG1]
	"_invite_v_to-fn.Request" -> _do_v_so [label="ARG3-fn.NotExist"]
	_the_q -> _chinese_n_1 [label=BV]
	udef_q -> _president_n_of [label=BV]
	_do_v_so -> pron [label=ARG1]
	proper_q -> "named(Bush)" [label=BV]
	"_ask_v_1-fn.Request" -> _chinese_n_1 [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_never_a_1 -> "_ask_v_1-fn.Request" [label=ARG1]
	def_explicit_q -> _statement_n_of [label=BV]
	compound -> "named(Bush)" [label=ARG1]
	"_convey_v_to-fn.Bringing" -> pron [label="ARG1-fn.Agent"]
}
