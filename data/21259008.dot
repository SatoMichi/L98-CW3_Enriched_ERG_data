digraph {
	node [shape=circle style=filled]
	"_such+as_p" -> nominalization [label=ARG2]
	_always_a_1 -> _be_v_there [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	udef_q -> _question_n_about [label=BV]
	_chance_n_of -> _could_v_modal [label=ARG1]
	nominalization -> _word_v_1 [label=ARG1]
	_the_q -> _finding_n_1 [label=BV]
	_in_p -> _in_p_state [label=ARG1]
	"_such+as_p" -> _factor_n_1 [label=ARG1]
	_into_p -> _finding_n_1 [label=ARG2]
	compound -> _question_n_about [label=ARG2]
	_in_p -> _survey_n_1 [label=ARG2]
	_other_a_1 -> _factor_n_1 [label=ARG1]
	_in_p_state -> _be_v_there [label=ARG1]
	udef_q -> nominalization [label=BV]
	_could_v_modal -> "_introduce_v_to-fn.NF" [label=ARG1]
	_be_v_there -> _chance_n_of [label=ARG1]
	"_introduce_v_to-fn.NF" -> _factor_n_1 [label="ARG1-fn.NotExist"]
	_in_p_state -> _addition_n_1 [label=ARG2]
	focus_d -> _be_v_there [label=ARG1]
	_the_q -> _chance_n_of [label=BV]
	udef_q -> _error_n_1 [label=BV]
	udef_q -> _factor_n_1 [label=BV]
	_any_q -> _survey_n_1 [label=BV]
	compound -> nominalization [label=ARG1]
	_into_p -> "_introduce_v_to-fn.NF" [label=ARG1]
	udef_q -> _addition_n_1 [label=BV]
	"_introduce_v_to-fn.NF" -> _error_n_1 [label="ARG2-fn.NotExist"]
}
