digraph {
	node [shape=circle style=filled]
	_with_p -> _plan_n_1 [label=ARG2]
	poss -> _ailment_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	_cover_v_1 -> _plan_n_1 [label=ARG1]
	neg -> "_find_v_1-fn.IN" [label=ARG1]
	_the_q -> _increase_n_1 [label=BV]
	"_fear_v_1-fn.Experiencer_focus" -> pron [label="ARG1-fn.Experiencer"]
	compound -> _plan_n_1 [label=ARG1]
	udef_q -> _rate_n_of [label=BV]
	_can_v_modal -> _afford_v_1 [label=ARG1]
	_another_q -> _job_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _employer_n_1 [label=ARG1]
	_afford_v_1 -> _increase_n_1 [label=ARG2]
	compound -> _rate_n_of [label=ARG2]
	_afford_v_1 -> _employer_n_1 [label=ARG1]
	def_explicit_q -> _ailment_n_1 [label=BV]
	compound -> _benefit_n_of [label=ARG2]
	"_find_v_1-fn.IN" -> _job_n_of [label="ARG2-fn.Theme"]
	"_fear_v_1-fn.Experiencer_focus" -> neg [label="ARG2-fn.Stimulus"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	def_explicit_q -> _employer_n_1 [label=BV]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	compound -> _increase_n_1 [label=ARG1]
	_cover_v_1 -> _ailment_n_1 [label=ARG2]
	"_find_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _benefit_n_of [label=BV]
	_a_q -> _plan_n_1 [label=BV]
	neg -> _can_v_modal [label=ARG1]
	_with_p -> _job_n_of [label=ARG1]
}
