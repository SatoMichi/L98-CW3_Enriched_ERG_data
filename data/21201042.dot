digraph {
	node [shape=circle style=filled]
	compound -> "named(Airlines)" [label=ARG1]
	compound -> "named(Icahn)" [label=ARG1]
	_any_q -> _stock_n_1 [label=BV]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	_a_q -> _source_n_of [label=BV]
	neg -> "_buy_v_1-fn.Competition" [label=ARG1]
	"_own_v_1-fn.Competition" -> "named(Airlines)" [label="ARG2-fn.Participant_2"]
	"_own_v_1-fn.Competition" -> _stock_n_1 [label="ARG2-fn.Participant_2"]
	compound -> "named(World)" [label=ARG1]
	"_buy_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Airlines)" [label=BV]
	proper_q -> "named(Carl)" [label=BV]
	neg -> "_own_v_1-fn.Competition" [label=ARG1]
	compound -> _stock_n_1 [label=ARG1]
	proper_q -> "named(UAL)" [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _inc_n_1 [label=BV]
	compound -> _inc_n_1 [label=ARG2]
	appos -> "_raider/nn_u_unknown" [label=ARG2]
	"_own_v_1-fn.Competition" -> "_raider/nn_u_unknown" [label="ARG1-fn.Participant_1"]
	compound -> "named(Carl)" [label=ARG2]
	_close_a_to -> "named(Icahn)" [label=ARG2]
	appos -> "named(Icahn)" [label=ARG1]
	compound -> "named(Trans)" [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> _source_n_of [label="ARG1-fn.Process"]
	_close_a_to -> _source_n_of [label=ARG1]
	compound -> "named(UAL)" [label=ARG2]
	proper_q -> "named(World)" [label=BV]
	proper_q -> "named(Trans)" [label=BV]
	"_own_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Icahn)" [label=BV]
	_a_q -> "_raider/nn_u_unknown" [label=BV]
	_corporate_a_1 -> "_raider/nn_u_unknown" [label=ARG1]
}
