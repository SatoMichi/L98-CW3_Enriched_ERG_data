digraph {
	node [shape=circle style=filled]
	_this_q_dem -> _newspaper_n_of [label=BV]
	_to_p -> _share_n_of [label=ARG2]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_believe_v_1-fn.Opinion" -> _should_v_modal [label="ARG2-fn.NotExist"]
	poss -> pron [label=ARG2]
	udef_q -> _investor_n_1 [label=BV]
	udef_q -> _takeover_n_of [label=BV]
	subord -> "_hold_v_on-fn.Detaining" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Heard)" [label="ARG1-fn.NotExist"]
	def_implicit_q -> time_n [label=BV]
	_in_p -> "named(London)" [label=ARG2]
	proper_q -> "named(Jaguar)" [label=BV]
	_the_q -> _column_n_of [label=BV]
	compound -> "named(Street)" [label=ARG2]
	poss -> "_stampede/nn_u_unknown" [label=ARG1]
	compound -> _stock_n_1 [label=ARG1]
	"_believe_v_1-fn.Opinion" -> _analyst_n_1 [label="ARG1-fn.NotExist"]
	_in_p -> _analyst_n_1 [label=ARG1]
	def_explicit_q -> "named(Heard)" [label=BV]
	_despite_p -> _investor_n_1 [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	focus_d -> "_believe_v_1-fn.Opinion" [label=ARG2]
	"_dump_v_1-fn.NF" -> _stock_n_1 [label="ARG2-fn.Theme"]
	with_p -> "_dump_v_1-fn.NF" [label=ARG1]
	poss -> "named(Heard)" [label=ARG1]
	_on_p -> "named(Heard)" [label=ARG1]
	proper_q -> "named(Street)" [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	compound -> _column_n_of [label=ARG1]
	compound -> "named(Jaguar)" [label=ARG2]
	poss -> _newspaper_n_of [label=ARG2]
	compound -> _share_n_of [label=ARG1]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	subord -> _tight_a_1 [label=ARG2]
	_to_p -> "_hold_v_on-fn.Detaining" [label=ARG1]
	with_p -> "_stampede/nn_u_unknown" [label=ARG2]
	"_hold_v_on-fn.Detaining" -> _investor_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(London)" [label=BV]
	def_explicit_q -> "_stampede/nn_u_unknown" [label=BV]
	"_say_v_to-fn.IN" -> "_believe_v_1-fn.Opinion" [label="ARG2-fn.NotExist"]
	compound -> _takeover_n_of [label=ARG2]
	poss -> _share_n_of [label=ARG1]
	def_explicit_q -> _share_n_of [label=BV]
	udef_q -> _analyst_n_1 [label=BV]
	_on_p -> _column_n_of [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_despite_p -> "_stampede/nn_u_unknown" [label=ARG2]
	_should_v_modal -> subord [label=ARG1]
}
