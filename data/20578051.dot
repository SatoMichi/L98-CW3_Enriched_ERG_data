digraph {
	node [shape=circle style=filled]
	neg -> _would_v_modal [label=ARG1]
	proper_q -> "named(Semel)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_claim_v_1-fn.Statement" -> "named(Guber)" [label="ARG1-fn.Agent"]
	udef_q -> _mister_n_1 [label=BV]
	"_tell_v_1-fn.Telling" -> "named(Semel)" [label="ARG1-fn.NotExist"]
	_if_x_then -> _probable_a_1 [label=ARG1]
	"_object_v_1-fn.NF" -> "named(Ross)" [label="ARG1-fn.Agent"]
	_be_v_id -> pron [label=ARG1]
	proper_q -> "named(Sony)" [label=BV]
	"_other+than_p" -> person [label=ARG1]
	_if_x_then -> _be_v_id [label=ARG2]
	compound -> "named(Ross)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Guber)" [label=ARG1]
	_be_v_id -> person [label=ARG2]
	proper_q -> "named(Guber)" [label=BV]
	proper_q -> "named(Ross)" [label=BV]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.NotExist"]
	"_other+than_p" -> "named(Sony)" [label=ARG2]
	"_claim_v_1-fn.Statement" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.NotExist"]
	compound -> "named(Semel)" [label=ARG1]
	_would_v_modal -> "_object_v_1-fn.NF" [label=ARG1]
	_any_q -> person [label=BV]
	_probable_a_1 -> neg [label=ARG1]
	"_tell_v_1-fn.Telling" -> _if_x_then [label="ARG3-fn.NotExist"]
	_moreover_a_1 -> "_claim_v_1-fn.Statement" [label=ARG1]
}
