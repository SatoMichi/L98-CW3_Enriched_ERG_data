digraph {
	node [shape=circle style=filled]
	_the_q -> "named(Board)" [label=BV]
	_as_x_subord -> "_ban_v_from-fn.Prohibiting" [label=ARG1]
	_some_q -> _investor_n_1 [label=BV]
	"_deal_v_with-fn.Resolve_problem" -> "named(Board)" [label="ARG1-fn.Agent"]
	nominalization -> _and_c [label=ARG1]
	parg_d -> _assist_v_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _strategy_n_of [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	every_q -> person [label=BV]
	"_ban_v_from-fn.Prohibiting" -> _strategy_n_of [label="ARG2-fn.Theme"]
	compound -> nominalization [label=ARG2]
	"_deal_v_with-fn.Resolve_problem" -> _issue_n_1 [label="ARG2-fn.Theme"]
	compound -> _assist_v_1 [label=ARG1]
	_would_v_modal -> _like_p [label=ARG1]
	_the_q -> _issue_n_1 [label=BV]
	nominalization -> _trade_v_1 [label=ARG1]
	nominalization -> _as_x_subord [label=ARG1]
	udef_q -> _computer_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	compound -> _computer_n_1 [label=ARG2]
	"_take_v_1-fn.Removing" -> "_out+of_p" [label="ARG3-fn.Initial_Location"]
	_quiet_a_1 -> "_deal_v_with-fn.Resolve_problem" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Board)" [label=ARG1]
	"_want_v_1-fn.Desiring" -> _investor_n_1 [label="ARG1-fn.Pivot"]
	"_take_v_1-fn.Removing" -> person [label="ARG2-fn.Theme"]
	_a_q -> _automobile_n_1 [label=BV]
	parg_d -> nominalization [label=ARG2]
	"_ride_v_1-fn.IN" -> _horse_n_1 [label="ARG2-fn.Theme"]
	"_try_v_1-fn.Attempt" -> "_deal_v_with-fn.Resolve_problem" [label="ARG2-fn.Theme"]
	"_try_v_1-fn.Attempt" -> "named(Board)" [label="ARG1-fn.Agent"]
	compound -> "named(Phelan)" [label=ARG1]
	"_make_v_cause-fn.Causation" -> "_ride_v_1-fn.IN" [label="ARG2-fn.Theme"]
	udef_q -> nominalization [label=BV]
	udef_q -> _strategy_n_of [label=BV]
	"_ride_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_entire_a_1 -> "_ban_v_from-fn.Prohibiting" [label=ARG1]
	_like_p -> nominalization [label=ARG2]
	proper_q -> "named(Phelan)" [label=BV]
	_assist_v_1 -> nominalization [label=ARG2]
	"_out+of_p" -> _automobile_n_1 [label=ARG2]
	compound -> "named(Big)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	"_out+of_p" -> person [label=ARG1]
	_as_x_subord -> "_want_v_1-fn.Desiring" [label=ARG2]
	_a_q -> _horse_n_1 [label=BV]
	proper_q -> "named(Big)" [label=BV]
}
