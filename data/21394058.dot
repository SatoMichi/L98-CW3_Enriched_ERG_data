digraph {
	node [shape=circle style=filled]
	"_face_v_1-fn.Attempt_suasion" -> "named(Express)" [label="ARG1-fn.Content"]
	compound -> _union_n_of [label=ARG2]
	_fact_n_1 -> "_face_v_1-fn.Attempt_suasion" [label=ARG1]
	compound -> _purchase_n_of [label=ARG1]
	"_face_v_1-fn.Attempt_suasion" -> _problem_n_of [label="ARG2-fn.Addressee"]
	compound -> "named(Tiger)" [label=ARG2]
	poss -> _purchase_n_of [label=ARG1]
	poss -> _problem_n_of [label=ARG1]
	proper_q -> "named(Express)" [label=BV]
	compound -> _problem_n_of [label=ARG1]
	compound -> "named(Federal)" [label=ARG2]
	proper_q -> "named(Federal)" [label=BV]
	proper_q -> "named(Tiger)" [label=BV]
	udef_q -> _union_n_of [label=BV]
	_certain_a_of -> _irony_n_1 [label=ARG1]
	_in_p -> _fact_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	_as_p -> _result_n_of [label=ARG2]
	def_explicit_q -> _problem_n_of [label=BV]
	poss -> pron [label=ARG2]
	_the_q -> _fact_n_1 [label=BV]
	_result_n_of -> _purchase_n_of [label=ARG1]
	compound -> "named(Express)" [label=ARG1]
	_in_p -> _irony_n_1 [label=ARG1]
	_a_q -> _result_n_of [label=BV]
	"ord(1)" -> _problem_n_of [label=ARG1]
	"_be_v_there-fn.Cause_to_end" -> _irony_n_1 [label="ARG1-fn.Process"]
	def_explicit_q -> _purchase_n_of [label=BV]
	_a_q -> _irony_n_1 [label=BV]
	_as_p -> "_face_v_1-fn.Attempt_suasion" [label=ARG1]
}
