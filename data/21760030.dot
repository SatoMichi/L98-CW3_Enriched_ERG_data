digraph {
	node [shape=circle style=filled]
	_if_x_then -> "_want_v_1-fn.Desiring" [label=ARG2]
	udef_q -> _engineer_n_1 [label=BV]
	_also_a_1 -> "_build_v_1-fn.Building" [label=ARG1]
	"_say_v_to-fn.IN" -> _should_v_modal [label="ARG2-fn.NotExist"]
	"_build_v_1-fn.Building" -> pron [label="ARG2-fn.Product"]
	_by_p -> pron [label=ARG2]
	compound -> "named(Heerden)" [label=ARG1]
	_by_p -> "_play_v_1-fn.Competition" [label=ARG1]
	proper_q -> "named(van)" [label=BV]
	udef_q -> _white_n_1 [label=BV]
	loc_nonsp -> "_play_v_1-fn.Competition" [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	proper_q -> "named(Heerden)" [label=BV]
	compound -> nominalization [label=ARG2]
	_by_p -> "_build_v_1-fn.Building" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Heerden)" [label="ARG1-fn.Agent"]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_build_v_1-fn.Building" -> _white_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(Willem)" [label=ARG2]
	_should_v_modal -> _also_a_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> "named(van)" [label=ARG2]
	loc_nonsp -> place_n [label=ARG2]
	"_want_v_1-fn.Desiring" -> _white_n_1 [label="ARG1-fn.Pivot"]
	"_play_v_1-fn.Competition" -> _white_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(Willem)" [label=BV]
	nominalization -> _consult_v_1 [label=ARG1]
	compound -> _engineer_n_1 [label=ARG1]
	"_want_v_1-fn.Desiring" -> "_play_v_1-fn.Competition" [label="ARG2-fn.Theme"]
	_there_a_1 -> place_n [label=ARG1]
}
