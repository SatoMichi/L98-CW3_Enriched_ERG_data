digraph {
	node [shape=circle style=filled]
	_in_p -> _inspector_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> eventuality [label="ARG2-fn.Topic"]
	_do_v_1 -> _company_n_of [label=ARG1]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> "named_n(US)" [label=BV]
	compound -> "named(New)" [label=ARG2]
	_once_x_subord -> "_get_v_state-fn.IN" [label=ARG2]
	_a_q -> _inspector_n_1 [label=BV]
	"_wish_v_1-fn.Desiring" -> thing [label="ARG2-fn.Theme"]
	_postal_a_1 -> _inspector_n_1 [label=ARG1]
	_to_p -> "_deliver_v_to-fn.Delivery" [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	loc_nonsp -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Ellis)" [label="ARG1-fn.Agent"]
	_only_a_1 -> _job_n_of [label=ARG1]
	compound -> _inspector_n_1 [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	_the_q -> _mail_n_1 [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	compound -> "named(Service)" [label=ARG1]
	_do_v_1 -> _with_p [label=ARG3]
	compound -> "named(Jack)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	compound -> _mail_n_1 [label=ARG2]
	compound -> "named(York)" [label=ARG1]
	_with_p -> thing [label=ARG1]
	udef_q -> _mail_n_1 [label=BV]
	"_get_v_state-fn.IN" -> loc_nonsp [label="ARG2-fn.Patient"]
	proper_q -> "named(Ellis)" [label=BV]
	appos -> "named(Ellis)" [label=ARG1]
	proper_q -> "named(Postal)" [label=BV]
	appos -> _inspector_n_1 [label=ARG2]
	poss -> _job_n_of [label=ARG1]
	"_deliver_v_to-fn.Delivery" -> _mail_n_1 [label="ARG2-fn.Theme"]
	free_relative_q -> thing [label=BV]
	"_wish_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	poss -> "named(Service)" [label=ARG2]
	def_explicit_q -> _job_n_of [label=BV]
	compound -> "named(Postal)" [label=ARG2]
	_can_v_modal -> _do_v_1 [label=ARG1]
	compound -> _room_n_1 [label=ARG1]
	_the_q -> "named(Service)" [label=BV]
	_a_q -> _company_n_of [label=BV]
	proper_q -> "named(Jack)" [label=BV]
	_in_p -> "named(York)" [label=ARG2]
	"_deliver_v_to-fn.Delivery" -> _job_n_of [label="ARG1-fn.Agent"]
	loc_nonsp -> place_n [label=ARG2]
	_do_v_1 -> thing [label=ARG2]
	_to_p -> _room_n_1 [label=ARG2]
	_the_q -> _room_n_1 [label=BV]
	_once_x_subord -> _can_v_modal [label=ARG1]
	proper_q -> "named(York)" [label=BV]
	_with_p -> pron [label=ARG2]
	compound -> "named(Ellis)" [label=ARG1]
	eventuality -> "_deliver_v_to-fn.Delivery" [label=ARG1]
	_there_a_1 -> place_n [label=ARG1]
}
