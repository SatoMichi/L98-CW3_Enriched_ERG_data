digraph {
	node [shape=circle style=filled]
	"_advise_v_1-fn.State_continue" -> _management_n_1 [label="ARG2-fn.State"]
	def_explicit_q -> _transaction_n_1 [label=BV]
	"_believe_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	_funding_n_of -> _transaction_n_1 [label=ARG1]
	"_believe_v_1-fn.Attempt" -> "_advise_v_1-fn.State_continue" [label="ARG2-fn.Goal"]
	udef_q -> _management_n_1 [label=BV]
	_on_p -> "_advise_v_1-fn.State_continue" [label=ARG1]
	proper_q -> "named(UAL)" [label=BV]
	pronoun_q -> pron [label=BV]
	_bad_a_1 -> "_advise_v_1-fn.State_continue" [label=ARG1]
	poss -> pron [label=ARG2]
	poss -> _transaction_n_1 [label=ARG1]
	_on_p -> _funding_n_of [label=ARG2]
	parg_d -> _management_n_1 [label=ARG2]
	parg_d -> "_advise_v_1-fn.State_continue" [label=ARG1]
	compound -> _management_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	compound -> "named(UAL)" [label=ARG2]
	_the_q -> _funding_n_of [label=BV]
	_original_a_1 -> _transaction_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_believe_v_1-fn.Attempt" [label="ARG2-fn.Requirement"]
}
