digraph {
	node [shape=circle style=filled]
	_enough_q -> generic_entity [label=BV]
	"_say_v_to-fn.IN" -> "_in+order+to_x" [label="ARG2-fn.NotExist"]
	_to_p -> _expectation_n_of [label=ARG2]
	poss -> _expectation_n_of [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	_the_q -> _stock_n_1 [label=BV]
	"_in+order+to_x" -> _be_v_id [label=ARG1]
	udef_q -> _earnings_n_1 [label=BV]
	def_explicit_q -> _expectation_n_of [label=BV]
	_be_v_id -> generic_entity [label=ARG2]
	_if_x_then -> neg [label=ARG2]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	"_dump_v_1-fn.NF" -> _stock_n_1 [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	"_in+order+to_x" -> "_dump_v_1-fn.NF" [label=ARG2]
	poss -> _analyst_n_1 [label=ARG2]
	"_dump_v_1-fn.NF" -> generic_entity [label="ARG1-fn.Agent"]
	neg -> _live_v_up2 [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _analyst_n_1 [label=BV]
	_live_v_up2 -> _earnings_n_1 [label=ARG1]
}
