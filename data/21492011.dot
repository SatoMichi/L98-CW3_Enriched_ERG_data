digraph {
	node [shape=circle style=filled]
	compound -> _system_n_of [label=ARG1]
	"_try_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	udef_q -> part_of [label=BV]
	poss -> _system_n_of [label=ARG1]
	_of_p -> "named(Unix)" [label=ARG2]
	"_require_v_of-fn.State_continue" -> _government_n_of [label="ARG1-fn.Entity"]
	parg_d -> pron [label=ARG2]
	part_of -> _version_n_of [label=ARG1]
	"_require_v_of-fn.State_continue" -> pron [label="ARG2-fn.State"]
	compound -> _computer_n_1 [label=ARG2]
	parg_d -> "_require_v_of-fn.State_continue" [label=ARG1]
	_as_x_subord -> "_try_v_1-fn.Attempt" [label=ARG2]
	_of_p -> _version_n_of [label=ARG1]
	"card(1)" -> part_of [label=ARG1]
	"card(4)" -> _version_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_be_v_id-fn.Name_conferral" -> part_of [label="ARG2-fn.Name"]
	poss -> pron [label=ARG2]
	"_standardize_v_1-fn.Amounting_to" -> _system_n_of [label="ARG2-fn.Attribute"]
	"_be_v_id-fn.Name_conferral" -> "named(Posix)" [label="ARG1-fn.Entity"]
	_federal_a_1 -> _government_n_of [label=ARG1]
	udef_q -> _computer_n_1 [label=BV]
	"card(3)" -> _version_n_of [label=ARG1]
	udef_q -> _version_n_of [label=BV]
	proper_q -> "named(Posix)" [label=BV]
	_the_q -> _government_n_of [label=BV]
	"_try_v_1-fn.Attempt" -> "_standardize_v_1-fn.Amounting_to" [label="ARG2-fn.Goal"]
	def_explicit_q -> _system_n_of [label=BV]
	"_standardize_v_1-fn.Amounting_to" -> pron [label="ARG1-fn.Value"]
	_increasing_a_1 -> "_require_v_of-fn.State_continue" [label=ARG1]
	proper_q -> "named(Unix)" [label=BV]
	_as_x_subord -> "_require_v_of-fn.State_continue" [label=ARG1]
}
