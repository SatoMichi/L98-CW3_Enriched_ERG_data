digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	_only_x_deg -> udef_q [label=ARG1]
	_a_q -> _claim_n_of [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	_the_q -> _compromise_n_1 [label=BV]
	"_in+addition+to_p" -> "_say_v_to-fn.IN" [label=ARG1]
	"_in+addition+to_p" -> nominalization [label=ARG2]
	compound -> _judge_n_of [label=ARG2]
	proper_q -> "named(Harold)" [label=BV]
	nominalization -> _turn_v_down [label=ARG1]
	_claim_n_of -> _dollar_n_1 [label=ARG1]
	udef_q -> _judge_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	"_allow_v_1-fn.IN" -> _claim_n_of [label="ARG2-fn.NotExist"]
	compound -> "named(Abramson)" [label=ARG1]
	_turn_v_down -> _compromise_n_1 [label=ARG2]
	"_allow_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_would_v_modal -> "_allow_v_1-fn.IN" [label=ARG1]
	times -> "card(1000000)" [label=ARG3]
	proper_q -> "named(Abramson)" [label=BV]
	compound -> "named(C)" [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> "named(Harold)" [label=ARG2]
	focus_d -> "_in+addition+to_p" [label=ARG2]
	proper_q -> "named(C)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Abramson)" [label="ARG1-fn.Agent"]
	times -> "card(19.7)" [label=ARG2]
	udef_q -> _dollar_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
