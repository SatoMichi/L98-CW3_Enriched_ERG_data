digraph {
	node [shape=circle style=filled]
	compound -> "named(Treasury)" [label=ARG2]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> _analyst_n_1 [label="ARG1-fn.NotExist"]
	udef_q -> _scale_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_constrain_v_from-fn.Hindering" [label="ARG2-fn.NotExist"]
	_now_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	_large_a_1 -> _scale_n_1 [label=ARG1]
	"_constrain_v_from-fn.Hindering" -> _or_c [label="ARG2-fn.Patient"]
	compound -> _bond_n_1 [label=ARG1]
	focus_d -> _as_p [label=ARG2]
	_a_q -> _result_n_of [label=BV]
	_easy_a_for -> _and_c [label=ARG1]
	_in_p -> _issue_n_1 [label=ARG2]
	_as_p -> "_say_v_to-fn.IN" [label=ARG1]
	nominalization -> _buy_v_1 [label=ARG1]
	udef_q -> "_benchmark/nn_u_unknown" [label=BV]
	_the_q -> _issue_n_1 [label=BV]
	udef_q -> _or_c [label=BV]
	poss -> nominalization [label=ARG1]
	parg_d -> _or_c [label=ARG2]
	_result_n_of -> nominalization [label=ARG1]
	pronoun_q -> pron [label=BV]
	_as_p -> _result_n_of [label=ARG2]
	udef_q -> _bond_n_1 [label=BV]
	_in_p -> "_constrain_v_from-fn.Hindering" [label=ARG1]
	parg_d -> "_constrain_v_from-fn.Hindering" [label=ARG1]
	_some_q -> _analyst_n_1 [label=BV]
	compound -> "_benchmark/nn_u_unknown" [label=ARG2]
	compound -> _issue_n_1 [label=ARG1]
	proper_q -> "named(Treasury)" [label=BV]
	_ability_n_1 -> _and_c [label=ARG1]
	udef_q -> _liquidity_n_1 [label=BV]
	def_explicit_q -> nominalization [label=BV]
	_the_q -> _ability_n_1 [label=BV]
	compound -> _scale_n_1 [label=ARG2]
	compound -> nominalization [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
