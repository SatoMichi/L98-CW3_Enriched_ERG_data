digraph {
	node [shape=circle style=filled]
	poss -> _pilot_n_of [label=ARG2]
	"_make_v_cause-fn.Cause_to_end" -> _insistence_n_on [label="ARG1-fn.Process"]
	compound -> _ownership_n_of [label=ARG1]
	def_explicit_q -> _insistence_n_on [label=BV]
	_the_q -> _idea_n_of [label=BV]
	poss -> _insistence_n_on [label=ARG1]
	_difficult_a_for -> "_achieve_v_1-fn.Competition" [label=ARG1]
	_a_q -> "_recapitalization/nn_u_unknown" [label=BV]
	_idea_n_of -> "_recapitalization/nn_u_unknown" [label=ARG1]
	udef_q -> _ownership_n_of [label=BV]
	_on_p -> _ownership_n_of [label=ARG2]
	_the_q -> _pilot_n_of [label=BV]
	"_may_v_modal-fn.Communication_manner" -> "_make_v_cause-fn.Cause_to_end" [label="ARG1-fn.Speaker"]
	"_make_v_cause-fn.Cause_to_end" -> _difficult_a_for [label="ARG2-fn.Means"]
	"_achieve_v_1-fn.Competition" -> _idea_n_of [label="ARG2-fn.Participant_2"]
	compound -> _majority_n_of [label=ARG2]
	udef_q -> _majority_n_of [label=BV]
	_on_p -> _insistence_n_on [label=ARG1]
	_also_a_1 -> "_may_v_modal-fn.Communication_manner" [label=ARG1]
}
