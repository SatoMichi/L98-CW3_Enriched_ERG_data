digraph {
	node [shape=circle style=filled]
	_so_x -> _important_a_for [label=ARG1]
	_lag_v_1 -> pron [label=ARG1]
	udef_q -> _firm_n_1 [label=BV]
	_behind_p -> _lag_v_1 [label=ARG1]
	"_find_v_1-fn.IN" -> _lag_v_1 [label="ARG2-fn.NotExist"]
	compound -> _product_n_1 [label=ARG2]
	_so_x -> _and_c [label=ARG2]
	_to_p -> _step_n_1 [label=ARG1]
	udef_q -> _step_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_should_v_modal -> "_match_v_up-2-fn.Compatibility" [label=ARG1]
	"_match_v_up-2-fn.Compatibility" -> _name_n_of [label="ARG1-fn.NotExist"]
	udef_q -> _ketchup_n_1 [label=BV]
	udef_q -> _preference_n_for [label=BV]
	_now_a_1 -> _take_v_1 [label=ARG1]
	_to_p -> _ketchup_n_1 [label=ARG2]
	_take_v_1 -> _to_p [label=ARG3]
	compound -> _name_n_of [label=ARG1]
	_public_a_1 -> _preference_n_for [label=ARG1]
	udef_q -> _product_n_1 [label=BV]
	_take_v_1 -> _step_n_1 [label=ARG2]
	_should_v_modal -> _take_v_1 [label=ARG1]
	_take_v_1 -> _firm_n_1 [label=ARG1]
	udef_q -> _name_n_of [label=BV]
	_important_a_for -> _preference_n_for [label=ARG1]
	"_find_v_1-fn.IN" -> _firm_n_1 [label="ARG1-fn.NotExist"]
}
