digraph {
	node [shape=circle style=filled]
	"_assert_v_to-fn.Statement" -> neg [label="ARG2-fn.Theme"]
	_master_v_1 -> _department_n_1 [label=ARG1]
	parg_d -> _technology_n_1 [label=ARG2]
	neg -> _master_v_1 [label=ARG1]
	_the_q -> _technology_n_1 [label=BV]
	compound -> _structure_n_1 [label=ARG1]
	_entire_a_1 -> _structure_n_1 [label=ARG1]
	_the_q -> _structure_n_1 [label=BV]
	_the_q -> _department_n_1 [label=BV]
	_however_a_1 -> "_assert_v_to-fn.Statement" [label=ARG1]
	compound -> "named(Cypress)" [label=ARG2]
	_master_v_1 -> _technology_n_1 [label=ARG2]
	with_p -> "_retrofit/vb_u_unknown" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_retrofit/vb_u_unknown" -> _structure_n_1 [label=ARG2]
	parg_d -> "_need_v_1-fn.Needing" [label=ARG1]
	with_p -> _technology_n_1 [label=ARG2]
	"_assert_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	proper_q -> "named(Cypress)" [label=BV]
	"_need_v_1-fn.Needing" -> _technology_n_1 [label="ARG2-fn.Theme"]
}
