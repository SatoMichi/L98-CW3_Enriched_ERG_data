digraph {
	node [shape=circle style=filled]
	"_speak_v_to-fn.IN" -> _language_n_1 [label="ARG2-fn.Topic"]
	udef_q -> _machine_n_1 [label=BV]
	poss -> pron [label=ARG2]
	_general_a_1 -> _and_c [label=ARG1]
	"_have_v_1-fn.IN" -> _trouble_n_1 [label="ARG2-fn.Theme"]
	compound -> _floor_n_1 [label=ARG1]
	_to_p -> "_talk_v_about-fn.IN" [label=ARG1]
	_current_a_1 -> _resemble_v_1 [label=ARG1]
	udef_q -> _tool_n_1 [label=BV]
	_own_a_1 -> _language_n_1 [label=ARG1]
	udef_q -> implicit_conj [label=BV]
	_resemble_v_1 -> _floor_n_1 [label=ARG1]
	udef_q -> _computer_n_1 [label=BV]
	"_speak_v_to-fn.IN" -> implicit_conj [label="ARG1-fn.Agent"]
	udef_q -> _trouble_n_1 [label=BV]
	_tower_n_of -> "named(Babel)" [label=ARG1]
	def_explicit_q -> _language_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _language_n_1 [label=ARG1]
	pronoun_q -> recip_pro [label=BV]
	"_talk_v_about-fn.IN" -> implicit_conj [label="ARG1-fn.Agent"]
	proper_q -> "named(Babel)" [label=BV]
	"_have_v_1-fn.IN" -> "_talk_v_about-fn.IN" [label="ARG3-fn.NotExist"]
	compound -> _plant_n_1 [label=ARG2]
	"_have_v_1-fn.IN" -> implicit_conj [label="ARG1-fn.Pivot"]
	_a_q -> _tower_n_of [label=BV]
	udef_q -> _plant_n_1 [label=BV]
	udef_q -> _floor_n_1 [label=BV]
	compound -> _machine_n_1 [label=ARG2]
	_with_p -> implicit_conj [label=ARG2]
	udef_q -> _robot_n_1 [label=BV]
	_resemble_v_1 -> _tower_n_of [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> _tool_n_1 [label=ARG1]
	_to_p -> recip_pro [label=ARG2]
	_with_p -> _tower_n_of [label=ARG1]
	"much-many_a" -> _floor_n_1 [label=ARG1]
}
