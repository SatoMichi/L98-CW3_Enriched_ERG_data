digraph {
	node [shape=circle style=filled]
	_find_v_1 -> pron [label=ARG3]
	"_qualify_v_for-fn.NF" -> _couple_n_1 [label="ARG1-fn.NotExist"]
	proper_q -> "named(Phil)" [label=BV]
	_new_a_1 -> _discount_n_1 [label=ARG1]
	"_in+order+to_x" -> _find_v_1 [label=ARG1]
	poss -> pron [label=ARG2]
	compound -> "named(Continental)" [label=ARG2]
	proper_q -> "named(Donahue)" [label=BV]
	poss -> _way_n_of [label=ARG1]
	"_qualify_v_for-fn.NF" -> _discount_n_1 [label="ARG2-fn.Attribute"]
	_a_q -> _hassle_n_1 [label=BV]
	_if_x_then -> _may_v_modal [label=ARG1]
	_if_x_then -> "_have_v_1-fn.IN" [label=ARG2]
	compound -> "named(Airlines)" [label=ARG1]
	_may_v_modal -> "_in+order+to_x" [label=ARG1]
	"_have_v_1-fn.IN" -> "named(Airlines)" [label="ARG1-fn.Pivot"]
	_some_q -> _discount_n_1 [label=BV]
	_find_v_1 -> _couple_n_1 [label=ARG1]
	compound -> "named(Donahue)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	def_explicit_q -> _way_n_of [label=BV]
	proper_q -> "named(Thomas)" [label=BV]
	compound -> "named(Phil)" [label=ARG2]
	proper_q -> "named(Continental)" [label=BV]
	"_in+order+to_x" -> "_qualify_v_for-fn.NF" [label=ARG2]
	udef_q -> _couple_n_1 [label=BV]
	proper_q -> "named(Airlines)" [label=BV]
	_find_v_1 -> _hassle_n_1 [label=ARG2]
	compound -> "named(Thomas)" [label=ARG1]
	proper_q -> "named(Marlo)" [label=BV]
	udef_q -> _and_c [label=BV]
	_like_p -> _couple_n_1 [label=ARG1]
	_like_p -> _and_c [label=ARG2]
	"_have_v_1-fn.IN" -> _way_n_of [label="ARG2-fn.Theme"]
	compound -> "named(Marlo)" [label=ARG2]
}
