digraph {
	node [shape=circle style=filled]
	_a_q -> _path_n_1 [label=BV]
	udef_q -> _record_n_of [label=BV]
	compound -> _record_n_of [label=ARG1]
	_to_p -> "_beat_v_to-fn.Left_to_do" [label=ARG1]
	_other_a_1 -> _hand_n_1 [label=ARG1]
	"_prove_v_to-fn.State_continue" -> _record_n_of [label="ARG2-fn.State"]
	_yesterday_a_1 -> time_n [label=ARG1]
	_with_p -> _record_n_of [label=ARG2]
	parg_d -> _record_n_of [label=ARG2]
	focus_d -> _on_p_state [label=ARG2]
	_with_p -> _issue_n_1 [label=ARG1]
	parg_d -> "_prove_v_to-fn.State_continue" [label=ARG1]
	compound -> _earnings_n_1 [label=ARG2]
	_blue_a_1 -> _chip_n_1 [label=ARG1]
	_the_q -> _hand_n_1 [label=BV]
	focus_d -> "_beat_v_to-fn.Left_to_do" [label=ARG1]
	udef_q -> _earnings_n_1 [label=BV]
	_on_p_state -> _hand_n_1 [label=ARG2]
	udef_q -> _growth_n_of [label=BV]
	_clear_a_of -> _path_n_1 [label=ARG1]
	_on_p_state -> "_beat_v_to-fn.Left_to_do" [label=ARG1]
	"_beat_v_to-fn.Left_to_do" -> _path_n_1 [label="ARG2-fn.Remainder"]
	"_beat_v_to-fn.Left_to_do" -> _investor_n_1 [label="ARG1-fn.Process"]
	udef_q -> _issue_n_1 [label=BV]
	udef_q -> _chip_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	compound -> _growth_n_of [label=ARG1]
	udef_q -> _investor_n_1 [label=BV]
	compound -> _chip_n_1 [label=ARG2]
	loc_nonsp -> "_beat_v_to-fn.Left_to_do" [label=ARG1]
	_to_p -> _issue_n_1 [label=ARG2]
	compound -> _issue_n_1 [label=ARG1]
	def_implicit_q -> time_n [label=BV]
}
