digraph {
	node [shape=circle style=filled]
	proper_q -> "named(British)" [label=BV]
	_in_p -> "named(Chicago)" [label=ARG2]
	focus_d -> "_meet_v_1-fn.Expectation" [label=ARG1]
	poss -> _option_n_1 [label=ARG1]
	compound -> "named(Air)" [label=ARG1]
	focus_d -> _before_p [label=ARG2]
	"_in+order+to_x" -> "_meet_v_1-fn.Expectation" [label=ARG1]
	compound -> _union_n_of [label=ARG1]
	poss -> _announcement_n_of [label=ARG1]
	compound -> _pilot_n_of [label=ARG2]
	proper_q -> "named(Air)" [label=BV]
	def_explicit_q -> _option_n_1 [label=BV]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_meet_v_1-fn.Expectation" -> _leader_n_of [label="ARG1-fn.Cognizer"]
	udef_q -> _union_n_of [label=BV]
	udef_q -> _pilot_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	loc_nonsp -> "_meet_v_1-fn.Expectation" [label=ARG1]
	"_consider_v_1-fn.Competition" -> _leader_n_of [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Chicago)" [label=BV]
	"_in+order+to_x" -> "_consider_v_1-fn.Competition" [label=ARG2]
	"_consider_v_1-fn.Competition" -> _option_n_1 [label="ARG2-fn.Participant_2"]
	udef_q -> _leader_n_of [label=BV]
	_even_a_1 -> _before_p [label=ARG1]
	_before_p -> _announcement_n_of [label=ARG2]
	compound -> "named(British)" [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	compound -> _leader_n_of [label=ARG1]
	poss -> "named(Air)" [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	def_explicit_q -> _announcement_n_of [label=BV]
	_in_p -> "_meet_v_1-fn.Expectation" [label=ARG1]
	_before_p -> "_meet_v_1-fn.Expectation" [label=ARG1]
}
