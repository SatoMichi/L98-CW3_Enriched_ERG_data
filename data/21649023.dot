digraph {
	node [shape=circle style=filled]
	_double_a_1 -> _scam_n_1 [label=ARG1]
	_in_p -> _step_n_meas [label=ARG1]
	_the_q -> _reader_n_of [label=BV]
	compound -> _scam_n_1 [label=ARG1]
	compound -> _identity_n_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	_to_p -> _scam_n_1 [label=ARG2]
	"card(1)" -> _point_n_of [label=ARG1]
	focus_d -> _at_p [label=ARG2]
	focus_d -> "_be_v_id-fn.Name_conferral" [label=ARG1]
	udef_q -> _step_n_meas [label=BV]
	"_be_v_id-fn.Name_conferral" -> _reader_n_of [label="ARG1-fn.Entity"]
	nominalization -> _catch_v_on [label=ARG1]
	"_be_v_id-fn.Name_conferral" -> _pro_n_1 [label="ARG2-fn.Name"]
	"_ahead+of_p" -> _step_n_meas [label=ARG1]
	_to_p -> _catch_v_on [label=ARG1]
	_the_q -> _pro_n_1 [label=BV]
	"_be_v_id-fn.Name_conferral" -> "named(Marlowe)" [label="ARG1-fn.Entity"]
	proper_q -> "named(Marlowe)" [label=BV]
	_a_q -> _scam_n_1 [label=BV]
	udef_q -> _identity_n_1 [label=BV]
	_supposed_a_1 -> "_be_v_id-fn.Name_conferral" [label=ARG2]
	_at_p -> "_be_v_id-fn.Name_conferral" [label=ARG1]
	_at_p -> _point_n_of [label=ARG2]
	"_ahead+of_p" -> "named(Marlowe)" [label=ARG2]
	udef_q -> _point_n_of [label=BV]
	_supposed_a_1 -> "named(Marlowe)" [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	"_be_v_id-fn.Name_conferral" -> _step_n_meas [label="ARG2-fn.Name"]
	"card(2)" -> _step_n_meas [label=ARG1]
}
