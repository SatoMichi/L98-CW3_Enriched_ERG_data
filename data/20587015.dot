digraph {
	node [shape=circle style=filled]
	udef_q -> generic_entity [label=BV]
	"_demand_v_of-fn.Request" -> implicit_conj [label="ARG2-fn.NotExist"]
	_on_p -> _control_n_of [label=ARG1]
	compound -> _force_n_1 [label=ARG1]
	udef_q -> _control_n_of [label=BV]
	_attend_v_1 -> _rally_n_1 [label=ARG2]
	udef_q -> _privilege_n_of [label=BV]
	_public_a_1 -> _rally_n_1 [label=ARG1]
	_on_p -> _force_n_1 [label=ARG2]
	parg_d -> _rally_n_1 [label=ARG2]
	compound -> _security_n_1 [label=ARG2]
	_a_q -> _end_n_of [label=BV]
	_organize_v_1 -> _leadership_n_1 [label=ARG1]
	udef_q -> _german_n_1 [label=BV]
	proper_q -> "named(Communist)" [label=BV]
	_to_p -> _privilege_n_of [label=ARG2]
	udef_q -> implicit_conj [label=BV]
	"card(1000)" -> generic_entity [label=ARG1]
	compound -> _leadership_n_1 [label=ARG1]
	_official_a_1 -> _privilege_n_of [label=ARG1]
	_the_q -> _leadership_n_1 [label=BV]
	generic_entity -> _german_n_1 [label=ARG1]
	udef_q -> _security_n_1 [label=BV]
	_organize_v_1 -> _rally_n_1 [label=ARG2]
	_to_p -> _end_n_of [label=ARG1]
	"_demand_v_of-fn.Request" -> generic_entity [label="ARG1-fn.NotExist"]
	parg_d -> _organize_v_1 [label=ARG1]
	udef_q -> _speech_n_1 [label=BV]
	_free_a_1 -> _speech_n_1 [label=ARG1]
	_the_q -> _force_n_1 [label=BV]
	compound -> "named(Communist)" [label=ARG2]
	compound -> "named(East)" [label=ARG2]
	udef_q -> _and_c [label=BV]
	proper_q -> "named(East)" [label=BV]
	udef_q -> _rally_n_1 [label=BV]
	_attend_v_1 -> generic_entity [label=ARG1]
	compound -> _german_n_1 [label=ARG1]
}
