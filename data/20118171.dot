digraph {
	node [shape=circle style=filled]
	_which_q -> _stock_n_1 [label=BV]
	_while_x -> "_continue_v_2-fn.Competition" [label=ARG2]
	poss -> _client_n_1 [label=ARG1]
	_on_p -> nominalization [label=ARG2]
	udef_q -> _performance_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	"_continue_v_2-fn.Competition" -> "_hope_v_for-fn.Needing" [label="ARG1-fn.Participant_1"]
	"_hope_v_for-fn.Needing" -> _performance_n_1 [label="ARG2-fn.Requirement"]
	"_hope_v_for-fn.Needing" -> _client_n_1 [label="ARG1-fn.Cognizer"]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_while_x -> "_advise_v_1-fn.Competition" [label=ARG1]
	"_advise_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_superior_a_1 -> _performance_n_1 [label=ARG1]
	_individual_a_1 -> _stock_n_1 [label=ARG1]
	"_buy_v_1-fn.Competition" -> _stock_n_1 [label="ARG2-fn.Participant_2"]
	"_advise_v_1-fn.Competition" -> _client_n_1 [label="ARG2-fn.Participant_2"]
	_on_p -> "_advise_v_1-fn.Competition" [label=ARG1]
	nominalization -> _or_c [label=ARG1]
	def_explicit_q -> _client_n_1 [label=BV]
	"_sell_v_1-fn.Competition" -> _stock_n_1 [label="ARG2-fn.Participant_2"]
	_continual_a_1 -> "_advise_v_1-fn.Competition" [label=ARG1]
}
