digraph {
	node [shape=circle style=filled]
	_enough_q -> generic_entity [label=BV]
	_if_x_then -> neg [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_be_v_id -> _continuity_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_go_v_for -> "named(Phillips)" [label=ARG1]
	_be_v_id -> "_thing_n_of-about" [label=ARG1]
	_certain_a_of -> pron [label=ARG1]
	compound -> "named(Phillips)" [label=ARG1]
	"_have_v_1-fn.IN" -> "named(Phillips)" [label="ARG1-fn.Pivot"]
	_be_v_id -> generic_entity [label=ARG2]
	_although_x -> _be_v_id [label=ARG1]
	_if_x_then -> _be_v_id [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_have_v_1-fn.IN" -> _go_v_for [label="ARG3-fn.NotExist"]
	_clear_a_of -> "_have_v_1-fn.IN" [label=ARG1]
	"_have_v_1-fn.IN" -> "_thing_n_of-about" [label="ARG2-fn.Theme"]
	neg -> _certain_a_of [label=ARG1]
	_although_x -> _if_x_then [label=ARG2]
	udef_q -> _continuity_n_1 [label=BV]
	"card(1)" -> "_thing_n_of-about" [label=ARG1]
	_the_q -> "_thing_n_of-about" [label=BV]
	proper_q -> "named(Phillips)" [label=BV]
	_go_v_for -> pron [label=ARG2]
}
