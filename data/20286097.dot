digraph {
	node [shape=circle style=filled]
	"_prevent_v_from-fn.Preventing" -> _challenge_n_1 [label="ARG1-fn.Agent"]
	def_explicit_q -> _recovery_n_1 [label=BV]
	poss -> pron [label=ARG2]
	"_prevent_v_from-fn.Preventing" -> _return_n_of [label="ARG2-fn.Theme"]
	_as_x_subord -> "_prevent_v_from-fn.Preventing" [label=ARG1]
	poss -> _rigidity_n_1 [label=ARG1]
	_to_p -> _return_n_of [label=ARG1]
	_the_q -> _challenge_n_1 [label=BV]
	eventuality -> _as_x_subord [label=ARG1]
	_as_x_subord -> "_continue_v_1-fn.Process_continue" [label=ARG2]
	def_explicit_q -> _rigidity_n_1 [label=BV]
	_a_q -> _return_n_of [label=BV]
	"_continue_v_1-fn.Process_continue" -> _recovery_n_1 [label="ARG1-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_corporate_a_1 -> _rigidity_n_1 [label=ARG1]
	_perhaps_x_deg -> _the_q [label=ARG1]
	_to_p -> _rigidity_n_1 [label=ARG2]
	_former_a_1 -> _rigidity_n_1 [label=ARG1]
	_big_a_1 -> _challenge_n_1 [label=ARG1]
	superl -> _big_a_1 [label=ARG1]
	poss -> _recovery_n_1 [label=ARG1]
}
