digraph {
	node [shape=circle style=filled]
	compound -> _venture_n_1 [label=ARG2]
	proper_q -> "named(Semmel)" [label=BV]
	"_track_v_1-fn.NF" -> _development_n_of [label="ARG2-fn.Theme"]
	compound -> "named(Semmel)" [label=ARG1]
	udef_q -> _capitalist_n_1 [label=BV]
	udef_q -> _investor_n_1 [label=BV]
	udef_q -> _takeover_n_of [label=BV]
	"_use_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	appos -> _user_n_of [label=ARG1]
	appos -> "named(Semmel)" [label=ARG1]
	compound -> _capitalist_n_1 [label=ARG1]
	compound -> _development_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> _user_n_of [label="ARG1-fn.Agent"]
	compound -> "named(Desktop)" [label=ARG2]
	udef_q -> _user_n_of [label=BV]
	compound -> "named(Chicago)" [label=ARG2]
	udef_q -> _venture_n_1 [label=BV]
	"card(1)" -> _user_n_of [label=ARG1]
	"_use_v_1-fn.IN" -> "_track_v_1-fn.NF" [label="ARG3-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Desktop)" [label=BV]
	appos -> _and_c [label=ARG2]
	proper_q -> "named(Data)" [label=BV]
	_in_p -> "named(Data)" [label=ARG2]
	compound -> "named(David)" [label=ARG2]
	_a_q -> _and_c [label=BV]
	_in_p -> _and_c [label=ARG1]
	compound -> _and_c [label=ARG1]
	compound -> "named(Data)" [label=ARG1]
	"_say_v_to-fn.IN" -> "_use_v_1-fn.IN" [label="ARG2-fn.Topic"]
	udef_q -> _development_n_of [label=BV]
	id -> _investor_n_1 [label=ARG2]
	compound -> _takeover_n_of [label=ARG2]
	proper_q -> "named(David)" [label=BV]
	proper_q -> "named(Chicago)" [label=BV]
	"_track_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	_early_a_1 -> _user_n_of [label=ARG1]
	id -> _capitalist_n_1 [label=ARG1]
}
