digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Pierre)" [label=BV]
	"_deny_v_to-fn.Statement" -> "named(Leval)" [label="ARG1-fn.Agent"]
	_make_v_1 -> "named(Era)" [label=ARG1]
	compound -> "named(Pierre)" [label=ARG2]
	compound -> "named(New)" [label=ARG2]
	poss -> pron [label=ARG2]
	_within_p -> _time_n_of [label=ARG2]
	proper_q -> "named(New)" [label=BV]
	udef_q -> "_laches/nn_u_unknown" [label=BV]
	_a_q -> _time_n_of [label=BV]
	unknown -> _doctrine_n_1 [label=ARG]
	_the_q -> _injunction_n_1 [label=BV]
	compound -> "named(Era)" [label=ARG1]
	_the_q -> _doctrine_n_1 [label=BV]
	udef_q -> _judge_n_of [label=BV]
	compound -> _judge_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_reasonable_a_for -> _time_n_of [label=ARG1]
	poss -> _claim_n_of [label=ARG1]
	proper_q -> "named(District)" [label=BV]
	"_call_v_name-fn.IN" -> _doctrine_n_1 [label="ARG3-fn.Result"]
	"_fail_v_1-fn.NF" -> _make_v_1 [label="ARG1-fn.NotExist"]
	udef_q -> _lawyer_n_1 [label=BV]
	compound -> "named(Leval)" [label=ARG1]
	def_explicit_q -> _claim_n_of [label=BV]
	proper_q -> "named(Leval)" [label=BV]
	_within_p -> _make_v_1 [label=ARG1]
	_on_p -> _ground_n_1 [label=ARG2]
	_make_v_1 -> _claim_n_of [label=ARG2]
	compound -> "named(District)" [label=ARG2]
	_ground_n_1 -> "_fail_v_1-fn.NF" [label=ARG1]
	"_call_v_name-fn.IN" -> _lawyer_n_1 [label="ARG1-fn.Agent"]
	"_deny_v_to-fn.Statement" -> _injunction_n_1 [label="ARG2-fn.Predicate"]
	_on_p -> "_deny_v_to-fn.Statement" [label=ARG1]
	proper_q -> "named(Era)" [label=BV]
	compound -> "named(Court)" [label=ARG1]
	_the_q -> _ground_n_1 [label=BV]
	proper_q -> "named(Court)" [label=BV]
	"_call_v_name-fn.IN" -> "_laches/nn_u_unknown" [label="ARG2-fn.Theme"]
}
