digraph {
	node [shape=circle style=filled]
	proper_q -> "named(ATT)" [label=BV]
	_close_a_to -> "_match_v_cause-fn.Cause_to_end" [label=ARG1]
	"_prevent_v_from-fn.Differentiation" -> _step_n_1 [label="ARG1-fn.Cognizer"]
	unknown -> _step_n_1 [label=ARG]
	"_want_v_1-fn.Competition" -> _company_n_of [label="ARG1-fn.Participant_1"]
	"_help_v_to-fn.Cause_to_end" -> _step_n_1 [label="ARG1-fn.Process"]
	compound -> _mix_n_of [label=ARG1]
	_of_p -> generic_entity [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "_help_v_to-fn.Cause_to_end" [label="ARG2-fn.Means"]
	udef_q -> _business_n_1 [label=BV]
	comp -> _close_a_to [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	pronoun_q -> pron [label=BV]
	udef_q -> _cross_n_1 [label=BV]
	poss -> pron [label=ARG2]
	"_prevent_v_from-fn.Differentiation" -> "_subsidization/nn_u_unknown" [label="ARG2-fn.Phenomenon_1"]
	poss -> _mix_n_of [label=ARG1]
	compound -> "_subsidization/nn_u_unknown" [label=ARG1]
	_of_p -> "named(ATT)" [label=ARG2]
	"_match_v_cause-fn.Cause_to_end" -> _mix_n_of [label="ARG1-fn.Process"]
	udef_q -> "_subsidization/nn_u_unknown" [label=BV]
	"_want_v_1-fn.Competition" -> "_match_v_cause-fn.Cause_to_end" [label="ARG2-fn.Participant_2"]
	compound -> _business_n_1 [label=ARG2]
	_a_q -> _step_n_1 [label=BV]
	def_explicit_q -> _mix_n_of [label=BV]
	"_match_v_cause-fn.Cause_to_end" -> generic_entity [label="ARG2-fn.Means"]
	_that_q_dem -> generic_entity [label=BV]
	compound -> _cross_n_1 [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	"_help_v_to-fn.Cause_to_end" -> "_prevent_v_from-fn.Differentiation" [label="ARG2-fn.Means"]
}
