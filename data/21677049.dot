digraph {
	node [shape=circle style=filled]
	"_bother_v_1-fn.NF" -> pron [label="ARG2-fn.Experiencer"]
	loc_nonsp -> "_bother_v_1-fn.NF" [label=ARG1]
	def_implicit_q -> _week_n_1 [label=BV]
	"_bother_v_1-fn.NF" -> _message_n_of [label="ARG1-fn.Stimulus"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	comp_enough -> "_know_v_1-fn.IN" [label=ARG2]
	_refine_v_1 -> _product_n_1 [label=ARG2]
	_so_x -> _smart_a_1 [label=ARG2]
	_again_a_1 -> "_bother_v_1-fn.NF" [label=ARG1]
	"_say_v_to-fn.IN" -> _so_x [label="ARG2-fn.Topic"]
	_smart_a_1 -> _message_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	comp_enough -> _smart_a_1 [label=ARG1]
	loc_nonsp -> _week_n_1 [label=ARG2]
	proper_q -> "named(Beyond)" [label=BV]
	_come_v_back -> _message_n_of [label=ARG1]
	proper_q -> "named(Digate)" [label=BV]
	_refine_v_1 -> "named(Beyond)" [label=ARG1]
	_so_x -> _refine_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Digate)" [label="ARG1-fn.Agent"]
	_the_q -> _product_n_1 [label=BV]
	_next_a_1 -> _week_n_1 [label=ARG1]
	"_know_v_1-fn.IN" -> _and_c [label="ARG2-fn.Theme"]
	_the_q -> _message_n_of [label=BV]
	compound -> "named(Digate)" [label=ARG1]
}
