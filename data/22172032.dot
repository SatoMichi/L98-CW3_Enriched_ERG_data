digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Read)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	def_implicit_q -> place_n [label=BV]
	"_say_v_to-fn.Surpassing" -> "named(Neidl)" [label="ARG1-fn.Standard_item"]
	compound -> "_and+company_n_1" [label=ARG2]
	compound -> "named(Trump)" [label=ARG1]
	_the_q -> _dust_n_1 [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_step_v_1-fn.Competition" -> "named(Trump)" [label="ARG1-fn.Participant_1"]
	loc_nonsp -> "_step_v_1-fn.Competition" [label=ARG1]
	compound -> "named(Dillon)" [label=ARG2]
	compound -> "named(Read)" [label=ARG1]
	_back_p -> place_n [label=ARG1]
	compound -> "named(Ray)" [label=ARG2]
	"_wait_v_1-fn.Impact" -> "named(Trump)" [label="ARG1-fn.Place"]
	"_say_v_to-fn.Surpassing" -> _and_c [label="ARG2-fn.Profiled_item"]
	proper_q -> "named(Ray)" [label=BV]
	"_wait_v_1-fn.Impact" -> "_settle_v_1-fn.Impact" [label="ARG2-fn.Result"]
	loc_nonsp -> place_n [label=ARG2]
	proper_q -> "named(Trump)" [label=BV]
	udef_q -> "_and+company_n_1" [label=BV]
	proper_q -> "named(Dillon)" [label=BV]
	_of_p -> "named(Read)" [label=ARG2]
	_of_p -> "named(Neidl)" [label=ARG1]
	proper_q -> "named(Neidl)" [label=BV]
	compound -> "named(Neidl)" [label=ARG1]
	"_settle_v_1-fn.Impact" -> _dust_n_1 [label="ARG1-fn.Place"]
}
