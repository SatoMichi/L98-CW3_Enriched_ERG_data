digraph {
	node [shape=circle style=filled]
	_in_p -> "_talk_n_of-on" [label=ARG2]
	compound -> "named(News)" [label=ARG1]
	_the_q -> _negotiation_n_of [label=BV]
	"_say_v_to-fn.IN" -> _in_p [label="ARG2-fn.Topic"]
	udef_q -> _inc_n_1 [label=BV]
	compound -> "named(New)" [label=ARG2]
	compound -> "named(Lotus)" [label=ARG2]
	poss -> pron [label=ARG2]
	_parent_n_of -> "named(Network)" [label=ARG1]
	udef_q -> _people_n_of [label=BV]
	_the_q -> _parent_n_of [label=BV]
	"_sell_v_1-fn.Commerce_sell" -> "named(Infotechnology)" [label="ARG3-fn.Recipient"]
	poss -> _service_n_1 [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	proper_q -> "named(Development)" [label=BV]
	compound -> "named(Financial)" [label=ARG2]
	_familiar_a_with -> _people_n_of [label=ARG1]
	proper_q -> "named(Lotus)" [label=BV]
	compound -> _corporation_n_1 [label=ARG2]
	proper_q -> "named(Signal)" [label=BV]
	compound -> _parent_n_of [label=ARG1]
	proper_q -> "named(News)" [label=BV]
	compound -> _stock_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _corporation_n_1 [label=BV]
	compound -> "named(Signal)" [label=ARG2]
	proper_q -> "named(Infotechnology)" [label=BV]
	compound -> "named(Network)" [label=ARG1]
	with_p -> "_talk_n_of-on" [label=ARG2]
	udef_q -> _stock_n_1 [label=BV]
	compound -> "named(York)" [label=ARG1]
	proper_q -> "named(Financial)" [label=BV]
	appos -> _parent_n_of [label=ARG2]
	udef_q -> "_talk_n_of-on" [label=BV]
	_familiar_a_with -> _negotiation_n_of [label=ARG2]
	udef_q -> _quote_n_1 [label=BV]
	with_p -> "_sell_v_1-fn.Commerce_sell" [label=ARG1]
	compound -> "named(Infotechnology)" [label=ARG1]
	appos -> "named(Infotechnology)" [label=ARG1]
	proper_q -> "named(Network)" [label=BV]
	"_sell_v_1-fn.Commerce_sell" -> _service_n_1 [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> _people_n_of [label="ARG1-fn.Agent"]
	_in_p -> "named(Development)" [label=ARG1]
	def_explicit_q -> _service_n_1 [label=BV]
	compound -> "named(Development)" [label=ARG1]
	proper_q -> "named(York)" [label=BV]
	compound -> _service_n_1 [label=ARG1]
	compound -> _inc_n_1 [label=ARG2]
	focus_d -> _in_p [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _quote_n_1 [label=ARG1]
}
