digraph {
	node [shape=circle style=filled]
	_a_q -> _computer_n_1 [label=BV]
	_the_q -> _and_c [label=BV]
	_depict_v_1 -> _and_c [label=ARG1]
	_japanese_a_1 -> _language_n_1 [label=ARG1]
	nominalization -> _process_v_1 [label=ARG1]
	comp -> "_good_a_at-for-of" [label=ARG1]
	_a_q -> _memory_n_of [label=BV]
	compound -> nominalization [label=ARG2]
	_the_q -> _symbol_n_of [label=BV]
	udef_q -> _screen_n_1 [label=BV]
	"_in+order+to_x" -> _depict_v_1 [label=ARG2]
	_while_x -> "_need_v_1-fn.Have_as_requirement" [label=ARG1]
	"much-many_a" -> _capability_n_to [label=ARG1]
	_depict_v_1 -> _symbol_n_of [label=ARG2]
	_besides_a_1 -> _while_x [label=ARG1]
	"_good_a_at-for-of" -> _definition_n_of [label=ARG1]
	compound -> _capability_n_to [label=ARG1]
	"_in+order+to_x" -> "_need_v_1-fn.Have_as_requirement" [label=ARG1]
	_process_v_1 -> _language_n_1 [label=ARG2]
	udef_q -> _definition_n_of [label=BV]
	udef_q -> nominalization [label=BV]
	"_need_v_1-fn.Have_as_requirement" -> _definition_n_of [label="ARG2-fn.Theme"]
	_huge_a_1 -> _memory_n_of [label=ARG1]
	udef_q -> _printer_n_of [label=BV]
	_intricate_a_1 -> _symbol_n_of [label=ARG1]
	_process_v_1 -> _computer_n_1 [label=ARG1]
	"_need_v_1-fn.Have_as_requirement" -> _computer_n_1 [label="ARG1-fn.Pivot"]
	_far_x_deg -> comp [label=ARG1]
	_while_x -> "_in+order+to_x" [label=ARG2]
	_accurate_a_1 -> _depict_v_1 [label=ARG1]
	_the_q -> _language_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	udef_q -> _capability_n_to [label=BV]
	"_need_v_1-fn.Have_as_requirement" -> _and_c [label="ARG1-fn.Pivot"]
}
