digraph {
	node [shape=circle style=filled]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.Topic"]
	"_get_v_state-fn.get.03" -> "_out+of_p" [label="ARG2-fn.Patient"]
	"_out+of_p" -> _industry_n_1 [label=ARG2]
	proper_q -> "named(Andersson)" [label=BV]
	_all_q -> part_of [label=BV]
	"_concentrate_v_on-fn.NF" -> implicit_conj [label="ARG2-fn.Theme"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	subord -> _come_v_1 [label=ARG1]
	part_of -> _consultant_n_1 [label=ARG1]
	udef_q -> _or_c [label=BV]
	udef_q -> implicit_conj [label=BV]
	_around_p_dir -> _come_v_1 [label=ARG1]
	udef_q -> _electronics_n_1 [label=BV]
	_high_a_1 -> _technology_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	focus_d -> _recall_v_1 [label=ARG1]
	_should_v_modal -> _and_c [label=ARG1]
	_these_q_dem -> _consultant_n_1 [label=BV]
	subord -> "_tell_v_1-fn.Telling" [label=ARG2]
	"_concentrate_v_on-fn.NF" -> pron [label="ARG1-fn.Experiencer"]
	compound -> "named(Andersson)" [label=ARG1]
	_basic_a_1 -> _industry_n_1 [label=ARG1]
	"_out+of_p" -> pron [label=ARG1]
	"_keep_v_on-fn.Activity_ongoing" -> subord [label="ARG1-fn.Agent"]
	focus_d -> "_keep_v_on-fn.Activity_ongoing" [label=ARG2]
	udef_q -> _technology_n_1 [label=BV]
	_come_v_1 -> part_of [label=ARG1]
	"_get_v_state-fn.get.03" -> pron [label="ARG1-fn.NotExist"]
	_recall_v_1 -> "named(Andersson)" [label=ARG1]
	_mature_a_1 -> _industry_n_1 [label=ARG1]
	"_tell_v_1-fn.Telling" -> _should_v_modal [label="ARG3-fn.Recipient"]
	udef_q -> _industry_n_1 [label=BV]
	udef_q -> "_biotechnology/nn_u_unknown" [label=BV]
	_recall_v_1 -> "_keep_v_on-fn.Activity_ongoing" [label=ARG2]
}
