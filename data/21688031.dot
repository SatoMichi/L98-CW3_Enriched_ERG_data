digraph {
	node [shape=circle style=filled]
	"_out+of_p" -> "named(Bridge)" [label=ARG2]
	"_get_v_state-fn.IN" -> "_shock_v_1-fn.Experiencer_obj" [label="ARG2-fn.Patient"]
	_would_v_modal -> "_get_v_state-fn.IN" [label=ARG1]
	neg -> _would_v_modal [label=ARG1]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_if_x_then -> neg [label=ARG1]
	proper_q -> "named(Bay)" [label=BV]
	_nevertheless_a_1 -> "_add_v_to-fn.NF" [label=ARG1]
	"_get_v_1-fn.IN" -> "_lawsuits/nns_u_unknown" [label="ARG2-fn.Patient"]
	udef_q -> "_lawsuits/nns_u_unknown" [label=BV]
	parg_d -> "_shock_v_1-fn.Experiencer_obj" [label=ARG1]
	"_add_v_to-fn.NF" -> _if_x_then [label="ARG2-fn.Topic"]
	parg_d -> pron [label=ARG2]
	"_shock_v_1-fn.Experiencer_obj" -> pron [label="ARG2-fn.Experiencer"]
	pronoun_q -> pron [label=BV]
	"_get_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	"_add_v_to-fn.NF" -> pron [label="ARG1-fn.Agent"]
	compound -> "named(Bridge)" [label=ARG1]
	compound -> "named(Bay)" [label=ARG2]
	_if_x_then -> "_get_v_1-fn.IN" [label=ARG2]
	_total_a_1 -> "_shock_v_1-fn.Experiencer_obj" [label=ARG1]
	"_out+of_p" -> "_get_v_1-fn.IN" [label=ARG1]
	_the_q -> "named(Bridge)" [label=BV]
}
