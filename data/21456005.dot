digraph {
	node [shape=circle style=filled]
	def_explicit_q -> generic_entity [label=BV]
	compound -> "named(Air)" [label=ARG1]
	compound -> _air_n_1 [label=ARG2]
	udef_q -> _air_n_1 [label=BV]
	proper_q -> "named(Express)" [label=BV]
	proper_q -> "named(Air)" [label=BV]
	"_own_v_1-fn.Expectation" -> _and_c [label="ARG2-fn.Phenomenon"]
	appos -> _concern_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	udef_q -> _security_n_1 [label=BV]
	_the_q -> _concern_n_1 [label=BV]
	poss -> generic_entity [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	compound -> generic_entity [label=ARG1]
	compound -> _inc_n_1 [label=ARG2]
	proper_q -> "named(Brink)" [label=BV]
	_also_a_1 -> "_own_v_1-fn.Expectation" [label=ARG1]
	compound -> "named(Burlington)" [label=ARG2]
	poss -> "named(Brink)" [label=ARG2]
	udef_q -> _freight_n_1 [label=BV]
	compound -> "named(Express)" [label=ARG1]
	"_own_v_1-fn.Expectation" -> "named(Pittston)" [label="ARG1-fn.Cognizer"]
	compound -> _concern_n_1 [label=ARG1]
	proper_q -> "named(Pittston)" [label=BV]
	compound -> _freight_n_1 [label=ARG1]
	appos -> generic_entity [label=ARG1]
	compound -> _security_n_1 [label=ARG2]
	compound -> _service_n_1 [label=ARG1]
	_the_q -> _service_n_1 [label=BV]
	proper_q -> "named(Burlington)" [label=BV]
	appos -> "named(Express)" [label=ARG1]
	appos -> _service_n_1 [label=ARG2]
}
