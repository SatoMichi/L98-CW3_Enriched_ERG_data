digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	udef_q -> "named_n(US)" [label=BV]
	_catch_v_on -> _apple_n_1 [label=ARG1]
	_a_q -> _apple_n_1 [label=BV]
	parg_d -> "_know_v_as-fn.IN" [label=ARG1]
	"_different_a_than-from" -> _apple_n_1 [label=ARG1]
	_never_a_1 -> _catch_v_on [label=ARG1]
	_the_q -> _father_n_of [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	parg_d -> pron [label=ARG2]
	compound -> "named(Granny)" [label=ARG2]
	_father_n_of -> "named(Smith)" [label=ARG1]
	"_know_v_as-fn.IN" -> _father_n_of [label="ARG3-fn.Predicate"]
	pronoun_q -> pron [label=BV]
	_conventional_a_1 -> _wisdom_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _wisdom_n_1 [label="ARG1-fn.Agent"]
	comp -> "_different_a_than-from" [label=ARG1]
	compound -> "named(Smith)" [label=ARG1]
	_the_q -> "named(Smith)" [label=BV]
	appos -> _apple_n_1 [label=ARG2]
	parg_d -> "named(Smith)" [label=ARG2]
	compound -> _grow_v_cause [label=ARG1]
	appos -> "named(Smith)" [label=ARG1]
	parg_d -> _grow_v_cause [label=ARG1]
	_grow_v_cause -> "named(Smith)" [label=ARG2]
	proper_q -> "named(Granny)" [label=BV]
	_once_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	"_know_v_as-fn.IN" -> pron [label="ARG2-fn.Theme"]
	_the_q -> _wisdom_n_1 [label=BV]
	_radical_a_1 -> "_different_a_than-from" [label=ARG1]
	_would_v_modal -> _never_a_1 [label=ARG1]
}
