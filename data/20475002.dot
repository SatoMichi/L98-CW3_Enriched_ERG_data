digraph {
	node [shape=circle style=filled]
	"_give_v_1-fn.Giving" -> _instruction_n_of [label="ARG2-fn.Theme"]
	_yesterday_a_1 -> time_n [label=ARG1]
	compound -> "named(New)" [label=ARG2]
	poss -> "named(Eastern)" [label=ARG2]
	poss -> pron [label=ARG2]
	_in_p -> _meeting_n_of [label=ARG1]
	udef_q -> _option_n_1 [label=BV]
	_in_p_state -> _put_v_1 [label=ARG1]
	_ago_p -> "_give_v_1-fn.Giving" [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	"_say_v_to-fn.IN" -> _source_n_of [label="ARG1-fn.Agent"]
	def_explicit_q -> _expert_n_1 [label=BV]
	"_explore_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	_the_q -> _committee_n_of [label=BV]
	poss -> _future_n_1 [label=ARG1]
	_on_p -> _hold_n_i [label=ARG2]
	"card(2)" -> _week_n_1 [label=ARG1]
	_a_q -> _meeting_n_of [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	loc_nonsp -> _meeting_n_of [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	udef_q -> _instruction_n_of [label=BV]
	"_give_v_1-fn.Giving" -> pron [label="ARG1-fn.Agent"]
	focus_d -> _put_v_1 [label=ARG1]
	"_give_v_1-fn.Giving" -> _expert_n_1 [label="ARG3-fn.Recipient"]
	poss -> _expert_n_1 [label=ARG1]
	_for_p -> _future_n_1 [label=ARG2]
	proper_q -> "named(Eastern)" [label=BV]
	pronoun_q -> pron [label=BV]
	_put_v_1 -> _committee_n_of [label=ARG1]
	def_explicit_q -> _future_n_1 [label=BV]
	_for_p -> _option_n_1 [label=ARG1]
	_on_p -> _instruction_n_of [label=ARG1]
	compound -> "named(York)" [label=ARG1]
	udef_q -> _week_n_1 [label=BV]
	"_explore_v_1-fn.NF" -> _option_n_1 [label="ARG2-fn.Location"]
	_other_a_1 -> _option_n_1 [label=ARG1]
	_put_v_1 -> _on_p [label=ARG3]
	_in_p_state -> _meeting_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _put_v_1 [label="ARG2-fn.Topic"]
	"_in+order+to_x" -> "_explore_v_1-fn.NF" [label=ARG2]
	idiom_q_i -> _hold_n_i [label=BV]
	"_in+order+to_x" -> "_give_v_1-fn.Giving" [label=ARG1]
	_in_p -> "named(York)" [label=ARG2]
	_put_v_1 -> _instruction_n_of [label=ARG2]
	_ago_p -> _week_n_1 [label=ARG2]
	_the_q -> _source_n_of [label=BV]
	proper_q -> "named(York)" [label=BV]
	def_implicit_q -> time_n [label=BV]
}
