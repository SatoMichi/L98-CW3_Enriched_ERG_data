digraph {
	node [shape=circle style=filled]
	comp -> _thin_a_1 [label=ARG1]
	"_plan_v_1-fn.Competition" -> "_introduce_v_to-fn.Receiving" [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> "_be_v_id-fn.Residence" [label="ARG2-fn.Means"]
	"ord(1)" -> _company_n_of [label=ARG1]
	loc_nonsp -> "_introduce_v_to-fn.Receiving" [label=ARG1]
	"_produce_v_1-fn.Competition" -> _drive_n_1 [label="ARG2-fn.Participant_2"]
	udef_q -> "_information_n_on-about" [label=BV]
	def_implicit_q -> _year_n_1 [label=BV]
	_with_p -> _drive_n_1 [label=ARG2]
	"card(80-)" -> _megabyte_n_1 [label=ARG1]
	"_be_v_id-fn.Residence" -> _first_n_of [label="ARG2-fn.Location"]
	_the_q -> _first_n_of [label=BV]
	"_be_v_id-fn.Residence" -> pron [label="ARG1-fn.Resident"]
	_with_p -> _first_n_of [label=ARG1]
	loc_nonsp -> _year_n_1 [label=ARG2]
	_in_p -> _computer_n_1 [label=ARG2]
	_although_x -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(MiniScribe)" [label=BV]
	"_store_v_cause-fn.Cause_to_end" -> _in_p [label="ARG3-fn.Place"]
	udef_q -> _computer_n_1 [label=BV]
	"_be_v_id-fn.Residence" -> _company_n_of [label="ARG2-fn.Location"]
	_in_p -> "_information_n_on-about" [label=ARG1]
	_personal_a_1 -> _computer_n_1 [label=ARG1]
	neg -> "_be_v_id-fn.Residence" [label=ARG1]
	"_introduce_v_to-fn.Receiving" -> _drive_n_1 [label="ARG2-fn.Donor"]
	_although_x -> neg [label=ARG2]
	_thin_a_1 -> _drive_n_1 [label=ARG1]
	_a_q -> _drive_n_1 [label=BV]
	eventuality -> "_produce_v_1-fn.Competition" [label=ARG1]
	"card(120-)" -> _megabyte_n_1 [label=ARG1]
	_the_q -> _drive_n_1 [label=BV]
	"_plan_v_1-fn.Competition" -> _company_n_of [label="ARG1-fn.Participant_1"]
	_next_a_1 -> _year_n_1 [label=ARG1]
	"_store_v_cause-fn.Cause_to_end" -> _drive_n_1 [label="ARG1-fn.Process"]
	"_produce_v_1-fn.Competition" -> _company_n_of [label="ARG1-fn.Participant_1"]
	compound -> _drive_n_1 [label=ARG1]
	_the_q -> _company_n_of [label=BV]
	udef_q -> _megabyte_n_1 [label=BV]
	"_introduce_v_to-fn.Receiving" -> _company_n_of [label="ARG1-fn.Recipient"]
	compound -> _megabyte_n_1 [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> "named(MiniScribe)" [label="ARG1-fn.Process"]
	"_store_v_cause-fn.Cause_to_end" -> "_information_n_on-about" [label="ARG2-fn.Means"]
}
