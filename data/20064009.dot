digraph {
	node [shape=circle style=filled]
	"_carry_v_1-fn.Bringing" -> _vehicle_n_1 [label="ARG1-fn.Location"]
	_actual_a_1 -> "_carry_v_1-fn.Bringing" [label=ARG1]
	"much-many_a" -> _vehicle_n_1 [label=ARG1]
	_same_a_as -> _feature_n_1 [label=ARG1]
	comp_equal -> _car_n_1 [label=ARG2]
	_light_a_of -> _truck_n_1 [label=ARG1]
	udef_q -> _cargo_n_1 [label=BV]
	"much-many_a" -> _people_n_of [label=ARG1]
	udef_q -> _vehicle_n_1 [label=BV]
	_commercial_a_1 -> _truck_n_1 [label=ARG1]
	_should_v_modal -> "_have_v_1-fn.IN" [label=ARG1]
	comp -> _cargo_n_1 [label=ARG2]
	udef_q -> _people_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	_class_v_as -> _vehicle_n_1 [label=ARG2]
	udef_q -> _truck_n_1 [label=BV]
	compound -> _safety_n_1 [label=ARG2]
	comp -> "much-many_a" [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	parg_d -> _vehicle_n_1 [label=ARG2]
	compound -> _feature_n_1 [label=ARG1]
	"_have_v_1-fn.IN" -> _feature_n_1 [label="ARG2-fn.Theme"]
	_class_v_as -> _truck_n_1 [label=ARG3]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	udef_q -> _safety_n_1 [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_have_v_1-fn.IN" -> _vehicle_n_1 [label="ARG1-fn.Pivot"]
	udef_q -> _car_n_1 [label=BV]
	_therefore_a_1 -> _should_v_modal [label=ARG1]
	_the_q -> _feature_n_1 [label=BV]
	parg_d -> _class_v_as [label=ARG1]
	"_carry_v_1-fn.Bringing" -> _people_n_of [label="ARG2-fn.Value"]
}
