digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	_modest_a_1 -> _decline_n_1 [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	poss -> _high_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Hafer)" [label="ARG1-fn.Agent"]
	def_implicit_q -> time_n [label=BV]
	_above_p -> _high_n_1 [label=ARG2]
	_while_x -> _might_v_modal [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_would_v_modal -> _difficult_a_for [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	def_explicit_q -> _high_n_1 [label=BV]
	poss -> time_n [label=ARG2]
	_through_p -> _level_n_1 [label=ARG2]
	compound -> "named(Hafer)" [label=ARG1]
	proper_q -> "named(Hafer)" [label=BV]
	_above_p -> _level_n_1 [label=ARG1]
	udef_q -> _level_n_1 [label=BV]
	udef_q -> _resistance_n_to [label=BV]
	comp -> _further_a_1 [label=ARG1]
	_just_x_deg -> _above_p [label=ARG1]
	udef_q -> _decline_n_1 [label=BV]
	compound -> _resistance_n_to [label=ARG2]
	_while_x -> "_say_v_to-fn.IN" [label=ARG1]
	_ahead_p -> _decline_n_1 [label=ARG1]
	_might_v_modal -> _ahead_p [label=ARG1]
	compound -> _level_n_1 [label=ARG1]
	_get_v_state -> _through_p [label=ARG2]
	_further_a_1 -> _decline_n_1 [label=ARG1]
	_difficult_a_for -> _get_v_state [label=ARG1]
}
