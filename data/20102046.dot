digraph {
	node [shape=circle style=filled]
	"_house_v_1-fn.Provide_lodging" -> generic_entity [label="ARG1-fn.NotExist"]
	compound -> generic_entity [label=ARG1]
	compound -> "named(New)" [label=ARG2]
	_alter_v_1 -> generic_entity [label=ARG2]
	_a_q -> _prison_n_1 [label=BV]
	"_upstate/jj_u_unknown" -> "named(York)" [label=ARG1]
	udef_q -> _size_n_1 [label=BV]
	proper_q -> "named(New)" [label=BV]
	parg_d -> generic_entity [label=ARG2]
	_could_v_modal -> "_in+order+to_x" [label=ARG1]
	_medium_a_1 -> _size_n_1 [label=ARG1]
	"_in+order+to_x" -> _alter_v_1 [label=ARG1]
	focus_d -> generic_entity [label=ARG2]
	"_house_v_1-fn.Provide_lodging" -> _inmate_n_1 [label="ARG2-fn.Value"]
	_a_q -> generic_entity [label=BV]
	_in_p -> "_build_v_1-fn.Building" [label=ARG1]
	udef_q -> _inmate_n_1 [label=BV]
	compound -> _size_n_1 [label=ARG2]
	_at_p -> "_house_v_1-fn.Provide_lodging" [label=ARG1]
	pronoun_q -> pron [label=BV]
	comp -> _low_a_1 [label=ARG1]
	compound -> "named(York)" [label=ARG1]
	"_up+to_x_deg" -> "card(1,000)" [label=ARG1]
	_new_a_1 -> _prison_n_1 [label=ARG1]
	_low_a_1 -> _cost_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_in_p -> "named(York)" [label=ARG2]
	parg_d -> _alter_v_1 [label=ARG1]
	_at_p -> _cost_n_1 [label=ARG2]
	"card(1)" -> generic_entity [label=ARG1]
	_in_p -> "named(Brooklyn)" [label=ARG2]
	_in_p -> generic_entity [label=ARG1]
	"_build_v_1-fn.Building" -> _prison_n_1 [label="ARG2-fn.Product"]
	proper_q -> "named(York)" [label=BV]
	_a_q -> _cost_n_1 [label=BV]
	"card(1,000)" -> _inmate_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _could_v_modal [label="ARG2-fn.NotExist"]
	comp -> "_build_v_1-fn.Building" [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_in+order+to_x" -> "_house_v_1-fn.Provide_lodging" [label=ARG2]
	proper_q -> "named(Brooklyn)" [label=BV]
}
