digraph {
	node [shape=circle style=filled]
	udef_q -> _negotiation_n_of [label=BV]
	compound -> "named(Lorenzo)" [label=ARG1]
	_with_p -> _negotiation_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> _have_v_qmodal [label="ARG2-fn.Topic"]
	unspec_manner -> _come_v_along [label=ARG1]
	"_as+to_p" -> _negotiation_n_of [label=ARG2]
	_have_v_qmodal -> "_see_v_1-fn.Grasp" [label=ARG1]
	focus_d -> "_as+to_p" [label=ARG2]
	_in_p -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	parenthetical -> pron [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	parenthetical -> "_talk_n_of-on" [label=ARG2]
	which_q -> manner [label=BV]
	_with_p -> _creditor_n_1 [label=ARG2]
	_after_p -> _conference_n_of [label=ARG2]
	_in_p -> _remark_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _remark_n_1 [label=BV]
	udef_q -> "_talk_n_of-on" [label=BV]
	"_say_v_to-fn.IN" -> "named(Lorenzo)" [label="ARG1-fn.Agent"]
	_after_p -> _remark_n_1 [label=ARG1]
	"_as+to_p" -> "_say_v_to-fn.IN" [label=ARG1]
	_the_q -> _conference_n_of [label=BV]
	udef_q -> _creditor_n_1 [label=BV]
	"_see_v_1-fn.Grasp" -> pron [label="ARG1-fn.Experiencer"]
	"_see_v_1-fn.Grasp" -> _come_v_along [label="ARG2-fn.Stimulus"]
	unspec_manner -> manner [label=ARG2]
	proper_q -> "named(Lorenzo)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_come_v_along -> pron [label=ARG1]
}
