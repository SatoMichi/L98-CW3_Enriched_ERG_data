digraph {
	node [shape=circle style=filled]
	_laugh_v_at -> _official_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	proper_q -> "named(String)" [label=BV]
	neg -> _laugh_v_at [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	parg_d -> _approach_n_to [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	parg_d -> "_suggest_v_to-fn.Statement" [label=ARG1]
	"_say_v_1-fn.IN" -> "named(String)" [label="ARG1-fn.Agent"]
	udef_q -> _or_c [label=BV]
	_the_q -> _approach_n_to [label=BV]
	_worth_n_of -> _work_n_1 [label=ARG1]
	compound -> _worth_n_of [label=ARG1]
	"_find_v_1-fn.IN" -> _worth_n_of [label="ARG2-fn.Theme"]
	def_explicit_q -> _company_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	"card(20,000)" -> _dollar_n_1 [label=ARG1]
	_when_x_subord -> "_suggest_v_to-fn.Statement" [label=ARG2]
	udef_q -> _official_n_1 [label=BV]
	udef_q -> _work_n_1 [label=BV]
	"_find_v_1-fn.IN" -> _company_n_of [label="ARG1-fn.Agent"]
	compound -> "named(Brooks)" [label=ARG2]
	_any_q -> thing [label=BV]
	compound -> _official_n_1 [label=ARG1]
	_laugh_v_at -> _or_c [label=ARG2]
	proper_q -> "named(Brooks)" [label=BV]
	poss -> _company_n_of [label=ARG1]
	compound -> _dollar_n_1 [label=ARG2]
	_when_x_subord -> "_say_v_1-fn.IN" [label=ARG1]
	"_suggest_v_to-fn.Statement" -> _approach_n_to [label="ARG2-fn.Topic"]
	udef_q -> _dollar_n_1 [label=BV]
	compound -> "named(String)" [label=ARG1]
	udef_q -> _worth_n_of [label=BV]
}
