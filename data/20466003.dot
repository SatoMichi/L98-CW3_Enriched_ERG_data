digraph {
	node [shape=circle style=filled]
	parg_d -> _product_n_1 [label=ARG2]
	compound -> "named(Foods)" [label=ARG1]
	compound -> "named(Michael)" [label=ARG2]
	proper_q -> "named(Burger)" [label=BV]
	_each_q -> _morning_n_of [label=BV]
	loc_nonsp -> _morning_n_of [label=ARG2]
	"_break_v_cause-fn.Cause_to_end" -> "named(King)" [label="ARG1-fn.Process"]
	_to_p -> _over_p [label=ARG1]
	_quiet_a_1 -> "_switch_v_1-fn.Cause_to_end" [label=ARG1]
	compound -> "named(Burger)" [label=ARG2]
	generic_entity -> _egg_n_1 [label=ARG1]
	"_switch_v_1-fn.Cause_to_end" -> "named(King)" [label="ARG1-fn.Process"]
	_over_p -> "_switch_v_1-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Michael)" [label=BV]
	udef_q -> generic_entity [label=BV]
	"_break_v_cause-fn.Cause_to_end" -> generic_entity [label="ARG2-fn.Means"]
	compound -> _egg_n_1 [label=ARG2]
	udef_q -> _egg_n_1 [label=BV]
	"_make_v_1-fn.Rite" -> "named(Foods)" [label="ARG1-fn.Leader"]
	_to_p -> _product_n_1 [label=ARG2]
	compound -> "named(King)" [label=ARG1]
	proper_q -> "named(King)" [label=BV]
	loc_nonsp -> "_break_v_cause-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Foods)" [label=BV]
	_alternative_a_1 -> _product_n_1 [label=ARG1]
	_fresh_a_1 -> _egg_n_1 [label=ARG1]
	_a_q -> _product_n_1 [label=BV]
	parg_d -> "_make_v_1-fn.Rite" [label=ARG1]
	"_make_v_1-fn.Rite" -> _product_n_1 [label="ARG2-fn.Member"]
	"card(1000)" -> generic_entity [label=ARG1]
	compound -> _product_n_1 [label=ARG1]
}
