digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _partisan_n_1 [label=BV]
	"_cry_v_to-fn.Communication_noise" -> _partisan_n_1 [label="ARG1-fn.Agent"]
	_produce_v_1 -> "named(Ailes)" [label=ARG1]
	compound -> "named(Florio)" [label=ARG2]
	appos -> pron [label=ARG2]
	focus_d -> _fraud_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	_own_a_1 -> _commercial_n_1 [label=ARG1]
	poss -> _commercial_n_1 [label=ARG1]
	compound -> _campaign_n_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	appos -> _commercial_n_1 [label=ARG1]
	_be_v_id -> _fraud_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_cry_v_to-fn.Communication_noise" -> _be_v_id [label="ARG2-fn.NotExist"]
	proper_q -> "named(Pinocchio)" [label=BV]
	_be_v_id -> _commercial_n_1 [label=ARG2]
	"_respond_v_to-fn.Communication_response" -> _campaign_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(Ailes)" [label=BV]
	poss -> _partisan_n_1 [label=ARG1]
	_only_a_1 -> _fraud_n_1 [label=ARG1]
	parg_d -> _produce_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Ailes)" [label=ARG1]
	parg_d -> _involve_v_1 [label=ARG1]
	_the_q -> _campaign_n_1 [label=BV]
	_the_q -> _fraud_n_1 [label=BV]
	_with_p -> "_respond_v_to-fn.Communication_response" [label=ARG1]
	_involve_v_1 -> _fraud_n_1 [label=ARG2]
	_the_q -> _commercial_n_1 [label=BV]
	proper_q -> "named(Courter)" [label=BV]
	focus_d -> "_cry_v_to-fn.Communication_noise" [label=ARG1]
	def_explicit_q -> _commercial_n_1 [label=BV]
	compound -> "named(Pinocchio)" [label=ARG2]
	parg_d -> _commercial_n_1 [label=ARG2]
	compound -> _commercial_n_1 [label=ARG1]
	proper_q -> "named(Florio)" [label=BV]
	_produce_v_1 -> _commercial_n_1 [label=ARG2]
	poss -> "named(Courter)" [label=ARG2]
	compound -> "named(Courter)" [label=ARG2]
	parg_d -> _fraud_n_1 [label=ARG2]
	_with_p -> _commercial_n_1 [label=ARG2]
}
