digraph {
	node [shape=circle style=filled]
	"_see_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	_from_p -> _effect_n_1 [label=ARG1]
	udef_q -> _analyst_n_1 [label=BV]
	compound -> "named(California)" [label=ARG2]
	_on_p -> _effect_n_1 [label=ARG1]
	_on_p -> _stock_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> "named(Tokyo)" [label=ARG2]
	compound -> _stock_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _trader_n_1 [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	_from_p -> _earthquake_n_1 [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> _and_c [label="ARG1-fn.Dependent"]
	neg -> "_see_v_1-fn.State_continue" [label=ARG1]
	compound -> _earthquake_n_1 [label=ARG1]
	"_see_v_1-fn.State_continue" -> _effect_n_1 [label="ARG2-fn.State"]
	_any_q -> _effect_n_1 [label=BV]
	proper_q -> "named(Tokyo)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	proper_q -> "named(California)" [label=BV]
	_the_q -> _earthquake_n_1 [label=BV]
}
