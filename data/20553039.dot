digraph {
	node [shape=circle style=filled]
	_recall_v_1 -> _but_c [label=ARG2]
	_for_p -> "_chide_v_1-fn.Judgment_direct_address" [label=ARG1]
	"_say_v_to-fn.IN" -> _chorus_n_1 [label="ARG1-fn.NotExist"]
	"_lead_v_1-fn.Cotheme" -> _chorus_n_1 [label="ARG2-fn.Theme"]
	proper_q -> "named(Volcker)" [label=BV]
	_recall_v_1 -> pron [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_lead_v_1-fn.Cotheme" -> "named(Roberts)" [label="ARG1-fn.Agent"]
	_for_p -> nominalization [label=ARG2]
	"_because+of_p" -> _easy_a_for [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _dollar_n_1 [label=BV]
	"_chide_v_1-fn.Judgment_direct_address" -> "named(Roberts)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Roberts)" [label=BV]
	"_because+of_p" -> _desire_n_for [label=ARG2]
	_tight_a_1 -> "named(Volcker)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	comp_too -> _tight_a_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _when_x_subord [label="ARG2-fn.NotExist"]
	_when_x_subord -> _tight_a_1 [label=ARG1]
	udef_q -> _sterling_n_1 [label=BV]
	_desire_n_for -> "_constrain_v_from-fn.Hindering" [label=ARG1]
	nominalization -> _easy_a_for [label=ARG1]
	_when_x_subord -> _let_v_1 [label=ARG2]
	udef_q -> nominalization [label=BV]
	"_chide_v_1-fn.Judgment_direct_address" -> "named(Chancellor)" [label="ARG2-fn.Theme"]
	comp_too -> _easy_a_for [label=ARG1]
	_the_q -> "named(Chancellor)" [label=BV]
	"_constrain_v_from-fn.Hindering" -> _sterling_n_1 [label="ARG2-fn.Patient"]
	_also_a_1 -> "_lead_v_1-fn.Cotheme" [label=ARG1]
	_let_v_1 -> pron [label=ARG1]
	_let_v_1 -> "_rise_v_1-fn.IN" [label=ARG2]
	_the_q -> _chorus_n_1 [label=BV]
	"_rise_v_1-fn.IN" -> _dollar_n_1 [label="ARG1-fn.NotExist"]
	_a_q -> _desire_n_for [label=BV]
	compound -> "named(Roberts)" [label=ARG1]
	compound -> "named(Volcker)" [label=ARG1]
}
