digraph {
	node [shape=circle style=filled]
	poss -> _conventioner_n_1 [label=ARG1]
	part_of -> pron [label=ARG1]
	_as_x_subord -> _when_x_subord [label=ARG2]
	_a_q -> _state_n_of [label=BV]
	_a_q -> _machine_n_1 [label=BV]
	"_find_v_1-fn.IN" -> _machine_n_1 [label="ARG2-fn.Theme"]
	poss -> pron [label=ARG2]
	_to_p -> _come_v_1 [label=ARG1]
	parenthetical -> "_try_v_1-fn.Attempt" [label=ARG2]
	_to_p -> _athletics_n_1 [label=ARG2]
	compound -> _fellow_n_1 [label=ARG2]
	"_have_v_1-fn.IN" -> _conventioner_n_1 [label="ARG1-fn.Pivot"]
	compound -> "named(Nautilus)" [label=ARG2]
	_no_q -> part_of [label=BV]
	proper_q -> "named(Nautilus)" [label=BV]
	udef_q -> "named(Zen)" [label=BV]
	"_have_v_1-fn.IN" -> part_of [label="ARG2-fn.Theme"]
	_state_n_of -> _blase_n_1 [label=ARG1]
	_when_x_subord -> _embody_v_1 [label=ARG1]
	compound -> _machine_n_1 [label=ARG1]
	"_try_v_1-fn.Attempt" -> "_find_v_1-fn.IN" [label="ARG2-fn.Theme"]
	def_explicit_q -> _conventioner_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _fellow_n_1 [label=BV]
	_come_v_1 -> pron [label=ARG1]
	_when_x_subord -> _come_v_1 [label=ARG2]
	_like_a_1 -> "named(Zen)" [label=ARG2]
	udef_q -> _blase_n_1 [label=BV]
	_in_p -> "_find_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Paris)" [label=BV]
	_the_q -> _french_n_1 [label=BV]
	"_try_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	compound -> _conventioner_n_1 [label=ARG1]
	"_find_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_in_p -> "named(Paris)" [label=ARG2]
	udef_q -> _athletics_n_1 [label=BV]
	_embody_v_1 -> _state_n_of [label=ARG2]
	_like_a_1 -> _state_n_of [label=ARG1]
	_as_x_subord -> "_have_v_1-fn.IN" [label=ARG1]
	parenthetical -> _athletics_n_1 [label=ARG1]
	_embody_v_1 -> _french_n_1 [label=ARG1]
}
