digraph {
	node [shape=circle style=filled]
	"_need_v_1-fn.Needing" -> _leadership_n_1 [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(Hill)" [label="ARG1-fn.Agent"]
	_with_p -> _analyst_n_1 [label=ARG1]
	"_think_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	appos -> "named(Hill)" [label=ARG1]
	proper_q -> "named(Emma)" [label=BV]
	compound -> "named(Hill)" [label=ARG1]
	_with_p -> "named(Wertheim)" [label=ARG2]
	focus_d -> _and_c [label=ARG2]
	pronoun_q -> pron [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	"_need_v_1-fn.Needing" -> pron [label="ARG1-fn.Pivot"]
	compound -> "named(Emma)" [label=ARG2]
	compound -> "_and+company_n_1" [label=ARG2]
	"_have_v_1-fn.IN" -> pron [label="ARG2-fn.Theme"]
	compound -> "named(Wertheim)" [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	neg -> "_think_v_1-fn.IN" [label=ARG1]
	_creative_a_1 -> _leadership_n_1 [label=ARG1]
	proper_q -> "named(Hill)" [label=BV]
	proper_q -> "named(Wertheim)" [label=BV]
	udef_q -> "_and+company_n_1" [label=BV]
	_a_q -> _analyst_n_1 [label=BV]
	"_think_v_1-fn.IN" -> "_have_v_1-fn.IN" [label="ARG2-fn.NotExist"]
	"_think_v_1-fn.IN" -> "_need_v_1-fn.Needing" [label="ARG2-fn.NotExist"]
	udef_q -> _leadership_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
