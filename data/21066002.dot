digraph {
	node [shape=circle style=filled]
	udef_q -> _negotiation_n_of [label=BV]
	nominalization -> _treat_v_1 [label=ARG1]
	_collapse_v_1 -> _negotiation_n_of [label=ARG1]
	proper_q -> "named(Care)" [label=BV]
	compound -> "named(Medical)" [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Delmed)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> _collapse_v_1 [label="ARG2-fn.Topic"]
	"_sell_v_1-fn.Commerce_sell" -> "named(Delmed)" [label="ARG1-fn.Agent"]
	focus_d -> _in_p_state [label=ARG2]
	appos -> "named(Care)" [label=ARG2]
	_major_a_1 -> _distributor_n_of [label=ARG1]
	parg_d -> _solution_n_of [label=ARG2]
	"_make_v_1-fn.Manufacturing" -> _solution_n_of [label="ARG2-fn.Product"]
	udef_q -> _kidney_n_1 [label=BV]
	_between_p -> _collapse_v_1 [label=ARG1]
	proper_q -> "named(Delmed)" [label=BV]
	compound -> "named(National)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	_treat_v_1 -> _disease_n_1 [label=ARG2]
	compound -> _disease_n_1 [label=ARG1]
	"_sell_v_1-fn.Commerce_sell" -> _solution_n_of [label="ARG2-fn.Theme"]
	parg_d -> "_use_v_1-fn.IN" [label=ARG1]
	compound -> _kidney_n_1 [label=ARG2]
	appos -> _distributor_n_of [label=ARG1]
	compound -> "named(Care)" [label=ARG1]
	_between_p -> _and_c [label=ARG2]
	udef_q -> "_dialysis/nn_u_unknown" [label=BV]
	compound -> "_dialysis/nn_u_unknown" [label=ARG2]
	_in_p -> "_use_v_1-fn.IN" [label=ARG1]
	udef_q -> nominalization [label=BV]
	_in_p_state -> _addition_n_1 [label=ARG2]
	_about_p -> _negotiation_n_of [label=ARG1]
	"_use_v_1-fn.IN" -> _solution_n_of [label="ARG2-fn.NotExist"]
	_a_q -> _solution_n_of [label=BV]
	proper_q -> "named(Medical)" [label=BV]
	"_make_v_1-fn.Manufacturing" -> "named(Delmed)" [label="ARG1-fn.Agent"]
	udef_q -> _pricing_n_1 [label=BV]
	proper_q -> "named(National)" [label=BV]
	_a_q -> _distributor_n_of [label=BV]
	compound -> _solution_n_of [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	_about_p -> _pricing_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> _inc_n_1 [label=ARG2]
	udef_q -> _disease_n_1 [label=BV]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _addition_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
