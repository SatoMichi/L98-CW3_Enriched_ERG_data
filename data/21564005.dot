digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _value_n_1 [label=BV]
	_be_v_id -> _holding_n_1 [label=ARG2]
	_a_q -> _holding_n_1 [label=BV]
	udef_q -> _bankruptcy_n_1 [label=BV]
	_complete_a_1 -> _sour_a_1 [label=ARG1]
	poss -> _stock_n_1 [label=ARG2]
	_default_v_1 -> _bond_n_1 [label=ARG1]
	compound -> _bankruptcy_n_1 [label=ARG2]
	nominalization -> _proceed_v_1 [label=ARG1]
	_if_x_then -> _like_p [label=ARG2]
	_a_q -> _stock_n_1 [label=BV]
	_maybe_x_deg -> udef_q [label=ARG1]
	_like_p -> pron [label=ARG1]
	_sour_a_1 -> _holding_n_1 [label=ARG1]
	_a_q -> nominalization [label=BV]
	udef_q -> _or_c [label=BV]
	_go_v_state -> _holding_n_1 [label=ARG1]
	_be_v_id -> pron [label=ARG1]
	poss -> _value_n_1 [label=ARG1]
	_in_p -> "_disappear_v_1-fn.Departing" [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_most_q -> _people_n_of [label=BV]
	"_disappear_v_1-fn.Departing" -> _value_n_1 [label="ARG1-fn.NotExist"]
	unknown -> _or_c [label=ARG]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_like_p -> _people_n_of [label=ARG2]
	_in_p -> nominalization [label=ARG2]
	_go_v_state -> _sour_a_1 [label=ARG2]
	compound -> nominalization [label=ARG1]
	_a_q -> _bond_n_1 [label=BV]
}
