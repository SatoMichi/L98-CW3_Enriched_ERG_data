digraph {
	node [shape=circle style=filled]
	_if_x_then -> _then_a_1 [label=ARG1]
	_make_v_1 -> "named(LDP)" [label=ARG1]
	_the_q -> "named(LDP)" [label=BV]
	_the_q -> _transformation_n_of [label=BV]
	udef_q -> "_party_n_of-to" [label=BV]
	_into_p -> "_split_v_1-fn.Cause_to_fragment" [label=ARG1]
	_then_a_1 -> _should_v_modal [label=ARG1]
	_into_p -> "_party_n_of-to" [label=ARG2]
	_if_x_then -> neg [label=ARG2]
	"_split_v_1-fn.Cause_to_fragment" -> pron [label="ARG1-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_make_v_1 -> _transformation_n_of [label=ARG2]
	_compose_v_1 -> "named(LDP)" [label=ARG2]
	parg_d -> _compose_v_1 [label=ARG1]
	_should_v_modal -> "_split_v_1-fn.Cause_to_fragment" [label=ARG1]
	"card(2)" -> "_party_n_of-to" [label=ARG1]
	comp_equal -> _current_a_1 [label=ARG1]
	_can_v_modal -> _make_v_1 [label=ARG1]
	neg -> _can_v_modal [label=ARG1]
	_current_a_1 -> _compose_v_1 [label=ARG1]
	parg_d -> "named(LDP)" [label=ARG2]
}
