digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	_the_q -> _bill_n_of [label=BV]
	"_allow_v_1-fn.NF" -> pron [label="ARG1-fn.NotExist"]
	_without_p -> _become_v_id [label=ARG1]
	poss -> pron [label=ARG2]
	_a_q -> _amendment_n_of [label=BV]
	"_allow_v_1-fn.NF" -> _become_v_id [label="ARG3-fn.NotExist"]
	_without_p -> _signature_n_1 [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_can_v_modal -> _protect_v_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_would_v_modal -> "_allow_v_1-fn.NF" [label=ARG1]
	_become_v_id -> _law_n_1 [label=ARG2]
	udef_q -> _law_n_1 [label=BV]
	_protect_v_1 -> _flag_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	def_explicit_q -> _signature_n_1 [label=BV]
	proper_q -> "named(Bush)" [label=BV]
	_only_x_deg -> _a_q [label=ARG1]
	poss -> _signature_n_1 [label=ARG1]
	_become_v_id -> _bill_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_adequate_a_1 -> _protect_v_1 [label=ARG1]
	_constitutional_a_1 -> _amendment_n_of [label=ARG1]
	_protect_v_1 -> _amendment_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Bush)" [label="ARG1-fn.Agent"]
	"_allow_v_1-fn.NF" -> _bill_n_of [label="ARG2-fn.NotExist"]
	_because_x -> "_say_v_to-fn.IN" [label=ARG2]
	"_say_v_to-fn.IN" -> _can_v_modal [label="ARG2-fn.Topic"]
	_the_q -> _flag_n_1 [label=BV]
	compound -> "named(Bush)" [label=ARG1]
}
