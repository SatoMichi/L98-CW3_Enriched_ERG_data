digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Futures)" [label=BV]
	_in_p -> "_say_v_to-fn.IN" [label=ARG1]
	_the_q -> _violation_n_of [label=BV]
	udef_q -> _nature_n_1 [label=BV]
	proper_q -> "named(Capcom)" [label=BV]
	_cite_v_for -> _violation_n_of [label=ARG2]
	parg_d -> "_hurt_v_1-fn.Cause_harm" [label=ARG1]
	_the_q -> "named(Merc)" [label=BV]
	_a_q -> _statement_n_of [label=BV]
	_in_p -> _technical_a_1 [label=ARG1]
	_a_q -> _result_n_of [label=BV]
	compound -> "named(Merc)" [label=ARG2]
	parg_d -> _cite_v_for [label=ARG1]
	compound -> "named(Capcom)" [label=ARG2]
	_the_q -> _charge_n_of [label=BV]
	proper_q -> "named(Merc)" [label=BV]
	_as_p -> "_hurt_v_1-fn.Cause_harm" [label=ARG1]
	_in_p -> _nature_n_1 [label=ARG2]
	_as_p -> _result_n_of [label=ARG2]
	compound -> _charge_n_of [label=ARG1]
	"_hurt_v_1-fn.Cause_harm" -> _customer_n_of [label="ARG2-fn.Experiencer"]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	parg_d -> _violation_n_of [label=ARG2]
	"_admit_v_to-fn.IN" -> _charge_n_of [label="ARG2-fn.Theme"]
	_cite_v_for -> "named(Merc)" [label=ARG1]
	compound -> "named(Futures)" [label=ARG1]
	_while_x -> "_say_v_to-fn.IN" [label=ARG1]
	_in_p -> _statement_n_of [label=ARG2]
	_technical_a_1 -> _charge_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Futures)" [label="ARG1-fn.Agent"]
	_result_n_of -> _violation_n_of [label=ARG1]
	"_deny_v_to-fn.Statement" -> _charge_n_of [label="ARG2-fn.Predicate"]
	_while_x -> _nor_c [label=ARG2]
	_no_q -> _customer_n_of [label=BV]
	parg_d -> _customer_n_of [label=ARG2]
}
