digraph {
	node [shape=circle style=filled]
	_until_x_h -> "_give_v_out-fn.Cause_to_continue" [label=ARG2]
	"_can_v_modal-fn.Existence" -> _only_a_1 [label="ARG1-fn.Entity"]
	"_can_v_modal-fn.Existence" -> ellipsis_ref [label="ARG1-fn.Entity"]
	_the_q -> "named(Board)" [label=BV]
	compound -> _specialist_n_1 [label=ARG1]
	"_give_v_out-fn.Cause_to_continue" -> _voice_n_1 [label="ARG1-fn.Agent"]
	"_describe_v_as-fn.Cause_to_end" -> thing [label="ARG2-fn.Means"]
	_at_p -> _post_n_of [label=ARG2]
	_at_p -> _specialist_n_1 [label=ARG1]
	compound -> "named(Big)" [label=ARG2]
	which_q -> thing [label=BV]
	udef_q -> nominalization [label=BV]
	subord -> "_preside_v_over-fn.Amounting_to" [label=ARG1]
	def_explicit_q -> _voice_n_1 [label=BV]
	poss -> _post_n_of [label=ARG1]
	subord -> _and_c [label=ARG2]
	_yesterday_a_1 -> time_n [label=ARG1]
	def_explicit_q -> _post_n_of [label=BV]
	compound -> _post_n_of [label=ARG1]
	_until_x_h -> _yell_v_1 [label=ARG1]
	_financial_a_1 -> "_free-for-all_n_1" [label=ARG1]
	parg_d -> thing [label=ARG2]
	parg_d -> "_describe_v_as-fn.Cause_to_end" [label=ARG1]
	ellipsis_ref -> pron [label=ARG1]
	compound -> nominalization [label=ARG2]
	proper_q -> "named(UAL)" [label=BV]
	poss -> _voice_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_describe_v_as-fn.Cause_to_end" -> "_free-for-all_n_1" [label="ARG3-fn.Place"]
	poss -> pron [label=ARG2]
	"_preside_v_over-fn.Amounting_to" -> nominalization [label="ARG2-fn.Attribute"]
	nominalization -> "_can_v_modal-fn.Existence" [label=ARG1]
	compound -> "named(Jacobson)" [label=ARG1]
	udef_q -> _pizza_n_1 [label=BV]
	loc_nonsp -> _specialist_n_1 [label=ARG1]
	_when_x_subord -> "_can_v_modal-fn.Existence" [label=ARG2]
	proper_q -> "named(Big)" [label=BV]
	compound -> "named(UAL)" [label=ARG2]
	_the_q -> _specialist_n_1 [label=BV]
	proper_q -> "named(Benjamin)" [label=BV]
	"_munch_v_1-fn.Competition" -> _pizza_n_1 [label="ARG2-fn.Participant_2"]
	loc_nonsp -> time_n [label=ARG2]
	_only_a_1 -> "_describe_v_as-fn.Cause_to_end" [label=ARG1]
	_when_x_subord -> "_munch_v_1-fn.Competition" [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	compound -> "named(Benjamin)" [label=ARG2]
	compound -> "named(Board)" [label=ARG1]
	"_preside_v_over-fn.Amounting_to" -> _specialist_n_1 [label="ARG1-fn.Value"]
	proper_q -> "named(Jacobson)" [label=BV]
	_a_q -> "_free-for-all_n_1" [label=BV]
	nominalization -> _trade_v_1 [label=ARG1]
	"card(2)" -> _specialist_n_1 [label=ARG1]
	poss -> "named(Board)" [label=ARG2]
}
