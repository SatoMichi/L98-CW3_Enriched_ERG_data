digraph {
	node [shape=circle style=filled]
	compound -> "named(Betsy)" [label=ARG2]
	compound -> "named(Engelken)" [label=ARG1]
	compound -> "named(New)" [label=ARG2]
	"_different_a_than-from" -> pron [label=ARG1]
	_seem_v_to -> "_different_a_than-from" [label=ARG2]
	poss -> pron [label=ARG2]
	_when_x_subord -> subord [label=ARG2]
	proper_q -> "named(New)" [label=BV]
	poss -> "_home_n_of-n" [label=ARG1]
	"_stop_v_1-fn.Halt" -> pron [label="ARG1-fn.Agent"]
	_near_p -> "_home_n_of-n" [label=ARG2]
	_could_v_modal -> "_stop_v_1-fn.Halt" [label=ARG1]
	proper_q -> "named(Betsy)" [label=BV]
	_seem_v_to -> pron [label=ARG1]
	_when_x_subord -> _seem_v_to [label=ARG1]
	pronoun_q -> pron [label=BV]
	subord -> "_say_v_to-fn.IN" [label=ARG2]
	compound -> "named(Jersey)" [label=ARG1]
	proper_q -> "named(Engelken)" [label=BV]
	comp -> "_different_a_than-from" [label=ARG1]
	"_write_v_to-fn.Contacting" -> pron [label="ARG2-fn.Theme"]
	proper_q -> "named(Jersey)" [label=BV]
	def_explicit_q -> "_home_n_of-n" [label=BV]
	subord -> "_write_v_to-fn.Contacting" [label=ARG1]
	_near_p -> "_stop_v_1-fn.Halt" [label=ARG1]
	"_write_v_to-fn.Contacting" -> "named(Engelken)" [label="ARG1-fn.Agent"]
	compound -> "_home_n_of-n" [label=ARG1]
	"_say_v_to-fn.IN" -> _could_v_modal [label="ARG2-fn.Topic"]
}
