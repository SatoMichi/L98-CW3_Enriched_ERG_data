digraph {
	node [shape=circle style=filled]
	"ord(1)" -> generic_entity [label=ARG1]
	udef_q -> _specialty_n_1 [label=BV]
	"_say_v_to-fn.IN" -> eventuality [label="ARG2-fn.NotExist"]
	_of_p -> _inclusion_n_1 [label=ARG1]
	udef_q -> generic_entity [label=BV]
	_the_q -> "named(Federation)" [label=BV]
	_on_p -> _list_n_of [label=ARG2]
	proper_q -> "named(Business)" [label=BV]
	udef_q -> _state_n_of [label=BV]
	udef_q -> _care_n_1 [label=BV]
	focus_d -> generic_entity [label=ARG2]
	compound -> _state_n_of [label=ARG2]
	_of_p -> "named(Business)" [label=ARG2]
	_basic_a_1 -> _plan_n_1 [label=ARG1]
	compound -> _plan_n_1 [label=ARG1]
	udef_q -> _law_n_1 [label=BV]
	"_require_v_of-fn.NF" -> _inclusion_n_1 [label="ARG2-fn.Theme"]
	"_prohibit_v_1-fn.Prohibiting" -> generic_entity [label="ARG1-fn.Agent"]
	_of_p -> "named(Federation)" [label=ARG1]
	compound -> "named(National)" [label=ARG2]
	compound -> _item_n_of [label=ARG1]
	_list_n_of -> _priority_n_1 [label=ARG1]
	udef_q -> _item_n_of [label=BV]
	compound -> _health_n_1 [label=ARG2]
	eventuality -> "_prohibit_v_1-fn.Prohibiting" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Federation)" [label="ARG1-fn.Agent"]
	udef_q -> _plan_n_1 [label=BV]
	compound -> "named(Independent)" [label=ARG2]
	udef_q -> _health_n_1 [label=BV]
	_the_q -> _inclusion_n_1 [label=BV]
	_of_p -> _item_n_of [label=ARG2]
	compound -> "named(Business)" [label=ARG1]
	compound -> _specialty_n_1 [label=ARG2]
	"_such+as_p" -> _care_n_1 [label=ARG2]
	_psychiatric_a_1 -> _care_n_1 [label=ARG1]
	_on_p -> generic_entity [label=ARG1]
	_the_q -> _list_n_of [label=BV]
	proper_q -> "named(National)" [label=BV]
	"_prohibit_v_1-fn.Prohibiting" -> _law_n_1 [label="ARG2-fn.Theme"]
	compound -> _law_n_1 [label=ARG1]
	compound -> "named(Federation)" [label=ARG1]
	"_such+as_p" -> _item_n_of [label=ARG1]
	udef_q -> _priority_n_1 [label=BV]
	_in_p -> _inclusion_n_1 [label=ARG1]
	proper_q -> "named(Independent)" [label=BV]
	_in_p -> _plan_n_1 [label=ARG2]
	"_require_v_of-fn.NF" -> _law_n_1 [label="ARG1-fn.Pivot"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
