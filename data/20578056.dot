digraph {
	node [shape=circle style=filled]
	"_tell_v_1-fn.Telling" -> _executive_n_1 [label="ARG1-fn.NotExist"]
	"_deny_v_to-fn.Statement" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.Predicate"]
	_the_q -> _producer_n_of [label=BV]
	"_tell_v_1-fn.Telling" -> _producer_n_of [label="ARG2-fn.NotExist"]
	poss -> _contract_n_1 [label=ARG1]
	poss -> pron [label=ARG2]
	def_explicit_q -> _contract_n_1 [label=BV]
	_in_p -> _executive_n_1 [label=ARG1]
	_the_q -> _executive_n_1 [label=BV]
	"_deny_v_to-fn.Statement" -> _executive_n_1 [label="ARG1-fn.Agent"]
	compound -> _executive_n_1 [label=ARG1]
	_written_a_1 -> _contract_n_1 [label=ARG1]
	_ever_a_1 -> "_tell_v_1-fn.Telling" [label=ARG1]
	_in_p -> "_affidavits/nns_u_unknown" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_get_v_state-fn.IN" -> "_out+of_p" [label="ARG2-fn.NotExist"]
	def_explicit_q -> "_affidavits/nns_u_unknown" [label=BV]
	"_out+of_p" -> _contract_n_1 [label=ARG2]
	"_tell_v_1-fn.Telling" -> _could_v_modal [label="ARG3-fn.NotExist"]
	"_out+of_p" -> pron [label=ARG1]
	_could_v_modal -> "_get_v_state-fn.IN" [label=ARG1]
	proper_q -> "named(Warner)" [label=BV]
	poss -> "_affidavits/nns_u_unknown" [label=ARG1]
	compound -> "named(Warner)" [label=ARG2]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.Agent"]
}
