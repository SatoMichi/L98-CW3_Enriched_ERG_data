digraph {
	node [shape=circle style=filled]
	appos -> _jury_n_1 [label=ARG1]
	loc_nonsp -> _and_c [label=ARG1]
	udef_q -> nominalization [label=BV]
	_the_q -> "named_n(Senate)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Hastings)" [label="ARG1-fn.Dependent"]
	_yesterday_a_1 -> time_n [label=ARG1]
	focus_d -> loc_nonsp [label=ARG2]
	_guilty_a_of -> nominalization [label=ARG2]
	proper_q -> "named(Hastings)" [label=BV]
	udef_q -> _judge_n_of [label=BV]
	nominalization -> "_commit_v_to-fn.Cause_to_end" [label=ARG1]
	"_face_v_1-fn.Attempt_suasion" -> "named(Hastings)" [label="ARG1-fn.Content"]
	poss -> _jury_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_guilty_a_of -> pron [label=ARG1]
	poss -> pron [label=ARG2]
	_full_a_of -> "named_n(Senate)" [label=ARG1]
	appos -> "named_n(Senate)" [label=ARG2]
	neg -> _guilty_a_of [label=ARG1]
	proper_q -> "named(Alcee)" [label=BV]
	"_face_v_1-fn.Attempt_suasion" -> _jury_n_1 [label="ARG2-fn.Addressee"]
	compound -> "named(Alcee)" [label=ARG2]
	focus_d -> _and_c [label=ARG1]
	"_commit_v_to-fn.Cause_to_end" -> _crime_n_1 [label="ARG2-fn.Means"]
	def_explicit_q -> _jury_n_1 [label=BV]
	compound -> "named_n(Senate)" [label=ARG1]
	compound -> _judge_n_of [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	compound -> "named(Hastings)" [label=ARG1]
	_any_q -> _crime_n_1 [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	udef_q -> "named_n(US)" [label=BV]
	def_implicit_q -> time_n [label=BV]
}
