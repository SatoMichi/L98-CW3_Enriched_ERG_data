digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _profit_n_1 [label=BV]
	"_could_v_modal-fn.Cause_to_end" -> "_lock_v_in-fn.Motion_directional" [label="ARG1-fn.Process"]
	_with_p -> "named(American_Express)" [label=ARG2]
	compound -> _move_n_1 [label=ARG1]
	compound -> _investment_n_1 [label=ARG2]
	_for_p -> "_add_v_up-to-fn.Cause_to_end" [label=ARG1]
	_smart_a_1 -> _money_n_1 [label=ARG1]
	"_add_v_up-to-fn.Cause_to_end" -> _move_n_1 [label="ARG2-fn.Means"]
	_allright_a_for -> generic_entity [label=ARG1]
	neg -> "_add_v_up-to-fn.Cause_to_end" [label=ARG1]
	"_lock_v_in-fn.Motion_directional" -> "named(American_Express)" [label="ARG1-fn.Area"]
	_for_p -> pron [label=ARG2]
	pronoun_q -> pron [label=BV]
	_then_a_1 -> "_lock_v_in-fn.Motion_directional" [label=ARG1]
	poss -> pron [label=ARG2]
	_with_p -> _allright_a_for [label=ARG1]
	udef_q -> _money_n_1 [label=BV]
	poss -> _profit_n_1 [label=ARG1]
	"_lock_v_in-fn.Motion_directional" -> _profit_n_1 [label="ARG2-fn.Depictive"]
	compound -> _profit_n_1 [label=ARG1]
	compound -> _money_n_1 [label=ARG2]
	"_would_v_modal-fn.Cause_to_end" -> _allright_a_for [label="ARG1-fn.Process"]
	udef_q -> _investment_n_1 [label=BV]
	proper_q -> "named(American_Express)" [label=BV]
	_a_q -> _move_n_1 [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	"_add_v_up-to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
}
