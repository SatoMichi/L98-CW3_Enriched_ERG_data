digraph {
	node [shape=circle style=filled]
	"_say_v_1-fn.IN" -> _witness_n_1 [label="ARG1-fn.Agent"]
	proper_q -> "named(Lang)" [label=BV]
	compound -> "named(Lang)" [label=ARG1]
	proper_q -> "named(Laff)" [label=BV]
	parg_d -> "_kill_v_1-fn.Killing" [label=ARG1]
	_the_q -> _witness_n_1 [label=BV]
	_have_v_prd -> "named(Laff)" [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_when_x_subord -> "_ask_v_1-fn.Questioning" [label=ARG2]
	"_ask_v_1-fn.Questioning" -> _take_v_1 [label="ARG3-fn.Recipient"]
	_take_v_1 -> pron [label=ARG1]
	udef_q -> _step_n_1 [label=BV]
	_no_a_1 -> "_say_v_1-fn.IN" [label=ARG1]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Lorin)" [label=BV]
	compound -> "named(Lorin)" [label=ARG1]
	_again_a_1 -> "_say_v_1-fn.IN" [label=ARG1]
	_have_v_prd -> "_kill_v_1-fn.Killing" [label=ARG3]
	"_ask_v_1-fn.Questioning" -> "named(Lang)" [label="ARG1-fn.Agent"]
	_step_n_1 -> _have_v_prd [label=ARG1]
	_take_v_1 -> _step_n_1 [label=ARG2]
	_when_x_subord -> _no_a_1 [label=ARG1]
	"_kill_v_1-fn.Killing" -> "named(Laff)" [label="ARG2-fn.Patient"]
	compound -> "named(Laff)" [label=ARG1]
	parg_d -> "named(Laff)" [label=ARG2]
	"_ask_v_1-fn.Questioning" -> "named(Lorin)" [label="ARG2-fn.Topic"]
}
