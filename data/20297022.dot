digraph {
	node [shape=circle style=filled]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> "named(Levy)" [label="ARG1-fn.Agent"]
	"_feel_v_1-fn.Opinion" -> _can_v_modal [label="ARG2-fn.Theme"]
	compound -> _doctor_n_1 [label=ARG2]
	udef_q -> _surgery_n_1 [label=BV]
	_now_a_1 -> _with_p [label=ARG1]
	_the_q -> _university_n_of [label=BV]
	"_use_v_1-fn.IN" -> _device_n_1 [label="ARG2-fn.NotExist"]
	_university_n_of -> "named(Pittsburgh)" [label=ARG1]
	_yet_a_1 -> "_use_v_1-fn.IN" [label=ARG1]
	_in_p -> _surgery_n_1 [label=ARG2]
	"_use_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> _doctor_n_1 [label=BV]
	_with_p -> _university_n_of [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	focus_d -> _but_c [label=ARG2]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	_routine_a_1 -> "_use_v_1-fn.IN" [label=ARG1]
	_in_p -> "_use_v_1-fn.IN" [label=ARG1]
	compound -> "named(Levy)" [label=ARG1]
	"_get_v_state-fn.IN" -> _close_a_to [label="ARG2-fn.Patient"]
	_with_p -> "named(Levy)" [label=ARG1]
	"_feel_v_1-fn.Opinion" -> pron [label="ARG1-fn.Agent"]
	neg -> "_feel_v_1-fn.Opinion" [label=ARG1]
	_the_q -> _device_n_1 [label=BV]
	_can_v_modal -> "_use_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Pittsburgh)" [label=BV]
	proper_q -> "named(Levy)" [label=BV]
	_close_a_to -> pron [label=ARG1]
}
