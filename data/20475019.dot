digraph {
	node [shape=circle style=filled]
	_a_q -> _attorney_n_1 [label=BV]
	parg_d -> _expert_n_1 [label=ARG2]
	focus_d -> loc_nonsp [label=ARG2]
	def_explicit_q -> _committee_n_of [label=BV]
	_yesterday_a_1 -> time_n [label=ARG1]
	poss -> "named(Eastern)" [label=ARG2]
	_look_v_at -> _expert_n_1 [label=ARG1]
	"_comment_v_on-fn.Statement" -> _and_c [label="ARG2-fn.Topic"]
	_other_a_1 -> _choice_n_of [label=ARG1]
	poss -> _committee_n_of [label=ARG1]
	proper_q -> "named(Zweibel)" [label=BV]
	"_instruct_v_on-fn.NF" -> _expert_n_1 [label="ARG2-fn.Recipient"]
	parg_d -> "_ask_v_1-fn.Request" [label=ARG1]
	"_ask_v_1-fn.Request" -> pron [label="ARG2-fn.NotExist"]
	appos -> _attorney_n_1 [label=ARG2]
	_ever_a_1 -> "_instruct_v_on-fn.NF" [label=ARG1]
	ellipsis_ref -> pron [label=ARG1]
	_decline_v_1 -> "named(Zweibel)" [label=ARG1]
	appos -> "named(Zweibel)" [label=ARG1]
	loc_nonsp -> _decline_v_1 [label=ARG1]
	focus_d -> _decline_v_1 [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	proper_q -> "named(Joel)" [label=BV]
	proper_q -> "named(Eastern)" [label=BV]
	compound -> "named(Joel)" [label=ARG2]
	_the_q -> _expert_n_1 [label=BV]
	_decline_v_1 -> "_comment_v_on-fn.Statement" [label=ARG2]
	_for_p -> _committee_n_of [label=ARG2]
	"_instruct_v_on-fn.NF" -> _look_v_at [label="ARG3-fn.Topic"]
	_look_v_at -> _choice_n_of [label=ARG2]
	parg_d -> pron [label=ARG2]
	pronoun_q -> pron [label=BV]
	neg -> ellipsis_ref [label=ARG1]
	udef_q -> _choice_n_of [label=BV]
	parg_d -> "_instruct_v_on-fn.NF" [label=ARG1]
	nominalization -> "_instruct_v_on-fn.NF" [label=ARG1]
	"_comment_v_on-fn.Statement" -> "named(Zweibel)" [label="ARG1-fn.Agent"]
	_now_a_1 -> "_ask_v_1-fn.Request" [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> "named(Zweibel)" [label=ARG1]
	"_ask_v_1-fn.Request" -> neg [label="ARG3-fn.NotExist"]
	udef_q -> _creditor_n_1 [label=BV]
	compound -> _creditor_n_1 [label=ARG2]
	_for_p -> _attorney_n_1 [label=ARG1]
	compound -> _committee_n_of [label=ARG1]
	nominalization -> "_ask_v_1-fn.Request" [label=ARG1]
	udef_q -> _and_c [label=BV]
	def_implicit_q -> time_n [label=BV]
}
