digraph {
	node [shape=circle style=filled]
	udef_q -> _health_n_1 [label=BV]
	compound -> _chief_n_1 [label=ARG2]
	proper_q -> "named(James)" [label=BV]
	udef_q -> _science_n_1 [label=BV]
	_in_p -> _segment_n_1 [label=ARG2]
	udef_q -> _chairman_n_of [label=BV]
	poss -> "named(Corning)" [label=ARG2]
	compound -> _segment_n_1 [label=ARG1]
	udef_q -> _performance_n_1 [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	_strong_a_1 -> _performance_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> _performance_n_1 [label=ARG1]
	nominalization -> _operate_v_1 [label=ARG1]
	proper_q -> "named(Corning)" [label=BV]
	appos -> _and_c [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_continue_v_2-fn.State_continue" [label="ARG2-fn.Requirement"]
	udef_q -> _and_c [label=BV]
	"_continue_v_2-fn.State_continue" -> _strong_a_1 [label="ARG1-fn.Entity"]
	compound -> _and_c [label=ARG2]
	compound -> nominalization [label=ARG2]
	proper_q -> "named(R)" [label=BV]
	def_explicit_q -> _and_c [label=BV]
	appos -> "named(Houghton)" [label=ARG2]
	udef_q -> _executive_n_1 [label=BV]
	poss -> _and_c [label=ARG1]
	proper_q -> "named(Houghton)" [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _and_c [label="ARG1-fn.Dependent"]
	compound -> _officer_n_1 [label=ARG1]
	udef_q -> _officer_n_1 [label=BV]
	udef_q -> _telecommunications_n_1 [label=BV]
	_in_p -> _strong_a_1 [label=ARG1]
	_the_q -> _segment_n_1 [label=BV]
	compound -> "named(R)" [label=ARG1]
	compound -> "named(James)" [label=ARG2]
	compound -> "named(Houghton)" [label=ARG1]
	compound -> _executive_n_1 [label=ARG2]
}
