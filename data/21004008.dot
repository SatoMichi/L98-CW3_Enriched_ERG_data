digraph {
	node [shape=circle style=filled]
	_also_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(Motorola)" [label=BV]
	_the_q -> _problem_n_of [label=BV]
	"_bring_v_1-fn.Bringing" -> "_bear_v_on-fn.NF" [label="ARG3-fn.NotExist"]
	nominalization -> _manufacture_v_1 [label=ARG1]
	proper_q -> "named(IBM)" [label=BV]
	_the_q -> _expertise_n_1 [label=BV]
	_benefit_v_from -> _expertise_n_1 [label=ARG2]
	_can_v_modal -> "_bring_v_1-fn.Bringing" [label=ARG1]
	_benefit_v_from -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_involve_v_in-fn.NF" -> _problem_n_of [label="ARG2-fn.NotExist"]
	compound -> _semiconductor_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "named(IBM)" [label="ARG1-fn.Agent"]
	parg_d -> _problem_n_of [label=ARG2]
	"_involve_v_in-fn.NF" -> nominalization [label="ARG3-fn.NotExist"]
	udef_q -> _semiconductor_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	"_expect_v_1-fn.IN" -> _benefit_v_from [label="ARG2-fn.Theme"]
	"_bear_v_on-fn.NF" -> _problem_n_of [label="ARG2-fn.Stimulus"]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	"_bear_v_on-fn.NF" -> _expertise_n_1 [label="ARG1-fn.Experiencer"]
	_other_a_1 -> _company_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "_expect_v_1-fn.IN" [label="ARG2-fn.Topic"]
	"_bring_v_1-fn.Bringing" -> _expertise_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _company_n_of [label=BV]
	"_bring_v_1-fn.Bringing" -> _and_c [label="ARG1-fn.Instrument"]
	udef_q -> _and_c [label=BV]
	_difficult_a_for -> _problem_n_of [label=ARG1]
	compound -> nominalization [label=ARG1]
	parg_d -> "_involve_v_in-fn.NF" [label=ARG1]
}
