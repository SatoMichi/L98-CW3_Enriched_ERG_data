digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	compound -> "named(Holland)" [label=ARG1]
	compound -> "named(New)" [label=ARG2]
	proper_q -> "named(Brothers)" [label=BV]
	proper_q -> "named(New)" [label=BV]
	proper_q -> "named(Holland)" [label=BV]
	_run_v_1 -> "named(Holland)" [label=ARG1]
	_in_p -> "named(Management)" [label=ARG1]
	proper_q -> "named(Asset)" [label=BV]
	_a_q -> nominalization [label=BV]
	_be_v_id -> pron [label=ARG1]
	compound -> "named(Brothers)" [label=ARG1]
	proper_q -> "named(Michael)" [label=BV]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	nominalization -> _cleanse_v_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(York)" [label=ARG1]
	proper_q -> "named(Salomon)" [label=BV]
	_be_v_id -> nominalization [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Holland)" [label="ARG1-fn.Agent"]
	_run_v_1 -> "named(Management)" [label=ARG2]
	compound -> "named(Salomon)" [label=ARG2]
	_in_p -> "named(York)" [label=ARG2]
	_healthy_a_1 -> nominalization [label=ARG1]
	compound -> "named(Management)" [label=ARG1]
	proper_q -> "named(York)" [label=BV]
	compound -> "named(Michael)" [label=ARG2]
	proper_q -> "named(Management)" [label=BV]
	compound -> "named(Asset)" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
