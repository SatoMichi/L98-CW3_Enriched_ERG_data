digraph {
	node [shape=circle style=filled]
	_a_q -> _engineer_n_1 [label=BV]
	compound -> _bar_n_1 [label=ARG1]
	proper_q -> "named(Parker)" [label=BV]
	_for_p -> "_run_v_1-fn.IN" [label=ARG1]
	_a_q -> _number_n_of [label=BV]
	_vertical_a_1 -> "_run_v_1-fn.IN" [label=ARG1]
	_apparent_a_1 -> _lack_v_1 [label=ARG1]
	compound -> "named(Los)" [label=ARG2]
	_through_p -> pron [label=ARG2]
	proper_q -> "named(Los)" [label=BV]
	udef_q -> _tie_n_1 [label=BV]
	_the_q -> _column_n_of [label=BV]
	compound -> "named(Parker)" [label=ARG1]
	"_have_v_1-fn.IN" -> _pillar_n_of [label="ARG1-fn.Pivot"]
	udef_q -> _reinforcement_n_1 [label=BV]
	_long_a_1 -> _bar_n_1 [label=ARG1]
	"_run_v_1-fn.IN" -> _bar_n_1 [label="ARG1-fn.NotExist"]
	compound -> _tie_n_1 [label=ARG1]
	udef_q -> _bar_n_1 [label=BV]
	_lack_v_1 -> _number_n_of [label=ARG2]
	_the_q -> _pillar_n_of [label=BV]
	compound -> "named(Leo)" [label=ARG2]
	_through_p -> _column_n_of [label=ARG2]
	_number_n_of -> _tie_n_1 [label=ARG1]
	compound -> "named(Angeles)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_lack_v_1 -> pron [label=ARG1]
	appos -> "named(Parker)" [label=ARG1]
	"_say_v_to-fn.IN" -> _while_x [label="ARG2-fn.Topic"]
	_in_p -> "named(Angeles)" [label=ARG2]
	compound -> _metal_n_1 [label=ARG2]
	"_run_v_1-fn.IN" -> _tie_n_1 [label="ARG1-fn.NotExist"]
	"_have_v_1-fn.IN" -> _bar_n_1 [label="ARG2-fn.Theme"]
	_structural_a_1 -> _engineer_n_1 [label=ARG1]
	_while_x -> _apparent_a_1 [label=ARG1]
	_while_x -> "_have_v_1-fn.IN" [label=ARG2]
	udef_q -> _metal_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Parker)" [label="ARG1-fn.Agent"]
	_horizontal_a_1 -> "_run_v_1-fn.IN" [label=ARG1]
	_adequate_a_1 -> _number_n_of [label=ARG1]
	appos -> _engineer_n_1 [label=ARG2]
	proper_q -> "named(Leo)" [label=BV]
	proper_q -> "named(Angeles)" [label=BV]
	_through_p -> "_run_v_1-fn.IN" [label=ARG1]
	_for_p -> _reinforcement_n_1 [label=ARG2]
	focus_d -> _lack_v_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_in_p -> _engineer_n_1 [label=ARG1]
}
