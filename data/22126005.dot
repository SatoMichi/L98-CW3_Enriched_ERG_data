digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	poss -> _attorney_n_1 [label=ARG1]
	"_set_v_aside-fn.IN" -> _order_n_of [label="ARG2-fn.Theme"]
	compound -> _appeal_n_1 [label=ARG2]
	_expedite_v_1 -> _appeal_n_1 [label=ARG2]
	def_explicit_q -> _attorney_n_1 [label=BV]
	"_ask_v_1-fn.Request" -> "named(Justin)" [label="ARG1-fn.NotExist"]
	_temporary_a_1 -> "_set_v_aside-fn.IN" [label=ARG1]
	appos -> "named(Baxley)" [label=ARG2]
	parg_d -> _expedite_v_1 [label=ARG1]
	subord -> _pending_a_1 [label=ARG2]
	"_ask_v_1-fn.Request" -> subord [label="ARG3-fn.NotExist"]
	proper_q -> "named(Justin)" [label=BV]
	parg_d -> _appeal_n_1 [label=ARG2]
	compound -> "named(Baxley)" [label=ARG1]
	_the_q -> _order_n_of [label=BV]
	_pending_a_1 -> _appeal_n_1 [label=ARG2]
	proper_q -> "named(E)" [label=BV]
	subord -> "_set_v_aside-fn.IN" [label=ARG1]
	proper_q -> "named(Baxley)" [label=BV]
	"_set_v_aside-fn.IN" -> _court_n_of [label="ARG1-fn.Agent"]
	poss -> "named(Justin)" [label=ARG2]
	compound -> _court_n_of [label=ARG1]
	"_ask_v_1-fn.Request" -> _court_n_of [label="ARG2-fn.NotExist"]
	udef_q -> _appeal_n_1 [label=BV]
	_a_q -> _court_n_of [label=BV]
	proper_q -> "named(Charles)" [label=BV]
	compound -> "named(Charles)" [label=ARG2]
	compound -> "named(E)" [label=ARG1]
	appos -> _attorney_n_1 [label=ARG1]
	_a_q -> _appeal_n_1 [label=BV]
	_would_v_modal -> "_ask_v_1-fn.Request" [label=ARG1]
	"_say_v_to-fn.IN" -> _attorney_n_1 [label="ARG1-fn.Agent"]
}
