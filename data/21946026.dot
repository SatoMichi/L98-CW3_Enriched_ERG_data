digraph {
	node [shape=circle style=filled]
	_the_q -> _partnership_n_1 [label=BV]
	poss -> _division_n_of [label=ARG2]
	parg_d -> _ruling_n_1 [label=ARG2]
	_also_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	poss -> _ruling_n_1 [label=ARG1]
	parg_d -> _appeal_v_1 [label=ARG1]
	"_see_v_1-fn.Perception_experience" -> _appeal_v_1 [label="ARG2-fn.Stimulus"]
	def_explicit_q -> _ruling_n_1 [label=BV]
	"_appellate/jj_u_unknown" -> _division_n_of [label=ARG1]
	"_wait_v_1-fn.IN" -> "_see_v_1-fn.Perception_experience" [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "_wait_v_1-fn.IN" [label="ARG2-fn.NotExist"]
	"_wait_v_1-fn.IN" -> _partnership_n_1 [label="ARG1-fn.NotExist"]
	"_see_v_1-fn.Perception_experience" -> _partnership_n_1 [label="ARG1-fn.Experiencer"]
	_appeal_v_1 -> _ruling_n_1 [label=ARG2]
	_the_q -> _division_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	pronoun_q -> pron [label=BV]
}
