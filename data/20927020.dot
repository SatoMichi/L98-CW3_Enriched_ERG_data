digraph {
	node [shape=circle style=filled]
	"_found_v_1-fn.Competition" -> _store_n_1 [label="ARG2-fn.Participant_2"]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(New)" [label=ARG2]
	appos -> _store_n_1 [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	compound -> "named(Schwarz)" [label=ARG1]
	udef_q -> _tie_n_1 [label=BV]
	compound -> _toy_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(York)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_found_v_1-fn.Competition" -> _grandfather_n_of [label="ARG1-fn.Participant_1"]
	poss -> pron [label=ARG2]
	proper_q -> "named(F.A.O.)" [label=BV]
	udef_q -> _toy_n_1 [label=BV]
	"_have_v_1-fn.Competition" -> _tie_n_1 [label="ARG2-fn.Participant_2"]
	def_explicit_q -> _family_n_of [label=BV]
	_great_a_for -> _grandfather_n_of [label=ARG1]
	compound -> "named(F.A.O.)" [label=ARG2]
	appos -> "named(Schwarz)" [label=ARG2]
	"_no+longer_a_1" -> "_have_v_1-fn.Competition" [label=ARG1]
	_the_q -> _store_n_1 [label=BV]
	poss -> _family_n_of [label=ARG1]
	proper_q -> "named(Schwarz)" [label=BV]
	poss -> _grandfather_n_of [label=ARG1]
	compound -> _store_n_1 [label=ARG1]
	"_have_v_1-fn.Competition" -> _family_n_of [label="ARG1-fn.Participant_1"]
	def_explicit_q -> _grandfather_n_of [label=BV]
	_to_p -> _company_n_of [label=ARG2]
	compound -> "named(York)" [label=ARG1]
	_to_p -> _tie_n_1 [label=ARG1]
	_the_q -> _company_n_of [label=BV]
	poss -> "named(Schwarz)" [label=ARG2]
}
