digraph {
	node [shape=circle style=filled]
	udef_q -> _software_n_1 [label=BV]
	_in_p -> _computer_n_1 [label=ARG1]
	_today_a_1 -> time_n [label=ARG1]
	proper_q -> "named(Packard)" [label=BV]
	compound -> "named(Hewlett-)" [label=ARG2]
	"_allow_v_1-fn.IN" -> _computer_n_1 [label="ARG2-fn.NotExist"]
	udef_q -> _task_n_of [label=BV]
	_by_p_means -> nominalization [label=ARG2]
	compound -> _company_n_1 [label=ARG2]
	"_allow_v_1-fn.IN" -> _speed_v_up [label="ARG3-fn.NotExist"]
	compound -> _software_n_1 [label=ARG2]
	_in_p -> _network_n_of [label=ARG2]
	compound -> nominalization [label=ARG2]
	_the_q -> _task_n_of [label=BV]
	_speed_v_up -> _computer_n_1 [label=ARG1]
	udef_q -> _computer_n_1 [label=BV]
	nominalization -> "_send_v_1-fn.Sending" [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	proper_q -> "named(Hewlett-)" [label=BV]
	_a_q -> _network_n_of [label=BV]
	loc_nonsp -> "_announce_v_to-fn.Statement" [label=ARG1]
	_speed_v_up -> _task_n_of [label=ARG2]
	compound -> "named(Packard)" [label=ARG1]
	pronoun_q -> recip_pro [label=BV]
	"_announce_v_to-fn.Statement" -> _program_n_of [label="ARG2-fn.Topic"]
	nominalization -> _compute_v_1 [label=ARG1]
	_a_q -> _program_n_of [label=BV]
	"_send_v_1-fn.Sending" -> _to_p [label="ARG3-fn.Destination"]
	udef_q -> nominalization [label=BV]
	"_allow_v_1-fn.IN" -> _program_n_of [label="ARG1-fn.NotExist"]
	compound -> _task_n_of [label=ARG1]
	_by_p_means -> _speed_v_up [label=ARG1]
	_to_p -> _task_n_of [label=ARG1]
	compound -> _program_n_of [label=ARG1]
	"_announce_v_to-fn.Statement" -> "named(Packard)" [label="ARG1-fn.Agent"]
	"_send_v_1-fn.Sending" -> _task_n_of [label="ARG2-fn.Theme"]
	_to_p -> recip_pro [label=ARG2]
	udef_q -> _company_n_1 [label=BV]
	def_implicit_q -> time_n [label=BV]
}
