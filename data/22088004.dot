digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Newport)" [label=BV]
	compound -> _date_n_of [label=ARG1]
	_the_q -> _director_n_of [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	"_want_v_1-fn.State_continue" -> _director_n_of [label="ARG1-fn.Entity"]
	"_propose_v_to-fn.State_continue" -> _slate_n_of [label="ARG2-fn.State"]
	"card(4)" -> _director_n_of [label=ARG1]
	_a_q -> _slate_n_of [label=BV]
	_the_q -> _board_n_of [label=BV]
	poss -> _own_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	neg -> "_propose_v_to-fn.State_continue" [label=ARG1]
	udef_q -> _meeting_n_of [label=BV]
	_beyond_p -> "_serve_v_as-fn.Have_as_requirement" [label=ARG1]
	_the_q -> _date_n_of [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _and_c [label="ARG2-fn.Requirement"]
	_beyond_p -> _date_n_of [label=ARG2]
	def_explicit_q -> _own_n_1 [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> "named(Newport)" [label="ARG1-fn.Dependent"]
	compound -> _meeting_n_of [label=ARG2]
	_special_a_1 -> _meeting_n_of [label=ARG1]
	_current_a_1 -> _director_n_of [label=ARG1]
	neg -> "_want_v_1-fn.State_continue" [label=ARG1]
	"_serve_v_as-fn.Have_as_requirement" -> _director_n_of [label="ARG1-fn.Dependent"]
	_slate_n_of -> _own_n_1 [label=ARG1]
	"_want_v_1-fn.State_continue" -> "_serve_v_as-fn.Have_as_requirement" [label="ARG2-fn.State"]
	_other_a_1 -> _director_n_of [label=ARG1]
	"_propose_v_to-fn.State_continue" -> _board_n_of [label="ARG1-fn.Entity"]
	focus_d -> _and_c [label=ARG2]
}
