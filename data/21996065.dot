digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> "named(Durcan)" [label="ARG1-fn.Agent"]
	compound -> _manager_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	parg_d -> _lay_v_off [label=ARG1]
	_the_q -> _dump_n_1 [label=BV]
	def_explicit_q -> _office_n_of [label=BV]
	_the_q -> _problem_n_of [label=BV]
	poss -> "named(Wang)" [label=ARG2]
	appos -> "named(Durcan)" [label=ARG1]
	"_get_v_state-fn.IN" -> _down_p [label="ARG2-fn.Patient"]
	_if_x_then -> "_stop_v_prd-fn.Activity_stop" [label=ARG1]
	compound -> _office_n_of [label=ARG1]
	proper_q -> "named(Wang)" [label=BV]
	parg_d -> _manager_n_of [label=ARG2]
	proper_q -> "named(Durcan)" [label=BV]
	_in_p -> _office_n_of [label=ARG2]
	_lay_v_off -> _manager_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	udef_q -> _people_n_of [label=BV]
	compound -> "named(Mike)" [label=ARG2]
	_if_x_then -> "_get_v_state-fn.IN" [label=ARG2]
	compound -> _sale_n_of [label=ARG2]
	compound -> "named(Austin)" [label=ARG2]
	_in_p -> _manager_n_of [label=ARG1]
	proper_q -> "named(Mike)" [label=BV]
	poss -> _office_n_of [label=ARG1]
	_in_p -> "_get_v_state-fn.IN" [label=ARG1]
	_a_q -> _manager_n_of [label=BV]
	proper_q -> "named(Austin)" [label=BV]
	udef_q -> _sale_n_of [label=BV]
	"_get_v_state-fn.IN" -> _people_n_of [label="ARG1-fn.NotExist"]
	_down_p -> _people_n_of [label=ARG1]
	"_stop_v_prd-fn.Activity_stop" -> "_sell_v_1-fn.Commerce_sell" [label="ARG1-fn.Agent"]
	focus_d -> "_stop_v_prd-fn.Activity_stop" [label=ARG2]
	"_sell_v_1-fn.Commerce_sell" -> pron [label="ARG1-fn.Agent"]
	appos -> _manager_n_of [label=ARG2]
	_in_p -> _dump_n_1 [label=ARG2]
	compound -> "named(Durcan)" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	ellipsis_ref -> _problem_n_of [label=ARG1]
}
