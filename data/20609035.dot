digraph {
	node [shape=circle style=filled]
	"_call_v_1-fn.Referring_by_name" -> _president_n_of [label="ARG1-fn.Agent"]
	compound -> _line_n_of [label=ARG2]
	_the_q -> _congressman_n_1 [label=BV]
	_unless_x -> _shape_v_up [label=ARG2]
	"_have_v_1-fn.IN" -> _president_n_of [label="ARG1-fn.Pivot"]
	"_kill_v_1-fn.Killing" -> pron [label="ARG1-fn.Agent"]
	"_force_v_1-fn.NF" -> pron [label="ARG2-fn.Patient"]
	"_support_v_1-fn.Taking_sides" -> _initiative_n_1 [label="ARG2-fn.Stimulus"]
	_would_v_modal -> "_kill_v_1-fn.Killing" [label=ARG1]
	"_force_v_1-fn.NF" -> "_support_v_1-fn.Taking_sides" [label="ARG3-fn.Result"]
	compound -> "_policy_n_of-on" [label=ARG2]
	"_single-handedly_a_1" -> "_kill_v_1-fn.Killing" [label=ARG1]
	_on_p -> _shape_v_up [label=ARG1]
	"_have_v_1-fn.IN" -> _veto_n_1 [label="ARG2-fn.Theme"]
	"_declare_v_to-fn.Statement" -> _unless_x [label="ARG2-fn.Topic"]
	udef_q -> "_policy_n_of-on" [label=BV]
	_the_q -> _issue_n_1 [label=BV]
	_the_q -> _fund_n_1 [label=BV]
	_if_x_then -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _initiative_n_1 [label=ARG1]
	compound -> "named(Edwards)" [label=ARG1]
	_shape_v_up -> _congressman_n_1 [label=ARG1]
	_could_v_modal -> _and_c [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _item_n_of [label=ARG1]
	compound -> _representative_n_1 [label=ARG2]
	udef_q -> _item_n_of [label=BV]
	"_support_v_1-fn.Taking_sides" -> pron [label="ARG1-fn.Experiencer"]
	_controversial_a_1 -> _initiative_n_1 [label=ARG1]
	_on_p -> _issue_n_1 [label=ARG2]
	_foreign_a_1 -> "_policy_n_of-on" [label=ARG1]
	udef_q -> _line_n_of [label=BV]
	"_force_v_1-fn.NF" -> _president_n_of [label="ARG1-fn.Agent"]
	compound -> "named(Bart)" [label=ARG2]
	"_kill_v_1-fn.Killing" -> _fund_n_1 [label="ARG2-fn.Patient"]
	_the_q -> _president_n_of [label=BV]
	compound -> _issue_n_1 [label=ARG1]
	_a_q -> _president_n_of [label=BV]
	_a_q -> _initiative_n_1 [label=BV]
	udef_q -> _representative_n_1 [label=BV]
	_if_x_then -> _and_c [label=ARG2]
	"_want_v_1-fn.Desiring" -> _president_n_of [label="ARG1-fn.Pivot"]
	proper_q -> "named(Edwards)" [label=BV]
	_a_q -> _veto_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Edwards)" [label="ARG1-fn.Agent"]
	_unless_x -> _would_v_modal [label=ARG1]
	"_declare_v_to-fn.Statement" -> _president_n_of [label="ARG1-fn.Agent"]
	proper_q -> "named(Bart)" [label=BV]
	compound -> _veto_n_1 [label=ARG1]
	"_want_v_1-fn.Desiring" -> "_force_v_1-fn.NF" [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> _could_v_modal [label="ARG2-fn.NotExist"]
	compound -> _fund_n_1 [label=ARG1]
}
