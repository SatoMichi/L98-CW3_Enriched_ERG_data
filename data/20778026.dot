digraph {
	node [shape=circle style=filled]
	_the_q -> _lawyer_n_1 [label=BV]
	"_apply_v_2-fn.Competition" -> _government_n_of [label="ARG1-fn.Participant_1"]
	superl -> "_good_a_at-for-of" [label=ARG1]
	_broad_a_1 -> "_apply_v_2-fn.Competition" [label=ARG1]
	compound -> _asset_n_1 [label=ARG2]
	parg_d -> "_assure_v_of-fn.Grasp" [label=ARG1]
	_also_a_1 -> "_worry_v_about-fn.Needing" [label=ARG1]
	_unless_x -> "_assure_v_of-fn.Grasp" [label=ARG2]
	"_assure_v_of-fn.Grasp" -> pron [label="ARG2-fn.Phenomenon"]
	parg_d -> pron [label=ARG2]
	udef_q -> nominalization [label=BV]
	udef_q -> _case_n_of [label=BV]
	"_apply_v_2-fn.Competition" -> _law_n_1 [label="ARG2-fn.Participant_2"]
	udef_q -> _defense_n_1 [label=BV]
	udef_q -> _asset_n_1 [label=BV]
	"_assure_v_of-fn.Grasp" -> nominalization [label="ARG3-fn.Completeness"]
	"_take_v_1-fn.Competition" -> _case_n_of [label="ARG2-fn.Participant_2"]
	parg_d -> _pay_v_for [label=ARG1]
	pronoun_q -> pron [label=BV]
	_if_x_then -> _unless_x [label=ARG1]
	_if_x_then -> "_apply_v_2-fn.Competition" [label=ARG2]
	"_good_a_at-for-of" -> _lawyer_n_1 [label=ARG1]
	"_worry_v_about-fn.Needing" -> _if_x_then [label="ARG2-fn.Requirement"]
	_unwilling_a_1 -> "_take_v_1-fn.Competition" [label=ARG2]
	"_take_v_1-fn.Competition" -> _lawyer_n_1 [label="ARG1-fn.Participant_1"]
	_the_q -> _government_n_of [label=BV]
	udef_q -> "_forfeiture/nn_u_unknown" [label=BV]
	compound -> _lawyer_n_1 [label=ARG1]
	"_worry_v_about-fn.Needing" -> pron [label="ARG1-fn.Cognizer"]
	compound -> _law_n_1 [label=ARG1]
	compound -> _defense_n_1 [label=ARG2]
	_unless_x -> _unwilling_a_1 [label=ARG1]
	udef_q -> _law_n_1 [label=BV]
	_unwilling_a_1 -> _lawyer_n_1 [label=ARG1]
	compound -> "_forfeiture/nn_u_unknown" [label=ARG1]
	_criminal_a_1 -> _case_n_of [label=ARG1]
	nominalization -> _pay_v_for [label=ARG1]
}
