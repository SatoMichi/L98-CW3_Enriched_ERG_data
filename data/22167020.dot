digraph {
	node [shape=circle style=filled]
	neg -> _contemplate_v_1 [label=ARG1]
	udef_q -> _liability_n_1 [label=BV]
	proper_q -> "named(Alexander)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	parg_d -> "_ask_v_1-fn.Request" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_although_x -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(Alexander)" [label=ARG1]
	"_sign_v_1-fn.NF" -> "named(Alexander)" [label="ARG1-fn.Agent"]
	_from_p -> _liability_n_1 [label=ARG2]
	_contemplate_v_1 -> pron [label=ARG1]
	"_sign_v_1-fn.NF" -> _release_n_of [label="ARG2-fn.Destination"]
	_although_x -> neg [label=ARG2]
	_contemplate_v_1 -> "_deliver_v_to-fn.Delivery" [label=ARG2]
	parg_d -> "named(Alexander)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> "_ask_v_1-fn.Request" [label="ARG2-fn.Topic"]
	"_deliver_v_to-fn.Delivery" -> pron [label="ARG1-fn.Agent"]
	"_ask_v_1-fn.Request" -> "named(Alexander)" [label="ARG2-fn.NotExist"]
	_from_p -> _release_n_of [label=ARG1]
	_any_q -> _blow_n_1 [label=BV]
	"_ask_v_1-fn.Request" -> "_sign_v_1-fn.NF" [label="ARG3-fn.NotExist"]
	"_deliver_v_to-fn.Delivery" -> _blow_n_1 [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_a_q -> _release_n_of [label=BV]
	"_just+in+case_a_1" -> "_sign_v_1-fn.NF" [label=ARG1]
	_disable_v_1 -> _blow_n_1 [label=ARG1]
}
