digraph {
	node [shape=circle style=filled]
	compound -> "named(T)" [label=ARG1]
	proper_q -> "named(Kenyon)" [label=BV]
	_by_p -> _testimony_n_1 [label=ARG1]
	"_avoid_v_1-fn.Avoiding" -> "_infringement/nn_u_unknown" [label="ARG2-fn.Theme"]
	_in_p -> _effort_n_1 [label=ARG2]
	_of_p -> "named(Carr)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Crary)" [label="ARG1-fn.Agent"]
	proper_q -> "named(T)" [label=BV]
	_of_p -> _outset_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_of_p -> _and_c [label=ARG2]
	_the_q -> _project_n_1 [label=BV]
	poss -> _counsel_n_1 [label=ARG1]
	compound -> "named(Carr)" [label=ARG1]
	_from_p -> _outset_n_1 [label=ARG2]
	compound -> _patent_n_of [label=ARG2]
	_effort_n_1 -> "_avoid_v_1-fn.Avoiding" [label=ARG1]
	udef_q -> _patent_n_of [label=BV]
	proper_q -> "named(Kodak)" [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(Francis)" [label=ARG2]
	_from_p -> "_work_v_1-fn.IN" [label=ARG1]
	"_work_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	appos -> "named(Carr)" [label=ARG2]
	_the_q -> _outset_n_1 [label=BV]
	"_show_v_1-fn.IN" -> "_work_v_1-fn.IN" [label="ARG2-fn.NotExist"]
	compound -> _counsel_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "_show_v_1-fn.IN" [label="ARG2-fn.Topic"]
	udef_q -> "_infringement/nn_u_unknown" [label=BV]
	_a_q -> _effort_n_1 [label=BV]
	proper_q -> "named(Carr)" [label=BV]
	_by_p -> _counsel_n_1 [label=ARG2]
	poss -> "named(Kodak)" [label=ARG2]
	"_show_v_1-fn.IN" -> _testimony_n_1 [label="ARG1-fn.NotExist"]
	proper_q -> "named(Francis)" [label=BV]
	_continuous_a_1 -> "_work_v_1-fn.IN" [label=ARG1]
	appos -> _counsel_n_1 [label=ARG1]
	def_explicit_q -> _counsel_n_1 [label=BV]
	_in_p -> "_work_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Crary)" [label=BV]
	_of_p -> _project_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> "named(Crary)" [label=ARG1]
	_with_p -> "_work_v_1-fn.IN" [label=ARG1]
	_with_p -> "named(Kodak)" [label=ARG2]
	udef_q -> _testimony_n_1 [label=BV]
}
