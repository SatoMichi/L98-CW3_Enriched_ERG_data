digraph {
	node [shape=circle style=filled]
	_integrate_v_into -> _computer_n_1 [label=ARG2]
	compound -> "named(Keller)" [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	proper_q -> "named(Keller)" [label=BV]
	_can_v_modal -> _integrate_v_into [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_the_q -> _problem_n_of [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_a_q -> _operator_n_of [label=BV]
	"_occur_v_to-fn.Event" -> _problem_n_of [label="ARG1-fn.NotExist"]
	_if_x_then -> _could_v_modal [label=ARG1]
	parg_d -> _integrate_v_into [label=ARG1]
	udef_q -> _computer_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	comp_equal -> _soon_p [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> "named(Keller)" [label="ARG1-fn.Agent"]
	_could_v_modal -> "_alert_v_to-fn.NF" [label=ARG1]
	parg_d -> _computer_n_1 [label=ARG2]
	loc_nonsp -> "_alert_v_to-fn.NF" [label=ARG1]
	"_alert_v_to-fn.NF" -> _operator_n_of [label="ARG2-fn.Recipient"]
	comp_equal -> "_occur_v_to-fn.Event" [label=ARG2]
	_integrate_v_into -> _process_n_of [label=ARG3]
	_soon_p -> time_n [label=ARG1]
	_if_x_then -> _can_v_modal [label=ARG2]
	"_alert_v_to-fn.NF" -> pron [label="ARG1-fn.Agent"]
	_the_q -> _process_n_of [label=BV]
	def_implicit_q -> time_n [label=BV]
}
