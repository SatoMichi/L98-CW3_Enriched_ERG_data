digraph {
	node [shape=circle style=filled]
	_a_q -> _consultant_n_1 [label=BV]
	appos -> _and_c [label=ARG2]
	proper_q -> "named(Adler)" [label=BV]
	_in_p -> _and_c [label=ARG1]
	focus_d -> "_panic_v_1-fn.Activity_stop" [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	compound -> _consultant_n_1 [label=ARG1]
	udef_q -> _benefit_n_of [label=BV]
	udef_q -> _and_c [label=BV]
	compound -> "named(J)" [label=ARG2]
	compound -> _and_c [label=ARG2]
	_now_a_1 -> time_n [label=ARG1]
	compound -> "named(Johnston)" [label=ARG1]
	neg -> "_panic_v_1-fn.Activity_stop" [label=ARG1]
	pronoun_q -> pron [label=BV]
	loc_nonsp -> _consultant_n_1 [label=ARG1]
	proper_q -> "named(Grigsby)" [label=BV]
	_with_p -> _and_c [label=ARG2]
	compound -> "named(Bruce)" [label=ARG1]
	proper_q -> "named(Pittsburgh)" [label=BV]
	compound -> _executive_n_1 [label=ARG1]
	"_panic_v_1-fn.Activity_stop" -> pron [label="ARG1-fn.Purpose"]
	appos -> "named(Johnston)" [label=ARG1]
	proper_q -> "named(Cohen)" [label=BV]
	proper_q -> "named(Bruce)" [label=BV]
	_in_p -> "named(Pittsburgh)" [label=ARG2]
	udef_q -> _labor_n_1 [label=BV]
	compound -> "named(Cohen)" [label=ARG1]
	proper_q -> "named(Johnston)" [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	_with_p -> _consultant_n_1 [label=ARG1]
	proper_q -> "named(J)" [label=BV]
	compound -> "named(Adler)" [label=ARG2]
	_former_a_1 -> _executive_n_1 [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	proper_q -> "named(USX)" [label=BV]
	compound -> "named(USX)" [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Johnston)" [label="ARG1-fn.Dependent"]
	_a_q -> _executive_n_1 [label=BV]
}
