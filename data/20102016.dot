digraph {
	node [shape=circle style=filled]
	_easy_a_for -> nominalization [label=ARG1]
	"_get_v_state-fn.IN" -> _easy_a_for [label="ARG2-fn.Patient"]
	"_get_v_state-fn.IN" -> nominalization [label="ARG1-fn.NotExist"]
	_just_a_1 -> "_get_v_state-fn.IN" [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	focus_d -> ellipsis [label=ARG2]
	udef_q -> "_potables/nns_u_unknown" [label=BV]
	_the_q -> _maker_n_of [label=BV]
	"_port_v_1-fn.NF" -> "_potables/nns_u_unknown" [label="ARG2-fn.Theme"]
	"_claim_v_1-fn.Statement" -> ellipsis [label="ARG2-fn.Topic"]
	appos -> _maker_n_of [label=ARG2]
	_the_q -> "named(Tote)" [label=BV]
	proper_q -> "named(Scypher)" [label=BV]
	compound -> "named(Cup-)" [label=ARG2]
	udef_q -> _corporation_n_1 [label=BV]
	compound -> "named(Scypher)" [label=ARG1]
	comp -> _easy_a_for [label=ARG1]
	nominalization -> "_port_v_1-fn.NF" [label=ARG1]
	"_claim_v_1-fn.Statement" -> "named(Scypher)" [label="ARG1-fn.Agent"]
	compound -> "named(Tote)" [label=ARG1]
	proper_q -> "named(Cup-)" [label=BV]
	udef_q -> nominalization [label=BV]
	_maker_n_of -> "named(Tote)" [label=ARG1]
	appos -> "named(Scypher)" [label=ARG1]
	focus_d -> "_claim_v_1-fn.Statement" [label=ARG1]
}
