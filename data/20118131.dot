digraph {
	node [shape=circle style=filled]
	"_represent_v_1-fn.Achieving_first" -> _return_n_of [label="ARG2-fn.New_idea"]
	_thin_a_1 -> _return_n_of [label=ARG1]
	"_claim_v_1-fn.Change_of_quantity_of_possession" -> "_seek_v_1-fn.State_continue" [label="ARG2-fn.Possession"]
	"_less+than_p" -> _far_a_1 [label=ARG1]
	compound -> _objective_n_1 [label=ARG1]
	"_seek_v_1-fn.State_continue" -> thing [label="ARG2-fn.State"]
	"_less+than_p" -> nominalization [label=ARG2]
	poss -> _objective_n_1 [label=ARG1]
	udef_q -> _performance_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	"_represent_v_1-fn.Achieving_first" -> generic_entity [label="ARG1-fn.Cognizer"]
	which_q -> thing [label=BV]
	_far_a_1 -> _return_n_of [label=ARG1]
	_as_p -> _objective_n_1 [label=ARG2]
	def_explicit_q -> _objective_n_1 [label=BV]
	_as_p -> "_seek_v_1-fn.State_continue" [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	udef_q -> _stock_n_1 [label=BV]
	_very_x_deg -> _thin_a_1 [label=ARG1]
	_most_q -> _picker_n_1 [label=BV]
	compound -> _excess_n_1 [label=ARG2]
	nominalization -> "_claim_v_1-fn.Change_of_quantity_of_possession" [label=ARG1]
	compound -> _stock_n_1 [label=ARG2]
	compound -> _picker_n_1 [label=ARG1]
	compound -> _return_n_of [label=ARG1]
	udef_q -> _excess_n_1 [label=BV]
	_a_q -> _return_n_of [label=BV]
	_certain_a_1 -> _far_a_1 [label=ARG1]
	compound -> _performance_n_1 [label=ARG2]
	"_seek_v_1-fn.State_continue" -> _picker_n_1 [label="ARG1-fn.Entity"]
	_that_q_dem -> generic_entity [label=BV]
	_fundamental_a_1 -> _picker_n_1 [label=ARG1]
	"_claim_v_1-fn.Change_of_quantity_of_possession" -> _picker_n_1 [label="ARG1-fn.Owner"]
}
