digraph {
	node [shape=circle style=filled]
	"_break_v_cause-fn.Cause_to_end" -> _contract_n_1 [label="ARG2-fn.Means"]
	"_can_v_modal-fn.Existence" -> "_seek_v_1-fn.Competition" [label="ARG1-fn.Entity"]
	"_seek_v_1-fn.Competition" -> _dollar_n_1 [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> "named(Czechoslovakia)" [label="ARG1-fn.Process"]
	proper_q -> "mofy(May)" [label=BV]
	_if_x_then -> "_break_v_cause-fn.Cause_to_end" [label=ARG2]
	udef_q -> _dollar_n_1 [label=BV]
	udef_q -> "_twindam/nn_u_unknown" [label=BV]
	parg_d -> _contract_n_1 [label=ARG2]
	_from_p -> "_seek_v_1-fn.Competition" [label=ARG1]
	compound -> _contract_n_1 [label=ARG1]
	"card(1000000000)" -> _dollar_n_1 [label=ARG1]
	_if_x_then -> "_can_v_modal-fn.Existence" [label=ARG1]
	times -> "card(1000000000)" [label=ARG3]
	"_seek_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Czechoslovakia)" [label=BV]
	compound -> "_twindam/nn_u_unknown" [label=ARG2]
	parg_d -> "_break_v_cause-fn.Cause_to_end" [label=ARG1]
	_in_p_temp -> "mofy(May)" [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> _if_x_then [label="ARG2-fn.Means"]
	pronoun_q -> pron [label=BV]
	times -> "card(2)" [label=ARG2]
	_in_p_temp -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Hungary)" [label=BV]
	_from_p -> "named(Hungary)" [label=ARG2]
	_the_q -> _contract_n_1 [label=BV]
}
