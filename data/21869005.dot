digraph {
	node [shape=circle style=filled]
	_about_p -> "_talk_v_about-fn.IN" [label=ARG1]
	_also_a_1 -> "_want_v_1-fn.Desiring" [label=ARG1]
	"_add_v_to-fn.NF" -> "_expect_v_1-fn.IN" [label="ARG2-fn.Topic"]
	udef_q -> _gain_n_1 [label=BV]
	_cut_v_1 -> "named(Democrats)" [label=ARG1]
	_to_p -> "named(Democrats)" [label=ARG2]
	_about_p -> nominalization [label=ARG2]
	_the_q -> _tax_n_1 [label=BV]
	_to_p -> "_talk_v_about-fn.IN" [label=ARG1]
	"_talk_v_about-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_want_v_1-fn.Desiring" -> _cut_v_1 [label="ARG2-fn.Theme"]
	nominalization -> _draft_v_1 [label=ARG1]
	compound -> _tax_n_1 [label=ARG1]
	_joint_a_1 -> _proposal_n_1 [label=ARG1]
	"_want_v_1-fn.Desiring" -> "named(Democrats)" [label="ARG1-fn.Pivot"]
	pronoun_q -> pron [label=BV]
	compound -> _gain_n_1 [label=ARG2]
	_the_q -> "named(Democrats)" [label=BV]
	_draft_v_1 -> _proposal_n_1 [label=ARG2]
	"_expect_v_1-fn.IN" -> "_talk_v_about-fn.IN" [label="ARG2-fn.Theme"]
	"_add_v_to-fn.NF" -> pron [label="ARG1-fn.Agent"]
	udef_q -> nominalization [label=BV]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	_cut_v_1 -> _tax_n_1 [label=ARG2]
	_a_q -> _proposal_n_1 [label=BV]
}
