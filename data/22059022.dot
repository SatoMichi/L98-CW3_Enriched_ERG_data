digraph {
	node [shape=circle style=filled]
	focus_d -> "_have_v_1-fn.IN" [label=ARG1]
	_a_q -> _nose_n_1 [label=BV]
	poss -> pron [label=ARG2]
	compound -> "named(Bunny)" [label=ARG2]
	_well_a_1 -> "_have_v_1-fn.IN" [label=ARG1]
	"_have_v_1-fn.IN" -> _nose_n_1 [label="ARG2-fn.Theme"]
	_on_p -> nominalization [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	nominalization -> _hear_v_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Siegel)" [label=BV]
	def_explicit_q -> _source_n_of [label=BV]
	compound -> "named(Siegel)" [label=ARG1]
	proper_q -> "named(Freeman)" [label=BV]
	_be_v_id -> pron [label=ARG1]
	poss -> _bunny_n_1 [label=ARG1]
	_be_v_id -> "named(Lasker)" [label=ARG2]
	compound -> "named(Freeman)" [label=ARG1]
	"_respond_v_to-fn.Communication_response" -> _colon_p_namely [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	which_q -> person [label=BV]
	_be_v_id -> person [label=ARG2]
	_colon_p_namely -> "_have_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Bunny)" [label=BV]
	proper_q -> "named(Lasker)" [label=BV]
	udef_q -> nominalization [label=BV]
	"_ask_v_1-fn.Questioning" -> _be_v_id [label="ARG3-fn.Recipient"]
	"_ask_v_1-fn.Questioning" -> "named(Freeman)" [label="ARG2-fn.Topic"]
	"_have_v_1-fn.IN" -> _bunny_n_1 [label="ARG1-fn.Pivot"]
	"_good_a_at-for-of" -> _nose_n_1 [label=ARG1]
	"_respond_v_to-fn.Communication_response" -> "named(Siegel)" [label="ARG1-fn.Agent"]
	_be_v_id -> _source_n_of [label=ARG1]
	_on_p -> "_respond_v_to-fn.Communication_response" [label=ARG1]
	_hear_v_1 -> _be_v_id [label=ARG2]
	poss -> _source_n_of [label=ARG1]
	"_ask_v_1-fn.Questioning" -> "named(Siegel)" [label="ARG1-fn.Agent"]
	def_explicit_q -> _bunny_n_1 [label=BV]
	compound -> "named(Lasker)" [label=ARG1]
}
