digraph {
	node [shape=circle style=filled]
	compound -> _nv_n_1 [label=ARG2]
	parg_d -> _product_n_1 [label=ARG2]
	compound -> "named(Alcatel)" [label=ARG1]
	"card(2)" -> _rival_n_1 [label=ARG1]
	_of_p -> "named(Canada)" [label=ARG2]
	proper_q -> "named(Canada)" [label=BV]
	_the_q -> _marketplace_n_of [label=BV]
	_beat_v_to -> _rival_n_1 [label=ARG2]
	proper_q -> "named(France)" [label=BV]
	"_announce_v_to-fn.Statement" -> _and_c [label="ARG1-fn.Agent"]
	_base_v_1 -> _product_n_1 [label=ARG2]
	compound -> "named(Telecom)" [label=ARG1]
	udef_q -> _nv_n_1 [label=BV]
	udef_q -> "named(Sonet-)" [label=BV]
	proper_q -> "named(ATT)" [label=BV]
	appos -> _rival_n_1 [label=ARG1]
	_also_a_1 -> "_announce_v_to-fn.Statement" [label=ARG1]
	poss -> "named(France)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	compound -> _base_v_1 [label=ARG1]
	appos -> _and_c [label=ARG2]
	compound -> "named(Northern)" [label=ARG2]
	def_explicit_q -> "named(Alcatel)" [label=BV]
	_beat_v_to -> pron [label=ARG1]
	compound -> "named(Sonet-)" [label=ARG2]
	"_expect_v_1-fn.IN" -> _beat_v_to [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(ATT)" [label="ARG1-fn.Agent"]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	compound -> _ltd_n_1 [label=ARG2]
	poss -> "named(Alcatel)" [label=ARG1]
	udef_q -> _rival_n_1 [label=BV]
	udef_q -> _product_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_expect_v_1-fn.IN" [label="ARG2-fn.Topic"]
	parg_d -> _base_v_1 [label=ARG1]
	"_announce_v_to-fn.Statement" -> _product_n_1 [label="ARG2-fn.Topic"]
	proper_q -> "named(Telecom)" [label=BV]
	udef_q -> _and_c [label=BV]
	_of_p -> "named(Telecom)" [label=ARG1]
	udef_q -> _ltd_n_1 [label=BV]
	proper_q -> "named(Northern)" [label=BV]
	_beat_v_to -> _marketplace_n_of [label=ARG3]
}
