digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	"_unify_v_cause-fn.IN" -> _presence_n_1 [label="ARG2-fn.NotExist"]
	_in_p -> _presence_n_1 [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_in+order+to_x" -> "_work_v_1-fn.IN" [label=ARG1]
	poss -> _and_c [label=ARG2]
	_a_q -> _conference_n_of [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	def_implicit_q -> time_n [label=BV]
	compound -> _conference_n_of [label=ARG1]
	proper_q -> "named(A.J.C.)" [label=BV]
	_for_p -> reason [label=ARG2]
	_in_p -> "named(Europe)" [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Smith)" [label="ARG1-fn.Agent"]
	"_develop_v_cause-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_be_v_id -> generic_entity [label=ARG1]
	compound -> "named(A.J.C.)" [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	"_develop_v_cause-fn.IN" -> _presence_n_1 [label="ARG2-fn.Product"]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	poss -> _president_n_of [label=ARG1]
	which_q -> reason [label=BV]
	appos -> _president_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	nominalization -> "_in+order+to_x" [label=ARG1]
	"_work_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_in+order+to_x" -> "_develop_v_cause-fn.IN" [label=ARG2]
	_at_p -> _conference_n_of [label=ARG2]
	proper_q -> "named(McLennan)" [label=BV]
	def_explicit_q -> _president_n_of [label=BV]
	proper_q -> "named(Europe)" [label=BV]
	compound -> _news_n_of [label=ARG2]
	_at_p -> "_say_v_to-fn.IN" [label=ARG1]
	_hard_a_for -> "_work_v_1-fn.IN" [label=ARG1]
	_for_p -> "_work_v_1-fn.IN" [label=ARG1]
	_be_v_id -> nominalization [label=ARG2]
	compound -> "named(Smith)" [label=ARG1]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(London)" [label=ARG2]
	_a_q -> _presence_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	parg_d -> _presence_n_1 [label=ARG2]
	proper_q -> "named(London)" [label=BV]
	comp -> "_unify_v_cause-fn.IN" [label=ARG1]
	udef_q -> _news_n_of [label=BV]
	parg_d -> "_unify_v_cause-fn.IN" [label=ARG1]
	appos -> "named(Smith)" [label=ARG1]
	proper_q -> "named(Smith)" [label=BV]
	proper_q -> "named(Marsh)" [label=BV]
	udef_q -> _and_c [label=BV]
	_single_a_1 -> _presence_n_1 [label=ARG1]
}
