digraph {
	node [shape=circle style=filled]
	_just_x_deg -> "_in+order+to_x" [label=ARG1]
	"_make_v_i-fn.Causation" -> _sure_a_of [label="ARG2-fn.Theme"]
	compound -> "named(Engelken)" [label=ARG1]
	compound -> _family_n_of [label=ARG1]
	_get_v_state -> loc_nonsp [label=ARG2]
	poss -> pron [label=ARG2]
	parg_d -> _detail_n_1 [label=ARG2]
	"_in+order+to_x" -> _write_v_down [label=ARG1]
	poss -> _trip_n_of [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_up_p -> _trip_n_of [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _family_n_of [label=BV]
	def_implicit_q -> place_n [label=BV]
	parg_d -> _miss_v_1 [label=ARG1]
	_when_x_subord -> "_in+order+to_x" [label=ARG1]
	_from_p -> place_n [label=ARG1]
	_all_q -> generic_entity [label=BV]
	_sure_a_of -> _miss_v_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_in+order+to_x" -> "_make_v_i-fn.Causation" [label=ARG2]
	_from_p -> _trip_n_of [label=ARG2]
	_up_p -> place_n [label=ARG2]
	proper_q -> "named(Engelken)" [label=BV]
	loc_nonsp -> _family_n_of [label=ARG1]
	def_explicit_q -> _trip_n_of [label=BV]
	_sure_a_of -> "named(Engelken)" [label=ARG1]
	_when_x_subord -> _get_v_state [label=ARG2]
	_get_v_state -> _family_n_of [label=ARG1]
	"_make_v_i-fn.Causation" -> "named(Engelken)" [label="ARG1-fn.Agent"]
	id -> pron [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	_write_v_down -> pron [label=ARG2]
	_back_p -> place_n [label=ARG1]
	_no_q -> _detail_n_1 [label=BV]
	_north_a_1 -> place_n [label=ARG1]
	_write_v_down -> "named(Engelken)" [label=ARG1]
	id -> generic_entity [label=ARG2]
	_miss_v_1 -> _detail_n_1 [label=ARG2]
}
