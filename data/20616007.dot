digraph {
	node [shape=circle style=filled]
	compound -> _market_n_1 [label=ARG2]
	_with_p -> _competitor_n_1 [label=ARG2]
	focus_d -> _argue_v_with [label=ARG1]
	_argue_v_with -> _if_x_then [label=ARG2]
	compound -> _retail_n_1 [label=ARG2]
	"_turn_v_prd-fn.Undergo_change" -> _sour_a_1 [label="ARG2-fn.Patient"]
	_particularly_x_deg -> _if_x_then [label=ARG1]
	nominalization -> _catch_v_up [label=ARG1]
	_financial_a_1 -> _service_n_1 [label=ARG1]
	udef_q -> _market_n_1 [label=BV]
	_sour_a_1 -> _condition_n_1 [label=ARG1]
	focus_d -> nominalization [label=ARG2]
	_argue_v_with -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _condition_n_1 [label=BV]
	compound -> _banking_n_1 [label=ARG1]
	udef_q -> _service_n_1 [label=BV]
	compound -> _condition_n_1 [label=ARG1]
	_commercial_a_1 -> _competitor_n_1 [label=ARG1]
	_if_x_then -> "_turn_v_prd-fn.Undergo_change" [label=ARG2]
	"_turn_v_prd-fn.Undergo_change" -> _condition_n_1 [label="ARG1-fn.NotExist"]
	udef_q -> nominalization [label=BV]
	_difficult_a_for -> nominalization [label=ARG1]
	udef_q -> _retail_n_1 [label=BV]
	_if_x_then -> _difficult_a_for [label=ARG1]
	udef_q -> _competitor_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	udef_q -> _banking_n_1 [label=BV]
	_in_p -> _and_c [label=ARG2]
	_in_p -> _catch_v_up [label=ARG1]
}
