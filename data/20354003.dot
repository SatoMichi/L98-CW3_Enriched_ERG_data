digraph {
	node [shape=circle style=filled]
	_seek_v_1 -> _control_n_of [label=ARG2]
	_operate_v_1 -> "named(Avery)" [label=ARG1]
	"_say_v_to-fn.IN" -> "_intend_v_for-fn.Purpose" [label="ARG2-fn.Topic"]
	_in_p -> "_say_v_to-fn.IN" [label=ARG1]
	_a_q -> _loss_n_of [label=BV]
	udef_q -> _control_n_of [label=BV]
	_control_n_of -> _company_n_of [label=ARG1]
	compound -> _material_n_1 [label=ARG1]
	compound -> _coal_n_1 [label=ARG2]
	_in_p -> _material_n_1 [label=ARG2]
	udef_q -> _coal_n_1 [label=BV]
	compound -> _proxy_n_1 [label=ARG2]
	"_expect_v_1-fn.IN" -> "_sell_v_1-fn.Commerce_sell" [label="ARG2-fn.Theme"]
	"_sell_v_1-fn.Commerce_sell" -> _company_n_of [label="ARG2-fn.Theme"]
	"_continue_v_2-fn.Activity_ongoing" -> _operate_v_1 [label="ARG1-fn.NotExist"]
	"_intend_v_for-fn.Purpose" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> _proxy_n_1 [label=BV]
	compound -> _company_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_one+or+more_a_1" -> _company_n_of [label=ARG1]
	_at_p -> _loss_n_of [label=ARG2]
	_seek_v_1 -> pron [label=ARG1]
	_operate_v_1 -> _company_n_of [label=ARG2]
	"_intend_v_for-fn.Purpose" -> _seek_v_1 [label="ARG2-fn.NotExist"]
	_a_q -> _company_n_of [label=BV]
	proper_q -> "named(Avery)" [label=BV]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	"_sell_v_1-fn.Commerce_sell" -> pron [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "named(Avery)" [label="ARG1-fn.Agent"]
	udef_q -> _company_n_of [label=BV]
	udef_q -> _material_n_1 [label=BV]
	_at_p -> "_sell_v_1-fn.Commerce_sell" [label=ARG1]
}
