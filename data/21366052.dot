digraph {
	node [shape=circle style=filled]
	_in_p -> _interview_n_1 [label=ARG2]
	focus_d -> "_know_v_1-fn.IN" [label=ARG2]
	parg_d -> _do_v_1 [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	_a_q -> _lawyer_n_1 [label=BV]
	compound -> _telephone_n_1 [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	_in_p -> "_say_v_to-fn.IN" [label=ARG1]
	_be_v_id -> _lawyer_n_1 [label=ARG2]
	udef_q -> _telephone_n_1 [label=BV]
	_a_q -> _interview_n_1 [label=BV]
	_proper_a_1 -> _do_v_1 [label=ARG1]
	"_know_v_1-fn.IN" -> _do_v_1 [label="ARG2-fn.Theme"]
	"_know_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_be_v_id -> pron [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	"_say_v_to-fn.IN" -> _because_x [label="ARG2-fn.Topic"]
	parg_d -> pron [label=ARG2]
	_do_v_1 -> pron [label=ARG2]
	_because_x -> neg [label=ARG2]
	compound -> _interview_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	neg -> "_know_v_1-fn.IN" [label=ARG1]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	neg -> _be_v_id [label=ARG1]
	"_or+not_a_1" -> _do_v_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
