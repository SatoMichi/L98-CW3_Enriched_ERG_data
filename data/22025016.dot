digraph {
	node [shape=circle style=filled]
	compound -> "named(Channel)" [label=ARG1]
	proper_q -> "named(Disney)" [label=BV]
	parg_d -> _show_n_of [label=ARG2]
	udef_q -> _outlet_n_1 [label=BV]
	_in_p -> _show_n_of [label=ARG2]
	compound -> _outlet_n_1 [label=ARG1]
	compound -> _cable_n_1 [label=ARG2]
	"_such+as_p" -> _and_c [label=ARG2]
	udef_q -> _show_n_of [label=BV]
	udef_q -> _and_c [label=BV]
	"_such+as_p" -> _outlet_n_1 [label=ARG1]
	_the_q -> "named(Channel)" [label=BV]
	_a_q -> _surge_n_1 [label=BV]
	_from_p -> _outlet_n_1 [label=ARG2]
	_childrens_a_1 -> _show_n_of [label=ARG1]
	compound -> _show_n_of [label=ARG2]
	_from_p -> _competition_n_1 [label=ARG1]
	proper_q -> "named(Nickelodeon)" [label=BV]
	compound -> "named(Disney)" [label=ARG2]
	_in_p -> _surge_n_1 [label=ARG1]
	_to_p -> _station_n_1 [label=ARG2]
	udef_q -> _station_n_1 [label=BV]
	_to_p -> _surge_n_1 [label=ARG1]
	parg_d -> "_syndicate_v_1-fn.Competition" [label=ARG1]
	udef_q -> "_as+well+as_c" [label=BV]
	_for_p -> _kid_n_1 [label=ARG2]
	_for_p -> "_videocassettes/nns_u_unknown" [label=ARG1]
	udef_q -> "_videocassettes/nns_u_unknown" [label=BV]
	_independent_a_of -> _station_n_1 [label=ARG1]
	_from_p -> "_videocassettes/nns_u_unknown" [label=ARG2]
	"_be_v_there-fn.Cause_to_end" -> "_as+well+as_c" [label="ARG1-fn.Process"]
	udef_q -> _cable_n_1 [label=BV]
	udef_q -> _competition_n_1 [label=BV]
	"_syndicate_v_1-fn.Competition" -> _show_n_of [label="ARG2-fn.Participant_2"]
	udef_q -> _kid_n_1 [label=BV]
}
