digraph {
	node [shape=circle style=filled]
	times -> "card(5)" [label=ARG2]
	udef_q -> "named_n(House)" [label=BV]
	compound -> _program_n_of [label=ARG2]
	_be_v_there -> _increase_n_1 [label=ARG1]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	_a_q -> _increase_n_1 [label=BV]
	_a_q -> _cut_n_1 [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	"_say_v_to-fn.IN" -> "named(Smith)" [label="ARG1-fn.Agent"]
	_be_v_there -> _cut_n_1 [label=ARG1]
	udef_q -> _program_n_of [label=BV]
	_for_p -> _and_c [label=ARG2]
	udef_q -> _debate_n_1 [label=BV]
	udef_q -> "named(Iowa)" [label=BV]
	_do_v_1 -> generic_entity [label=ARG2]
	parenthetical -> "named(Iowa)" [label=ARG2]
	_the_q -> "named(FTC)" [label=BV]
	_during_p -> "_say_v_to-fn.IN" [label=ARG1]
	focus_d -> _but_c [label=ARG2]
	compound -> _debate_n_1 [label=ARG1]
	_each_p -> _increase_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _representative_n_1 [label=ARG2]
	_do_v_1 -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> _when_x_subord [label="ARG2-fn.Topic"]
	proper_q -> "named(Justice)" [label=BV]
	times -> "card(1000000)" [label=ARG3]
	compound -> "named(Justice)" [label=ARG2]
	compound -> "named(Neal)" [label=ARG2]
	parenthetical -> "named(Smith)" [label=ARG1]
	compound -> "named(Smith)" [label=ARG1]
	_of_p -> _increase_n_1 [label=ARG1]
	_the_q -> "named(Department)" [label=BV]
	"_in+fact_a_1" -> _be_v_there [label=ARG1]
	compound -> "named(D)" [label=ARG2]
	compound -> "named_n(House)" [label=ARG2]
	udef_q -> _representative_n_1 [label=BV]
	_for_p -> _increase_n_1 [label=ARG1]
	proper_q -> "named(D)" [label=BV]
	compound -> _increase_n_1 [label=ARG1]
	neg -> _be_v_there [label=ARG1]
	_when_x_subord -> _but_c [label=ARG1]
	_of_p -> _dollar_n_1 [label=ARG2]
	udef_q -> _dollar_n_1 [label=BV]
	compound -> "named(Department)" [label=ARG1]
	proper_q -> "named(Neal)" [label=BV]
	compound -> "named(Iowa)" [label=ARG1]
	proper_q -> "named(Smith)" [label=BV]
	_during_p -> _debate_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	_when_x_subord -> _do_v_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
