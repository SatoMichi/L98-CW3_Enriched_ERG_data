digraph {
	node [shape=circle style=filled]
	_at_p -> _school_n_1 [label=ARG2]
	udef_q -> _ethics_n_1 [label=BV]
	compound -> "named(New)" [label=ARG2]
	appos -> _expert_n_1 [label=ARG2]
	_legal_a_1 -> _ethics_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Gillers)" [label="ARG1-fn.Agent"]
	compound -> _school_n_1 [label=ARG1]
	proper_q -> "named(New)" [label=BV]
	compound -> "named(University)" [label=ARG1]
	compound -> "named(Gillers)" [label=ARG1]
	neg -> _may_v_modal [label=ARG1]
	"_articulate_v_1-fn.Expressing_publicly" -> pron [label="ARG2-fn.Topic"]
	appos -> "named(Gillers)" [label=ARG1]
	compound -> _ethics_n_1 [label=ARG2]
	udef_q -> _law_n_1 [label=BV]
	focus_d -> _but_c [label=ARG2]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	_do_v_1 -> pron [label=ARG2]
	_all_q -> generic_entity [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(York)" [label=ARG1]
	_at_p -> _expert_n_1 [label=ARG1]
	compound -> _expert_n_1 [label=ARG1]
	_a_q -> _expert_n_1 [label=BV]
	id -> pron [label=ARG1]
	compound -> _law_n_1 [label=ARG2]
	_able_a_1 -> "_articulate_v_1-fn.Expressing_publicly" [label=ARG2]
	proper_q -> "named(Gillers)" [label=BV]
	id -> generic_entity [label=ARG2]
	_able_a_1 -> pron [label=ARG1]
	proper_q -> "named(Stephen)" [label=BV]
	_may_v_modal -> _able_a_1 [label=ARG1]
	udef_q -> _school_n_1 [label=BV]
	proper_q -> "named(York)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(Stephen)" [label=ARG2]
	proper_q -> "named(University)" [label=BV]
}
