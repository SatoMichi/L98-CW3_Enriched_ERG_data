digraph {
	node [shape=circle style=filled]
	compound -> "named(Miller)" [label=ARG1]
	proper_q -> "named(Miller)" [label=BV]
	compound -> _chief_n_1 [label=ARG2]
	def_explicit_q -> _officer_n_1 [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	_the_q -> _incentive_n_to [label=BV]
	udef_q -> _second_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	proper_q -> "named(GM)" [label=BV]
	_heavy_a_1 -> _incentive_n_to [label=ARG1]
	"_have_v_1-fn.State_continue" -> "named(GM)" [label="ARG1-fn.Entity"]
	poss -> "named(Chrysler)" [label=ARG2]
	superl -> _heavy_a_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> _probable_a_1 [label="ARG2-fn.Requirement"]
	_financial_a_1 -> _officer_n_1 [label=ARG1]
	compound -> "named(Robert)" [label=ARG2]
	compound -> _officer_n_1 [label=ARG1]
	compound -> _second_n_1 [label=ARG1]
	focus_d -> "_have_v_1-fn.State_continue" [label=ARG2]
	poss -> _officer_n_1 [label=ARG1]
	appos -> "named(Miller)" [label=ARG1]
	proper_q -> "named(Robert)" [label=BV]
	"_have_v_1-fn.State_continue" -> _incentive_n_to [label="ARG2-fn.State"]
	appos -> _officer_n_1 [label=ARG2]
	_probable_a_1 -> "_have_v_1-fn.State_continue" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Miller)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Chrysler)" [label=BV]
}
