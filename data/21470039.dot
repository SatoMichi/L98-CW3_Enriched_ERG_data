digraph {
	node [shape=circle style=filled]
	_away_p -> _kid_n_1 [label=ARG1]
	_from_p -> _criminal_n_1 [label=ARG2]
	"_need_v_1-fn.Required_event" -> pron [label="ARG1-fn.Pivot"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_need_v_1-fn.Required_event" -> "_get_v_state-fn.IN" [label="ARG2-fn.Theme"]
	"_get_v_state-fn.IN" -> _away_p [label="ARG3-fn.NotExist"]
	comp_less -> "_traumatic/jj_u_unknown" [label=ARG1]
	_from_p -> _away_p [label=ARG1]
	focus_d -> "_need_v_1-fn.Required_event" [label=ARG2]
	pronoun_q -> pron [label=BV]
	_into_p -> "_get_v_state-fn.IN" [label=ARG1]
	_the_q -> _criminal_n_1 [label=BV]
	"_traumatic/jj_u_unknown" -> _environment_n_1 [label=ARG1]
	_the_q -> _kid_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_need_v_1-fn.Required_event" [label="ARG2-fn.Topic"]
	"_say_v_to-fn.IN" -> "named(Edelman)" [label="ARG1-fn.Agent"]
	_into_p -> _environment_n_1 [label=ARG2]
	"_get_v_state-fn.IN" -> _kid_n_1 [label="ARG2-fn.Patient"]
	_a_q -> _environment_n_1 [label=BV]
	compound -> "named(Edelman)" [label=ARG1]
	proper_q -> "named(Edelman)" [label=BV]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.Agent"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
