digraph {
	node [shape=circle style=filled]
	_new_a_1 -> "_breed_n_of-n" [label=ARG1]
	proper_q -> "named(New+Jersey)" [label=BV]
	_general_a_1 -> _public_n_1 [label=ARG1]
	"_no+doubt_a_1" -> "_be_v_id-fn.Residence" [label=ARG1]
	def_explicit_q -> _experience_n_with [label=BV]
	"_breed_n_of-n" -> _administrator_n_of [label=ARG1]
	"ord(1)" -> _experience_n_with [label=ARG1]
	proper_q -> "named(Patterson)" [label=BV]
	compound -> "named(Joe)" [label=ARG2]
	compound -> "named(New+Jersey)" [label=ARG1]
	udef_q -> _principal_n_1 [label=BV]
	"_be_v_id-fn.Residence" -> "named(Clark)" [label="ARG1-fn.Resident"]
	udef_q -> _nonsense_n_1 [label=BV]
	compound -> "named(Patterson)" [label=ARG2]
	_former_a_1 -> _principal_n_1 [label=ARG1]
	compound -> "named(Clark)" [label=ARG1]
	proper_q -> "named(Joe)" [label=BV]
	_no_a_1 -> _nonsense_n_1 [label=ARG1]
	"_be_v_id-fn.Residence" -> _experience_n_with [label="ARG2-fn.Location"]
	poss -> _experience_n_with [label=ARG1]
	poss -> _public_n_1 [label=ARG2]
	_the_q -> _public_n_1 [label=BV]
	_experience_n_with -> "_breed_n_of-n" [label=ARG1]
	compound -> _administrator_n_of [label=ARG1]
	_this_q_dem -> "_breed_n_of-n" [label=BV]
	proper_q -> "named(Clark)" [label=BV]
	compound -> _principal_n_1 [label=ARG1]
	udef_q -> _administrator_n_of [label=BV]
	compound -> _nonsense_n_1 [label=ARG2]
}
