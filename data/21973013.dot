digraph {
	node [shape=circle style=filled]
	_while_x -> "_look_v_seem-to-fn.Needing" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_look_v_seem-to-fn.Needing" -> neg [label="ARG1-fn.Cognizer"]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	neg -> "_make_v_1-fn.Competition" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_make_v_1-fn.Competition" -> _company_n_of [label="ARG1-fn.Participant_1"]
	"_say_v_to-fn.Cause_to_end" -> "named(Maxwell)" [label="ARG1-fn.Process"]
	_definite_a_1 -> _statement_n_of [label=ARG1]
	focus_d -> "_look_v_seem-to-fn.Needing" [label=ARG2]
	_soon_p -> time_n [label=ARG1]
	compound -> "named(Maxwell)" [label=ARG1]
	proper_q -> "named(Maxwell)" [label=BV]
	"_make_v_1-fn.Competition" -> _statement_n_of [label="ARG2-fn.Participant_2"]
	_while_x -> neg [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> _while_x [label="ARG2-fn.Means"]
	loc_nonsp -> time_n [label=ARG2]
	neg -> "_going+to_v_qmodal" [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	_any_q -> time_n [label=BV]
	_the_q -> _company_n_of [label=BV]
	loc_nonsp -> generic_entity [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	_a_q -> _statement_n_of [label=BV]
	_now_a_1 -> "_look_v_seem-to-fn.Needing" [label=ARG1]
	"_going+to_v_qmodal" -> loc_nonsp [label="ARG1-fn.Process"]
}
