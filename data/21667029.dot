digraph {
	node [shape=circle style=filled]
	_in_p -> _world_n_of [label=ARG2]
	_reinforce_v_1 -> _column_n_of [label=ARG2]
	"_know_v_of-fn.IN" -> _technology_n_1 [label="ARG2-fn.NotExist"]
	"_allow_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	_the_q -> _column_n_of [label=BV]
	"_say_v_to-fn.IN" -> _colon_p_namely [label="ARG2-fn.Topic"]
	"_allow_v_1-fn.IN" -> _technology_n_1 [label="ARG1-fn.NotExist"]
	_no_q -> _technology_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	"_know_v_of-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_allow_v_1-fn.IN" -> _reinforce_v_1 [label="ARG3-fn.NotExist"]
	"_exist_v_1-fn.Existence" -> _technology_n_1 [label="ARG1-fn.NotExist"]
	_colon_p_namely -> "_know_v_of-fn.IN" [label=ARG1]
	_would_v_modal -> "_allow_v_1-fn.IN" [label=ARG1]
	_reinforce_v_1 -> pron [label=ARG1]
	_in_p -> place_n [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	loc_nonsp -> place_n [label=ARG2]
	loc_nonsp -> "_exist_v_1-fn.Existence" [label=ARG1]
	_the_q -> _world_n_of [label=BV]
	_any_q -> place_n [label=BV]
}
