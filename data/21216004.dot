digraph {
	node [shape=circle style=filled]
	udef_q -> _people_n_of [label=BV]
	comp_equal -> _people_n_of [label=ARG2]
	_in_p -> "named(Berlin)" [label=ARG2]
	compound -> "named(East)" [label=ARG2]
	_in_p -> "_march_v_1-fn.Fining" [label=ARG1]
	_after_p -> "_march_v_1-fn.Fining" [label=ARG1]
	"_protest_v_1-fn.Judgment" -> "_election_n_of-for" [label="ARG2-fn.Evaluee"]
	def_explicit_q -> "_election_n_of-for" [label=BV]
	compound -> "named(Berlin)" [label=ARG1]
	proper_q -> "named(East)" [label=BV]
	udef_q -> generic_entity [label=BV]
	"_in+order+to_x" -> "_march_v_1-fn.Fining" [label=ARG1]
	"_march_v_1-fn.Fining" -> generic_entity [label="ARG1-fn.Speaker"]
	pronoun_q -> pron [label=BV]
	comp_equal -> "much-many_a" [label=ARG1]
	poss -> pron [label=ARG2]
	"card(12,000)" -> _people_n_of [label=ARG1]
	"much-many_a" -> generic_entity [label=ARG1]
	poss -> "_election_n_of-for" [label=ARG1]
	"_in+order+to_x" -> "_protest_v_1-fn.Judgment" [label=ARG2]
	proper_q -> "named(Berlin)" [label=BV]
	_after_p -> _speech_n_1 [label=ARG2]
	_the_q -> _speech_n_1 [label=BV]
	"_protest_v_1-fn.Judgment" -> generic_entity [label="ARG1-fn.Cognizer"]
}
