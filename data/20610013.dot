digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Cheerios)" [label=BV]
	def_explicit_q -> _line_n_of [label=BV]
	parg_d -> _line_n_of [label=ARG2]
	udef_q -> _oats_n_1 [label=BV]
	_normal_a_1 -> "_go_v_1-fn.Halt" [label=ARG1]
	proper_q -> "named(Maguire)" [label=BV]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	udef_q -> _analyst_n_1 [label=BV]
	parg_d -> "_base_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	proper_q -> "named(Merrill)" [label=BV]
	proper_q -> "named(William)" [label=BV]
	_away_p -> "_eat_v_1-fn.Competition" [label=ARG1]
	_simple_a_1 -> "_eat_v_1-fn.Competition" [label=ARG1]
	compound -> _nut_n_1 [label=ARG1]
	proper_q -> "named(Kellogg)" [label=BV]
	compound -> _corn_n_1 [label=ARG2]
	parg_d -> pron [label=ARG2]
	"_go_v_1-fn.Halt" -> _sale_n_of [label="ARG1-fn.Purpose"]
	"_make_v_of-fn.State_continue" -> pron [label="ARG2-fn.State"]
	udef_q -> _sale_n_of [label=BV]
	udef_q -> _and_c [label=BV]
	udef_q -> _nut_n_1 [label=BV]
	_because_x -> "_eat_v_1-fn.Competition" [label=ARG1]
	_to_p -> _line_n_of [label=ARG2]
	proper_q -> "named(Honey)" [label=BV]
	"_base_v_1-fn.Change_position_on_a_scale" -> _line_n_of [label="ARG2-fn.Item"]
	pronoun_q -> pron [label=BV]
	"_eat_v_1-fn.Competition" -> _sale_n_of [label="ARG2-fn.Participant_2"]
	parg_d -> "_make_v_of-fn.State_continue" [label=ARG1]
	compound -> _analyst_n_1 [label=ARG1]
	compound -> _food_n_1 [label=ARG2]
	udef_q -> _corn_n_1 [label=BV]
	udef_q -> _food_n_1 [label=BV]
	poss -> _line_n_of [label=ARG1]
	compound -> "named(William)" [label=ARG2]
	udef_q -> "named(Cheerios)" [label=BV]
	proper_q -> "named(Lynch)" [label=BV]
	compound -> "_base_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	compound -> "named(Honey)" [label=ARG2]
	compound -> "named(Lynch)" [label=ARG1]
	focus_d -> "_eat_v_1-fn.Competition" [label=ARG2]
	"_make_v_of-fn.State_continue" -> _oats_n_1 [label="ARG3-fn.Time"]
	"_eat_v_1-fn.Competition" -> _and_c [label="ARG1-fn.Participant_1"]
	poss -> "named(Kellogg)" [label=ARG2]
	_because_x -> "_make_v_of-fn.State_continue" [label=ARG2]
	"_say_v_to-fn.Taking" -> _because_x [label="ARG2-fn.Theme"]
	compound -> "named(Cheerios)" [label=ARG1]
	_to_p -> "_go_v_1-fn.Halt" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Maguire)" [label="ARG1-fn.Agent"]
	compound -> "named(Merrill)" [label=ARG2]
	compound -> "named(Maguire)" [label=ARG1]
}
