digraph {
	node [shape=circle style=filled]
	_for_p -> _push_v_1 [label=ARG1]
	_push_v_1 -> _group_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	_removal_n_of -> _director_n_of [label=ARG1]
	def_explicit_q -> _group_n_of [label=BV]
	proper_q -> "named(Sugarman)" [label=BV]
	udef_q -> _control_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_control_n_of -> _company_n_of [label=ARG1]
	_the_q -> "_lawsuit/nn_u_unknown" [label=BV]
	compound -> "named(Sugarman)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_for_p -> _and_c [label=ARG2]
	poss -> _group_n_of [label=ARG1]
	"_continue_v_2-fn.Activity_ongoing" -> _push_v_1 [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> "_continue_v_2-fn.Activity_ongoing" [label="ARG2-fn.Topic"]
	_the_q -> _company_n_of [label=BV]
	"_call_v_1-fn.IN" -> "named(Sugarman)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "named(Sugarman)" [label="ARG1-fn.Agent"]
	pronoun_q -> pron [label=BV]
	neg -> "_nice_a_of-for" [label=ARG1]
	_the_q -> _removal_n_of [label=BV]
	"_call_v_1-fn.IN" -> "_lawsuit/nn_u_unknown" [label="ARG2-fn.Theme"]
	_certain_a_of -> _director_n_of [label=ARG1]
	"_call_v_1-fn.IN" -> neg [label="ARG3-fn.Result"]
	udef_q -> _and_c [label=BV]
	udef_q -> _director_n_of [label=BV]
	"_nice_a_of-for" -> "_lawsuit/nn_u_unknown" [label=ARG1]
}
