digraph {
	node [shape=circle style=filled]
	proper_q -> "named(FileNet)" [label=BV]
	_under_p -> _right_n_1 [label=ARG1]
	"_have_v_1-fn.Competition" -> _basis_n_of [label="ARG2-fn.Participant_2"]
	"_have_v_1-fn.Competition" -> _state_n_of [label="ARG1-fn.Participant_1"]
	def_explicit_q -> _right_n_1 [label=BV]
	udef_q -> _default_n_1 [label=BV]
	_the_q -> _state_n_of [label=BV]
	"_predict_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_review_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	neg -> "_can_v_modal-fn.Reliance" [label=ARG1]
	"_review_v_1-fn.Competition" -> _right_n_1 [label="ARG2-fn.Participant_2"]
	_valid_a_1 -> _basis_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_of_p -> _dispute_n_1 [label=ARG2]
	_basis_n_of -> _default_n_1 [label=ARG1]
	"_say_v_to-fn.Surpassing" -> "named(FileNet)" [label="ARG1-fn.Standard_item"]
	"_predict_v_1-fn.Competition" -> _outcome_n_1 [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Surpassing" -> _and_c [label="ARG2-fn.Profiled_item"]
	_the_q -> _contract_n_1 [label=BV]
	_legal_a_1 -> _right_n_1 [label=ARG1]
	_of_p -> _outcome_n_1 [label=ARG1]
	_the_q -> _dispute_n_1 [label=BV]
	"_believe_v_1-fn.Expectation" -> pron [label="ARG1-fn.Cognizer"]
	poss -> _right_n_1 [label=ARG1]
	"_can_v_modal-fn.Reliance" -> "_predict_v_1-fn.Competition" [label="ARG1-fn.Protagonist"]
	"_believe_v_1-fn.Expectation" -> "_have_v_1-fn.Competition" [label="ARG2-fn.Phenomenon"]
	_the_q -> _outcome_n_1 [label=BV]
	neg -> "_believe_v_1-fn.Expectation" [label=ARG1]
	_under_p -> _contract_n_1 [label=ARG2]
	_a_q -> _basis_n_of [label=BV]
	"_say_v_to-fn.Surpassing" -> neg [label="ARG2-fn.Profiled_item"]
}
