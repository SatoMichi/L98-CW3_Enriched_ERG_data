digraph {
	node [shape=circle style=filled]
	"_call_v_name-fn.Labeling" -> pron [label="ARG1-fn.Agent"]
	_national_a_1 -> _problem_n_of [label=ARG1]
	compound -> "named(John)" [label=ARG2]
	_do_v_1 -> "_thing_n_of-about" [label=ARG2]
	_in_p_state -> "_call_v_name-fn.Labeling" [label=ARG1]
	compound -> _chairman_n_of [label=ARG1]
	"_call_v_name-fn.Labeling" -> _volatility_n_1 [label="ARG3-fn.Result"]
	_in_p -> "_thing_n_of-about" [label=ARG1]
	_a_q -> _interview_n_1 [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	_short_a_of -> _term_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "_going+to_v_qmodal" [label="ARG2-fn.Topic"]
	proper_q -> "named(J)" [label=BV]
	_the_q -> _situation_n_1 [label=BV]
	_intermediate_a_1 -> _term_n_of [label=ARG1]
	proper_q -> "named(Board)" [label=BV]
	"_help_v_1-fn.Assistance" -> _situation_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _chairman_n_of [label=BV]
	"_try_v_1-fn.Attempt" -> "_in+order+to_x" [label="ARG2-fn.Theme"]
	udef_q -> _junior_n_1 [label=BV]
	compound -> _stock_n_1 [label=ARG2]
	proper_q -> "named(Big)" [label=BV]
	"_going+to_v_qmodal" -> "_try_v_1-fn.Attempt" [label=ARG1]
	compound -> _junior_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	_the_q -> _term_n_of [label=BV]
	"_call_v_name-fn.Labeling" -> _problem_n_of [label="ARG2-fn.Theme"]
	compound -> "named(Board)" [label=ARG1]
	udef_q -> _stock_n_1 [label=BV]
	poss -> _market_n_1 [label=ARG2]
	_do_v_1 -> pron [label=ARG1]
	_in_p -> _term_n_of [label=ARG2]
	_in_p_state -> _interview_n_1 [label=ARG2]
	"_in+order+to_x" -> _do_v_1 [label=ARG1]
	compound -> "named(Phelan)" [label=ARG1]
	"_try_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	proper_q -> "named(Phelan)" [label=BV]
	"_help_v_1-fn.Assistance" -> pron [label="ARG1-fn.Agent"]
	compound -> _market_n_1 [label=ARG1]
	"_in+order+to_x" -> "_help_v_1-fn.Assistance" [label=ARG2]
	def_explicit_q -> _volatility_n_1 [label=BV]
	_some_q -> "_thing_n_of-about" [label=BV]
	poss -> _volatility_n_1 [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	compound -> "named(Big)" [label=ARG2]
	proper_q -> "named(John)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Phelan)" [label="ARG1-fn.Agent"]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(J)" [label=ARG1]
	_a_q -> _problem_n_of [label=BV]
}
