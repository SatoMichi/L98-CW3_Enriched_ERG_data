digraph {
	node [shape=circle style=filled]
	_show_v_1 -> _from_p [label=ARG2]
	_when_x_subord -> _lose_v_1 [label=ARG1]
	poss -> pron [label=ARG2]
	proper_q -> "named(Chan)" [label=BV]
	_own_a_1 -> _brain_n_1 [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	_show_v_1 -> pron [label=ARG1]
	"_say_v_to-fn.IN" -> _colon_p_namely [label="ARG2-fn.Topic"]
	udef_q -> _mister_n_1 [label=BV]
	compound -> "named(Chan)" [label=ARG1]
	_colon_p_namely -> _when_x_subord [label=ARG1]
	_from_p -> _brain_n_1 [label=ARG2]
	_for_p -> _time_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	_the_q -> _time_n_of [label=BV]
	poss -> _brain_n_1 [label=ARG1]
	_lose_v_1 -> pron [label=ARG1]
	def_explicit_q -> _brain_n_1 [label=BV]
	_when_x_subord -> _show_v_1 [label=ARG2]
	_from_p -> pron [label=ARG1]
	_for_p -> _lose_v_1 [label=ARG1]
	"ord(2)" -> _time_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Chan)" [label="ARG1-fn.Agent"]
}
