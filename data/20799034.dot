digraph {
	node [shape=circle style=filled]
	appos -> _executive_n_1 [label=ARG2]
	"_take_v_1-fn.Attempt" -> _and_c [label="ARG2-fn.Goal"]
	_new_a_1 -> _process_n_of [label=ARG1]
	"_try_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	compound -> _chief_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	_the_q -> _and_c [label=BV]
	"_take_v_1-fn.Attempt" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _imagination_n_1 [label=BV]
	proper_q -> "named(QuesTech)" [label=BV]
	compound -> "named(Vincent)" [label=ARG2]
	udef_q -> _process_n_of [label=BV]
	udef_q -> _chief_n_1 [label=BV]
	_for_p -> _process_n_of [label=ARG1]
	def_explicit_q -> _executive_n_1 [label=BV]
	udef_q -> _talent_n_1 [label=BV]
	"_say_v_to-fn.Taking" -> "named(Salvatori)" [label="ARG1-fn.Agent"]
	_of_p -> _and_c [label=ARG1]
	proper_q -> "named(Vincent)" [label=BV]
	focus_d -> "_try_v_1-fn.Attempt" [label=ARG2]
	appos -> "named(Salvatori)" [label=ARG1]
	compound -> "named(Salvatori)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_try_v_1-fn.Attempt" -> _and_c [label="ARG2-fn.Goal"]
	poss -> pron [label=ARG2]
	poss -> _engineer_n_1 [label=ARG1]
	_with_p -> _process_n_of [label=ARG2]
	poss -> _executive_n_1 [label=ARG1]
	"_come_v_up-fn.Bringing" -> pron [label="ARG1-fn.Agent"]
	_of_p -> _engineer_n_1 [label=ARG2]
	compound -> _executive_n_1 [label=ARG1]
	proper_q -> "named(Salvatori)" [label=BV]
	def_explicit_q -> _engineer_n_1 [label=BV]
	poss -> "named(QuesTech)" [label=ARG2]
	udef_q -> _industry_n_1 [label=BV]
	"_say_v_to-fn.Taking" -> "_try_v_1-fn.Attempt" [label="ARG2-fn.Theme"]
	_for_p -> _industry_n_1 [label=ARG2]
}
