digraph {
	node [shape=circle style=filled]
	"_feed_v_1-fn.Ingestion" -> _bat_n_1 [label="ARG2-fn.NotExist"]
	_the_q -> _center_n_of [label=BV]
	udef_q -> _machine_n_1 [label=BV]
	"_feed_v_1-fn.Ingestion" -> pron [label="ARG1-fn.NotExist"]
	_be_v_id -> "named(Orwell)" [label=ARG1]
	proper_q -> "named(Alexander)" [label=BV]
	def_implicit_q -> time_n [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_send_v_1-fn.Sending" -> _message_n_of [label="ARG2-fn.NotExist"]
	compound -> "named(Orwell)" [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	loc_nonsp -> "_feed_v_1-fn.Ingestion" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_in_p_state -> "_send_v_1-fn.Sending" [label=ARG1]
	compound -> "named(Alexander)" [label=ARG1]
	"_such+as_x_h" -> _or_c [label=ARG2]
	compound -> "named(George)" [label=ARG2]
	_the_q -> _worm_n_1 [label=BV]
	"_such+as_x_h" -> "_send_v_1-fn.Sending" [label=ARG1]
	_at_p -> _center_n_of [label=ARG2]
	_to_p -> _message_n_of [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	"_send_v_1-fn.Sending" -> _to_p [label="ARG3-fn.NotExist"]
	"_say_v_to-fn.IN" -> "named(Alexander)" [label="ARG1-fn.NotExist"]
	proper_q -> "named(Orwell)" [label=BV]
	pronoun_q -> pron [label=BV]
	neg -> "_feed_v_1-fn.Ingestion" [label=ARG1]
	"_send_v_1-fn.Sending" -> _worm_n_1 [label="ARG1-fn.NotExist"]
	_the_q -> _bat_n_1 [label=BV]
	_tonight_a_1 -> time_n [label=ARG1]
	_other_a_1 -> _machine_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "_such+as_x_h" [label="ARG2-fn.NotExist"]
	proper_q -> "named(George)" [label=BV]
	_a_q -> "_optimist/nn_u_unknown" [label=BV]
	_in_p_state -> _addition_n_1 [label=ARG2]
	_at_p -> _machine_n_1 [label=ARG1]
	_strange_a_to -> _message_n_of [label=ARG1]
	udef_q -> _message_n_of [label=BV]
	_be_v_id -> "_optimist/nn_u_unknown" [label=ARG2]
	udef_q -> _addition_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_to_p -> _machine_n_1 [label=ARG2]
}
