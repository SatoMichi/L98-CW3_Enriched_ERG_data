digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _be_v_do [label="ARG2-fn.Topic"]
	_be_v_do -> generic_entity [label=ARG1]
	"_suggest_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_today_a_1 -> time_n [label=ARG1]
	compound -> _telephone_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "_salespeople/nns_u_unknown" [label="ARG1-fn.Agent"]
	_do_v_be -> pron [label=ARG1]
	_colon_p_namely -> _to_p [label=ARG1]
	udef_q -> _telephone_n_1 [label=BV]
	udef_q -> _call_n_1 [label=BV]
	_to_p -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> "_salespeople/nns_u_unknown" [label=BV]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	_do_v_be -> generic_entity [label=ARG2]
	"_get_v_1-fn.IN" -> _rejection_n_1 [label="ARG2-fn.Theme"]
	"_want_v_1-fn.Desiring" -> _do_v_be [label="ARG2-fn.Theme"]
	_be_v_do -> "_get_v_1-fn.IN" [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	_make_v_1 -> "_salespeople/nns_u_unknown" [label=ARG1]
	loc_nonsp -> _do_v_be [label=ARG1]
	_all_q -> generic_entity [label=BV]
	pronoun_q -> pron [label=BV]
	"card(50)" -> _rejection_n_1 [label=ARG1]
	"_suggest_v_to-fn.Statement" -> _should_v_modal [label="ARG2-fn.Topic"]
	"_get_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	udef_q -> _rejection_n_1 [label=BV]
	_should_v_modal -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _call_n_1 [label=ARG1]
	_make_v_1 -> _call_n_1 [label=ARG2]
	_to_p -> pron [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	"_for+instance_a_1" -> "_suggest_v_to-fn.Statement" [label=ARG1]
}
