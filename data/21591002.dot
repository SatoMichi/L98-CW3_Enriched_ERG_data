digraph {
	node [shape=circle style=filled]
	_yesterday_a_1 -> time_n [label=ARG1]
	_base_v_1 -> _on_p [label=ARG3]
	udef_q -> _microprocessor_n_1 [label=BV]
	poss -> pron [label=ARG2]
	with_p -> "_introduce_v_to-fn.NF" [label=ARG1]
	def_explicit_q -> _computer_n_1 [label=BV]
	proper_q -> "named(CP486)" [label=BV]
	_in_p -> "named(Europe)" [label=ARG2]
	"_win_v_1-fn.NF" -> _race_n_of [label="ARG2-fn.Theme"]
	_base_v_1 -> _computer_n_1 [label=ARG2]
	_the_q -> _race_n_of [label=BV]
	proper_q -> "named(Olivetti)" [label=BV]
	udef_q -> _computer_n_1 [label=BV]
	loc_nonsp -> time_n [label=ARG2]
	_new_a_1 -> _chip_n_1 [label=ARG1]
	"_introduce_v_to-fn.NF" -> _computer_n_1 [label="ARG2-fn.Patient"]
	_a_q -> _chip_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_on_p -> _computer_n_1 [label=ARG1]
	poss -> _computer_n_1 [label=ARG1]
	compound -> _computer_n_1 [label=ARG1]
	compound -> "named(CP486)" [label=ARG2]
	compound -> "_and+company_n_1" [label=ARG2]
	_in_p -> _race_n_of [label=ARG1]
	parg_d -> _computer_n_1 [label=ARG2]
	_on_p -> _chip_n_1 [label=ARG2]
	_unveil_v_1 -> "named(Olivetti)" [label=ARG1]
	proper_q -> "named(Europe)" [label=BV]
	with_p -> _race_n_of [label=ARG2]
	"_claim_v_1-fn.Statement" -> "_win_v_1-fn.NF" [label="ARG2-fn.Topic"]
	compound -> _chip_n_1 [label=ARG1]
	proper_q -> "named(C)" [label=BV]
	"_claim_v_1-fn.Statement" -> "named(Olivetti)" [label="ARG1-fn.Agent"]
	_unveil_v_1 -> _computer_n_1 [label=ARG2]
	loc_nonsp -> _unveil_v_1 [label=ARG1]
	udef_q -> "_and+company_n_1" [label=BV]
	parg_d -> _base_v_1 [label=ARG1]
	"_win_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	compound -> _microprocessor_n_1 [label=ARG2]
	compound -> "named(C)" [label=ARG2]
	_powerful_a_1 -> _chip_n_1 [label=ARG1]
	compound -> "named(Olivetti)" [label=ARG1]
	def_implicit_q -> time_n [label=BV]
}
