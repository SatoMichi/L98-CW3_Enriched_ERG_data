digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _independence_n_1 [label=BV]
	_the_q -> "named_n(Fed)" [label=BV]
	_the_q -> _proposal_n_1 [label=BV]
	poss -> "named_n(Fed)" [label=ARG2]
	"_erode_v_cause-fn.NF" -> pron [label="ARG1-fn.NotExist"]
	_while_x -> _would_v_modal [label=ARG1]
	proper_q -> "named(Greenspan)" [label=BV]
	"_say_v_to-fn.IN" -> _while_x [label="ARG2-fn.NotExist"]
	compound -> _mister_n_1 [label=ARG2]
	focus_d -> _would_v_modal [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Dorgan)" [label=BV]
	_represent_v_1 -> part_of [label=ARG1]
	_a_q -> _step_n_1 [label=BV]
	compound -> "named(Dorgan)" [label=ARG1]
	"_erode_v_cause-fn.NF" -> _independence_n_1 [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	compound -> "named(Greenspan)" [label=ARG1]
	focus_d -> _together_p_state [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Greenspan)" [label="ARG1-fn.NotExist"]
	poss -> _independence_n_1 [label=ARG1]
	part_of -> _proposal_n_1 [label=ARG1]
	compound -> "named(Hamilton)" [label=ARG2]
	_only_x_deg -> _a_q [label=ARG1]
	_would_v_modal -> "_erode_v_cause-fn.NF" [label=ARG1]
	_each_q -> part_of [label=BV]
	_small_a_1 -> _step_n_1 [label=ARG1]
	_while_x -> _represent_v_1 [label=ARG2]
	compound -> _proposal_n_1 [label=ARG1]
	_together_p_state -> "_erode_v_cause-fn.NF" [label=ARG1]
	_represent_v_1 -> _step_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(Hamilton)" [label=BV]
}
