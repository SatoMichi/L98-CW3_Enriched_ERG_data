digraph {
	node [shape=circle style=filled]
	_pay_v_for -> _client_n_1 [label=ARG1]
	_to_p -> _foundation_n_1 [label=ARG2]
	udef_q -> _fee_n_1 [label=BV]
	_from_p -> "_omit_v_1-fn.NF" [label=ARG1]
	poss -> pron [label=ARG2]
	def_explicit_q -> _return_n_of [label=BV]
	"_tell_v_1-fn.Request" -> pron [label="ARG1-fn.Agent"]
	_those_q_dem -> _fee_n_1 [label=BV]
	"_plan_v_1-fn.Purpose" -> pron [label="ARG1-fn.Experiencer"]
	_on_p -> "_report_v_to-fn.Statement" [label=ARG1]
	_on_p -> _return_n_of [label=ARG2]
	_would_v_modal -> "_omit_v_1-fn.NF" [label=ARG1]
	_directly_x_deg -> _to_p [label=ARG1]
	"_omit_v_1-fn.NF" -> _fee_n_1 [label="ARG2-fn.Theme"]
	parg_d -> _income_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	poss -> _return_n_of [label=ARG1]
	_to_p -> _pay_v_for [label=ARG1]
	"_omit_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _client_n_1 [label=BV]
	parg_d -> "_report_v_to-fn.Statement" [label=ARG1]
	_certain_a_of -> _fee_n_1 [label=ARG1]
	"_plan_v_1-fn.Purpose" -> "_tell_v_1-fn.Request" [label="ARG2-fn.NotExist"]
	"_report_v_to-fn.Statement" -> _income_n_1 [label="ARG2-fn.NotExist"]
	"_tell_v_1-fn.Request" -> _client_n_1 [label="ARG2-fn.Topic"]
	"_tell_v_1-fn.Request" -> _pay_v_for [label="ARG3-fn.Recipient"]
	_to_p -> pron [label=ARG2]
	_from_p -> _income_n_1 [label=ARG2]
	_pay_v_for -> _fee_n_1 [label=ARG2]
	_the_q -> _foundation_n_1 [label=BV]
	udef_q -> _income_n_1 [label=BV]
}
