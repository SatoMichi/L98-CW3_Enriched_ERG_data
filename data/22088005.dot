digraph {
	node [shape=circle style=filled]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _control_n_of [label=BV]
	_the_q -> _owner_n_of [label=BV]
	focus_d -> "_say_v_to-fn.Taking" [label=ARG1]
	proper_q -> "named(Newport)" [label=BV]
	"_be_v_id-fn.Name_conferral" -> "named(Hollander)" [label="ARG1-fn.Entity"]
	compound -> "named(Barret)" [label=ARG2]
	"_say_v_to-fn.Taking" -> _and_c [label="ARG2-fn.Theme"]
	"_exercise_v_1-fn.Competition" -> _control_n_of [label="ARG2-fn.Participant_2"]
	"_want_v_1-fn.Getting" -> "named(Hollander)" [label="ARG1-fn.Recipient"]
	_new_a_1 -> _owner_n_of [label=ARG1]
	proper_q -> "named(Hollander)" [label=BV]
	proper_q -> "named(Weekes)" [label=BV]
	proper_q -> "named(Barret)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	def_explicit_q -> _chairman_n_of [label=BV]
	proper_q -> "named(B)" [label=BV]
	compound -> "named(Weekes)" [label=ARG1]
	appos -> "named(Weekes)" [label=ARG1]
	compound -> "named(Hollander)" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Weekes)" [label="ARG1-fn.Agent"]
	poss -> "named(Newport)" [label=ARG2]
	appos -> _chairman_n_of [label=ARG2]
	poss -> _chairman_n_of [label=ARG1]
	"_want_v_1-fn.Getting" -> "_exercise_v_1-fn.Competition" [label="ARG2-fn.Theme"]
	"_exercise_v_1-fn.Competition" -> "named(Hollander)" [label="ARG1-fn.Participant_1"]
	compound -> "named(B)" [label=ARG1]
	"_be_v_id-fn.Name_conferral" -> _owner_n_of [label="ARG2-fn.Name"]
	focus_d -> _and_c [label=ARG2]
}
