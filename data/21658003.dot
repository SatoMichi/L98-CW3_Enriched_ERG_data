digraph {
	node [shape=circle style=filled]
	_of_p -> _dollar_n_1 [label=ARG1]
	times -> "card(2.1)" [label=ARG2]
	_of_p -> _debt_n_1 [label=ARG2]
	"card(1000000000)" -> _dollar_n_1 [label=ARG1]
	_in_p_temp -> "mofy(Aug)" [label=ARG2]
	proper_q -> "named(Bass)" [label=BV]
	compound -> _plc_n_1 [label=ARG2]
	"_be_v_id-fn.Residence" -> part_of [label="ARG2-fn.Location"]
	"_agree_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_of_p -> "named(Britain)" [label=ARG2]
	_that_q_dem -> _debt_n_1 [label=BV]
	_the_q -> _business_n_1 [label=BV]
	proper_q -> "mofy(Aug)" [label=BV]
	_the_q -> _dollar_n_1 [label=BV]
	_when_x_subord -> _or_c [label=ARG1]
	"_be_v_id-fn.Residence" -> _debt_n_1 [label="ARG1-fn.Resident"]
	proper_q -> "named(Holiday)" [label=BV]
	"_agree_v_1-fn.Competition" -> "_buy_v_1-fn.Competition" [label="ARG2-fn.Participant_2"]
	"_buy_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	times -> "card(1000000000)" [label=ARG3]
	"_assume_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_buy_v_1-fn.Competition" -> _business_n_1 [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Inn)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.Surpassing" -> "_would_v_modal-fn.Cause_to_end" [label="ARG2-fn.Profiled_item"]
	_part_q -> part_of [label=BV]
	udef_q -> _debt_n_1 [label=BV]
	"_would_v_modal-fn.Cause_to_end" -> _when_x_subord [label="ARG1-fn.Process"]
	proper_q -> "named(Britain)" [label=BV]
	_when_x_subord -> "_agree_v_1-fn.Competition" [label=ARG2]
	compound -> "named(Bass)" [label=ARG1]
	"_say_v_to-fn.Surpassing" -> "named(Bass)" [label="ARG1-fn.Standard_item"]
	_in_p_temp -> "_agree_v_1-fn.Competition" [label=ARG1]
	part_of -> _dollar_n_1 [label=ARG1]
	_of_p -> "named(Bass)" [label=ARG1]
	"_assume_v_1-fn.Competition" -> _dollar_n_1 [label="ARG2-fn.Participant_2"]
	compound -> "named(Holiday)" [label=ARG2]
	"_retire_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_retire_v_1-fn.Competition" -> _dollar_n_1 [label="ARG2-fn.Participant_2"]
	udef_q -> _plc_n_1 [label=BV]
	compound -> _business_n_1 [label=ARG1]
	compound -> _debt_n_1 [label=ARG1]
	compound -> "named(Inn)" [label=ARG1]
}
