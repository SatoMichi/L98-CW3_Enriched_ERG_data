digraph {
	node [shape=circle style=filled]
	compound -> "named(Lee)" [label=ARG2]
	_without_p -> "_retrofit/vb_u_unknown" [label=ARG1]
	_a_q -> _bear_n_1 [label=BV]
	_of_p -> "named(Cleveland)" [label=ARG2]
	proper_q -> "named(Lee)" [label=BV]
	"_at+least_a_1" -> _let_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Seidman)" [label="ARG1-fn.Agent"]
	_the_q -> _stream_n_of [label=BV]
	_a_q -> _building_n_1 [label=BV]
	proper_q -> "named(Infiniti)" [label=BV]
	_be_v_id -> "named(Infiniti)" [label=ARG1]
	_on_p -> _interior_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _but_c [label="ARG2-fn.Topic"]
	_without_p -> _stream_n_of [label=ARG2]
	proper_q -> "named(Seidman)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_retrofit/vb_u_unknown" -> _building_n_1 [label=ARG2]
	_of_p -> "named(Seidman)" [label=ARG1]
	"_exist_v_1-fn.Existence" -> _building_n_1 [label="ARG1-fn.NotExist"]
	_let_v_1 -> "named(Infiniti)" [label=ARG1]
	_let_v_1 -> "_retrofit/vb_u_unknown" [label=ARG2]
	"_retrofit/vb_u_unknown" -> pron [label=ARG1]
	_be_v_id -> _bear_n_1 [label=ARG2]
	_on_p -> _bear_n_1 [label=ARG1]
	udef_q -> _interior_n_1 [label=BV]
	proper_q -> "named(Cleveland)" [label=BV]
	compound -> "named(Seidman)" [label=ARG1]
}
