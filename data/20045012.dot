digraph {
	node [shape=circle style=filled]
	_of_p -> _purpose_n_1 [label=ARG1]
	_standardize_v_1 -> _test_n_of [label=ARG2]
	nominalization -> _learn_v_1 [label=ARG1]
	_such_q -> _aid_n_1 [label=BV]
	_defeat_v_1 -> _purpose_n_1 [label=ARG2]
	_other_a_1 -> _critic_n_of [label=ARG1]
	udef_q -> _critic_n_of [label=BV]
	udef_q -> _test_n_of [label=BV]
	_the_q -> _purpose_n_1 [label=BV]
	compound -> nominalization [label=ARG2]
	"_gauge_v_1-fn.NF" -> _progress_n_1 [label="ARG2-fn.NotExist"]
	_defeat_v_1 -> _aid_n_1 [label=ARG1]
	compound -> _aid_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_gauge_v_1-fn.NF" -> _purpose_n_1 [label="ARG1-fn.NotExist"]
	eventuality -> "_gauge_v_1-fn.NF" [label=ARG1]
	_can_v_modal -> _defeat_v_1 [label=ARG1]
	parg_d -> _test_n_of [label=ARG2]
	compound -> _progress_n_1 [label=ARG1]
	_of_p -> _test_n_of [label=ARG2]
	udef_q -> nominalization [label=BV]
	parg_d -> _standardize_v_1 [label=ARG1]
	udef_q -> _progress_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _can_v_modal [label="ARG2-fn.NotExist"]
	nominalization -> _coach_v_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG1-fn.NotExist"]
}
