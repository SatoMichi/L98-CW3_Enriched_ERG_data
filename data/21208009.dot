digraph {
	node [shape=circle style=filled]
	_a_q -> _nerve_n_1 [label=BV]
	compound -> "named(Stearns)" [label=ARG1]
	proper_q -> "named(Stearns)" [label=BV]
	proper_q -> "named(Jack)" [label=BV]
	udef_q -> _analyst_n_1 [label=BV]
	_with_p -> _nerve_n_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	proper_q -> "named(Solomon)" [label=BV]
	parg_d -> "_expose_v_1-fn.Undergo_change" [label=ARG1]
	udef_q -> generic_entity [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(Bear)" [label=ARG2]
	_for_p -> "named(Stearns)" [label=ARG2]
	"_cut_v_1-fn.Change_position_on_a_scale" -> _nerve_n_1 [label="ARG2-fn.Item"]
	"_expose_v_1-fn.Undergo_change" -> _nerve_n_1 [label="ARG2-fn.Final_category"]
	appos -> _analyst_n_1 [label=ARG2]
	proper_q -> "named(Bear)" [label=BV]
	"ord(13th)" -> generic_entity [label=ARG1]
	parg_d -> "_cut_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_leave_v_transfer-fn.Cause_to_continue" [label="ARG2-fn.Requirement"]
	appos -> "named(Solomon)" [label=ARG1]
	compound -> "named(Jack)" [label=ARG2]
	"_leave_v_transfer-fn.Cause_to_continue" -> "mofy(Oct)" [label="ARG2-fn.Process"]
	focus_d -> "mofy(Oct)" [label=ARG2]
	"_leave_v_transfer-fn.Cause_to_continue" -> pron [label="ARG3-fn.State"]
	"_say_v_to-fn.Have_as_requirement" -> "named(Solomon)" [label="ARG1-fn.Dependent"]
	proper_q -> "mofy(Oct)" [label=BV]
	_for_p -> _analyst_n_1 [label=ARG1]
	_with_p -> "_leave_v_transfer-fn.Cause_to_continue" [label=ARG1]
	_technical_a_1 -> _analyst_n_1 [label=ARG1]
	compound -> "named(Solomon)" [label=ARG1]
	parg_d -> _nerve_n_1 [label=ARG2]
	focus_d -> "_leave_v_transfer-fn.Cause_to_continue" [label=ARG1]
	"_leave_v_transfer-fn.Cause_to_continue" -> generic_entity [label="ARG1-fn.Agent"]
}
