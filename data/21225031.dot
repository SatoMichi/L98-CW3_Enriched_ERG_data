digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _line_n_of [label=BV]
	_string_n_of -> _model_n_of [label=ARG1]
	poss -> "_cachet/nn_u_unknown" [label=ARG1]
	udef_q -> _and_c [label=BV]
	def_explicit_q -> "_cachet/nn_u_unknown" [label=BV]
	_a_q -> _string_n_of [label=BV]
	_new_a_1 -> _model_n_of [label=ARG1]
	_a_q -> _image_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	_successful_a_1 -> _model_n_of [label=ARG1]
	_high_a_1 -> _successful_a_1 [label=ARG1]
	compound -> _line_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	udef_q -> _model_n_of [label=BV]
	_recent_a_1 -> _string_n_of [label=ARG1]
	"_have_v_1-fn.Competition" -> _and_c [label="ARG2-fn.Participant_2"]
	"_have_v_1-fn.Competition" -> _line_n_of [label="ARG1-fn.Participant_1"]
	poss -> "named(Jaguar)" [label=ARG2]
	proper_q -> "named(Jaguar)" [label=BV]
	poss -> _line_n_of [label=ARG1]
	_solid_a_1 -> _image_n_of [label=ARG1]
	compound -> "named(Opel)" [label=ARG2]
	"_lack_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_lack_v_1-fn.Competition" -> "_cachet/nn_u_unknown" [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Opel)" [label=BV]
}
