digraph {
	node [shape=circle style=filled]
	udef_q -> _software_n_1 [label=BV]
	"_cross_v_1-fn.Traversing" -> _line_n_of [label="ARG2-fn.Theme"]
	_in_p -> _consultant_n_1 [label=ARG1]
	_in_p -> "named(New+York)" [label=ARG2]
	compound -> "named(Sam)" [label=ARG2]
	_broad_a_1 -> _strategy_n_of [label=ARG1]
	proper_q -> "named(New+York)" [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	focus_d -> "_develop_v_cause-fn.IN" [label=ARG1]
	compound -> _strategy_n_of [label=ARG1]
	compound -> _software_n_1 [label=ARG2]
	_in_p_state -> _past_n_1 [label=ARG2]
	proper_q -> "named(IBM)" [label=BV]
	udef_q -> _problem_n_of [label=BV]
	_for_p -> "_develop_v_cause-fn.IN" [label=ARG1]
	appos -> _consultant_n_1 [label=ARG2]
	compound -> "named(Scarsdale)" [label=ARG2]
	_for_p -> _problem_n_of [label=ARG2]
	_in_p_state -> "_develop_v_cause-fn.IN" [label=ARG1]
	compound -> _line_n_of [label=ARG1]
	proper_q -> "named(Sam)" [label=BV]
	_the_q -> _past_n_1 [label=BV]
	"_develop_v_cause-fn.IN" -> _strategy_n_of [label="ARG2-fn.Product"]
	_a_q -> _consultant_n_1 [label=BV]
	compound -> _industry_n_1 [label=ARG2]
	udef_q -> _line_n_of [label=BV]
	"_develop_v_cause-fn.IN" -> "named(IBM)" [label="ARG1-fn.Agent"]
	compound -> "named(New+York)" [label=ARG1]
	"_say_v_to-fn.IN" -> "_develop_v_cause-fn.IN" [label="ARG2-fn.Topic"]
	proper_q -> "named(Scarsdale)" [label=BV]
	proper_q -> "named(Albert)" [label=BV]
	udef_q -> _strategy_n_of [label=BV]
	"_cross_v_1-fn.Traversing" -> _problem_n_of [label="ARG1-fn.NotExist"]
	_only_x_deg -> _for_p [label=ARG1]
	compound -> "named(Albert)" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Albert)" [label="ARG1-fn.Agent"]
	udef_q -> _industry_n_1 [label=BV]
	appos -> "named(Albert)" [label=ARG1]
}
