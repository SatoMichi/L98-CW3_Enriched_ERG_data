digraph {
	node [shape=circle style=filled]
	compound -> "named(Michael)" [label=ARG2]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	proper_q -> "named(First)" [label=BV]
	_above_p -> _expectation_n_of [label=ARG2]
	proper_q -> "named(Boston)" [label=BV]
	proper_q -> "named(Blumstein)" [label=BV]
	proper_q -> "named(Michael)" [label=BV]
	compound -> "named(Boston)" [label=ARG1]
	_a_q -> _analyst_n_1 [label=BV]
	compound -> "named(First)" [label=ARG2]
	_at_p -> _analyst_n_1 [label=ARG1]
	proper_q -> "named(W)" [label=BV]
	appos -> _analyst_n_1 [label=ARG2]
	udef_q -> _expectation_n_of [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _and_c [label="ARG2-fn.Requirement"]
	appos -> "named(Blumstein)" [label=ARG1]
	_above_p -> _earnings_n_1 [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	udef_q -> _corporation_n_1 [label=BV]
	_fine_a_for -> _earnings_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Blumstein)" [label="ARG1-fn.Dependent"]
	compound -> "named(Blumstein)" [label=ARG1]
	_at_p -> "named(Boston)" [label=ARG2]
	compound -> "named(W)" [label=ARG1]
	_the_q -> _earnings_n_1 [label=BV]
	focus_d -> _and_c [label=ARG2]
}
