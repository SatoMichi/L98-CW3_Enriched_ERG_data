digraph {
	node [shape=circle style=filled]
	focus_d -> _in_p_state [label=ARG2]
	"_say_v_to-fn.Cause_to_end" -> _if_x_then [label="ARG2-fn.Means"]
	proper_q -> "named(Emhart)" [label=BV]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Decker)" [label=BV]
	"_sell_v_1-fn.Competition" -> _operation_n_of [label="ARG2-fn.Participant_2"]
	"card(2)" -> _operation_n_of [label=ARG1]
	compound -> _operation_n_of [label=ARG1]
	udef_q -> _addition_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	_other_a_1 -> _operation_n_of [label=ARG1]
	compound -> "named(Emhart)" [label=ARG2]
	"_un-_a_rvrs" -> "_disclose_v_to-fn.Amounting_to" [label=ARG1]
	"_receive_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_in_p_state -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG1-fn.Process"]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Black)" [label=BV]
	udef_q -> _operation_n_of [label=BV]
	_right_a_1 -> _price_n_of [label=ARG1]
	parg_d -> "_disclose_v_to-fn.Amounting_to" [label=ARG1]
	_if_x_then -> "_receive_v_1-fn.Competition" [label=ARG2]
	"_would_v_modal-fn.Cause_to_end" -> "_sell_v_1-fn.Competition" [label="ARG1-fn.Process"]
	"_receive_v_1-fn.Competition" -> _price_n_of [label="ARG2-fn.Participant_2"]
	_in_p_state -> _addition_n_1 [label=ARG2]
	"_sell_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_the_q -> _price_n_of [label=BV]
	"_disclose_v_to-fn.Amounting_to" -> _operation_n_of [label="ARG2-fn.Attribute"]
	parg_d -> _operation_n_of [label=ARG2]
	_if_x_then -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
}
