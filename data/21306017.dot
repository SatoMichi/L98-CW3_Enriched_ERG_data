digraph {
	node [shape=circle style=filled]
	poss -> _plan_n_1 [label=ARG1]
	"_see_v_1-fn.Grasp" -> _plan_n_1 [label="ARG2-fn.Stimulus"]
	udef_q -> "named_n(US)" [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG1-fn.Agent"]
	proper_q -> "named(American)" [label=BV]
	compound -> _company_n_1 [label=ARG2]
	def_explicit_q -> _plan_n_1 [label=BV]
	compound -> "named(Telephone)" [label=ARG1]
	compound -> _plan_n_1 [label=ARG1]
	proper_q -> "named(Telegraph)" [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	compound -> "named(American)" [label=ARG2]
	"_say_v_to-fn.IN" -> "_in+order+to_x" [label="ARG2-fn.Topic"]
	compound -> "named(Telegraph)" [label=ARG1]
	"_wait_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	compound -> "named(Memories)" [label=ARG1]
	proper_q -> "named(Telephone)" [label=BV]
	compound -> _business_n_1 [label=ARG2]
	poss -> "named(Memories)" [label=ARG2]
	"_in+order+to_x" -> "_see_v_1-fn.Grasp" [label=ARG2]
	udef_q -> _business_n_1 [label=BV]
	proper_q -> "named(Memories)" [label=BV]
	"_see_v_1-fn.Grasp" -> pron [label="ARG1-fn.Experiencer"]
	"_in+order+to_x" -> "_wait_v_1-fn.IN" [label=ARG1]
	udef_q -> _and_c [label=BV]
	udef_q -> _company_n_1 [label=BV]
}
