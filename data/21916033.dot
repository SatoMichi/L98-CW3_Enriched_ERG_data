digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Nimitz)" [label=BV]
	_only_x_deg -> udef_q [label=ARG1]
	"_support_v_1-fn.Taking_sides" -> "named(Freeway)" [label="ARG2-fn.Stimulus"]
	focus_d -> "_explain_v_to-fn.Statement" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	parg_d -> _bridge_n_1 [label=ARG2]
	"_support_v_1-fn.Taking_sides" -> _bridge_n_1 [label="ARG2-fn.Stimulus"]
	compound -> "named(Nimitz)" [label=ARG2]
	_top_a_1 -> _priority_n_1 [label=ARG1]
	focus_d -> _and_c [label=ARG2]
	_leave_v_out -> "named(Freeway)" [label=ARG2]
	_row_n_of -> _column_n_of [label=ARG1]
	parg_d -> "named(Freeway)" [label=ARG2]
	_single_a_1 -> _row_n_of [label=ARG1]
	_be_v_id -> _priority_n_1 [label=ARG2]
	proper_q -> "named(Drago)" [label=BV]
	_with_p -> "_support_v_1-fn.Taking_sides" [label=ARG1]
	"_support_v_1-fn.Taking_sides" -> _row_n_of [label="ARG1-fn.Experiencer"]
	parg_d -> _leave_v_out [label=ARG1]
	_the_q -> "named(Freeway)" [label=BV]
	udef_q -> _row_n_of [label=BV]
	udef_q -> _column_n_of [label=BV]
	"_explain_v_to-fn.Statement" -> "named(Drago)" [label="ARG1-fn.Agent"]
	compound -> "named(Drago)" [label=ARG1]
	_with_p -> _row_n_of [label=ARG2]
	compound -> "named(Freeway)" [label=ARG1]
	udef_q -> _priority_n_1 [label=BV]
	_double_a_1 -> _row_n_of [label=ARG1]
	parg_d -> "_support_v_1-fn.Taking_sides" [label=ARG1]
	_be_v_id -> _bridge_n_1 [label=ARG1]
	"_explain_v_to-fn.Statement" -> _and_c [label="ARG2-fn.Topic"]
	udef_q -> _bridge_n_1 [label=BV]
}
