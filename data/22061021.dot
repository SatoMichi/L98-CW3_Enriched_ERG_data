digraph {
	node [shape=circle style=filled]
	_head_n_of -> nominalization [label=ARG1]
	focus_d -> "_buy_v_1-fn.Commerce_buy" [label=ARG2]
	"_have_v_1-fn.State_continue" -> _earnings_n_1 [label="ARG2-fn.State"]
	"_buy_v_1-fn.Commerce_buy" -> _stock_n_1 [label="ARG2-fn.Goods"]
	compound -> "named(Peabody)" [label=ARG1]
	proper_q -> "named(Peabody)" [label=BV]
	compound -> "named(J)" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> "named(Edward)" [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "_buy_v_1-fn.Commerce_buy" [label="ARG2-fn.Requirement"]
	udef_q -> _head_n_of [label=BV]
	"_buy_v_1-fn.Commerce_buy" -> _investor_n_1 [label="ARG1-fn.Buyer"]
	compound -> nominalization [label=ARG1]
	udef_q -> _stock_n_1 [label=BV]
	compound -> _block_n_of [label=ARG2]
	_at_p -> nominalization [label=ARG1]
	udef_q -> _earnings_n_1 [label=BV]
	appos -> "named(Laux)" [label=ARG1]
	compound -> "named(Kidder)" [label=ARG2]
	_at_p -> "named(Peabody)" [label=ARG2]
	udef_q -> _block_n_of [label=BV]
	_predictable_a_to -> _earnings_n_1 [label=ARG1]
	compound -> "named(Laux)" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Laux)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Edward)" [label=BV]
	udef_q -> _investor_n_1 [label=BV]
	proper_q -> "named(J)" [label=BV]
	appos -> _head_n_of [label=ARG2]
	proper_q -> "named(Kidder)" [label=BV]
	proper_q -> "named(Laux)" [label=BV]
	"_have_v_1-fn.State_continue" -> _stock_n_1 [label="ARG1-fn.Entity"]
	nominalization -> _trade_v_1 [label=ARG1]
}
