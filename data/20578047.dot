digraph {
	node [shape=circle style=filled]
	_the_q -> generic_entity [label=BV]
	_the_q -> _producer_n_of [label=BV]
	poss -> _contract_n_1 [label=ARG1]
	compound -> _chairman_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	proper_q -> "named(Daly)" [label=BV]
	def_explicit_q -> _contract_n_1 [label=BV]
	proper_q -> "named(Brothers)" [label=BV]
	"_agree_v_with-fn.IN" -> neg [label="ARG2-fn.Theme"]
	udef_q -> _conference_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	compound -> _conference_n_of [label=ARG2]
	focus_d -> _in_p_state [label=ARG2]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	compound -> "named(Robert)" [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_in_p_state -> "_agree_v_with-fn.IN" [label=ARG1]
	_contact_v_1 -> pron [label=ARG1]
	compound -> "named(Brothers)" [label=ARG1]
	udef_q -> _chairman_n_of [label=BV]
	"_out+of_p" -> _let_v_1 [label=ARG1]
	compound -> "named(Ross)" [label=ARG1]
	"card(3)" -> generic_entity [label=ARG1]
	pronoun_q -> pron [label=BV]
	_a_q -> _call_n_1 [label=BV]
	_contact_v_1 -> _and_c [label=ARG2]
	_let_v_1 -> _producer_n_of [label=ARG2]
	_can_v_modal -> _let_v_1 [label=ARG1]
	proper_q -> "named(Robert)" [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.NotExist"]
	"_agree_v_with-fn.IN" -> generic_entity [label="ARG1-fn.Agent"]
	"_out+of_p" -> _contract_n_1 [label=ARG2]
	proper_q -> "named(Ross)" [label=BV]
	_would_v_modal -> _contact_v_1 [label=ARG1]
	_let_v_1 -> pron [label=ARG1]
	compound -> "named(Daly)" [label=ARG1]
	proper_q -> "named(Warner)" [label=BV]
	_in_p_state -> _call_n_1 [label=ARG2]
	compound -> _call_n_1 [label=ARG1]
	focus_d -> "_agree_v_with-fn.IN" [label=ARG1]
	udef_q -> _and_c [label=BV]
	neg -> _can_v_modal [label=ARG1]
	compound -> "named(Warner)" [label=ARG2]
}
