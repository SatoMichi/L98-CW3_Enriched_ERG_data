digraph {
	node [shape=circle style=filled]
	subord -> "_add_v_to-fn.NF" [label=ARG2]
	"_steal_v_from-fn.Theft" -> _secret_n_1 [label="ARG2-fn.Theme"]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	neg -> "_get_v_state-fn.IN" [label=ARG1]
	parg_d -> _bet_n_1 [label=ARG2]
	_have_v_prd -> pron [label=ARG1]
	_be_v_id -> _bet_n_1 [label=ARG2]
	_at_p_temp -> _have_v_prd [label=ARG1]
	poss -> pron [label=ARG2]
	parg_d -> _catch_v_1 [label=ARG1]
	_colon_p_namely -> _be_v_id [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"card(12)" -> _competitor_n_1 [label=ARG1]
	_a_q -> _bet_n_1 [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_at_p_temp -> _time_n_of [label=ARG2]
	_have_v_prd -> "_steal_v_from-fn.Theft" [label=ARG3]
	subord -> "_say_v_to-fn.IN" [label=ARG1]
	_catch_v_1 -> _bet_n_1 [label=ARG2]
	_be_v_id -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_add_v_to-fn.NF" -> _colon_p_namely [label="ARG2-fn.Topic"]
	"_steal_v_from-fn.Theft" -> _competitor_n_1 [label="ARG1-fn.Agent"]
	_the_q -> _time_n_of [label=BV]
	"_get_v_state-fn.IN" -> _catch_v_1 [label="ARG3-fn.Goal"]
	"_get_v_state-fn.IN" -> _bet_n_1 [label="ARG2-fn.Patient"]
	_have_v_prd -> _competitor_n_1 [label=ARG2]
	comp_equal -> _same_a_as [label=ARG1]
	times -> "card(1)" [label=ARG2]
	proper_q -> "named(Matchett)" [label=BV]
	poss -> _secret_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Matchett)" [label="ARG1-fn.Agent"]
	"_good_a_at-for-of" -> _bet_n_1 [label=ARG1]
	def_explicit_q -> _secret_n_1 [label=BV]
	_can_v_modal -> _have_v_prd [label=ARG1]
	compound -> "named(Matchett)" [label=ARG1]
	_pretty_a_1 -> _bet_n_1 [label=ARG1]
	_same_a_as -> _time_n_of [label=ARG1]
	udef_q -> _competitor_n_1 [label=BV]
	times -> "card(12)" [label=ARG3]
	focus_d -> _can_v_modal [label=ARG2]
	"_say_v_to-fn.IN" -> _can_v_modal [label="ARG2-fn.Topic"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
