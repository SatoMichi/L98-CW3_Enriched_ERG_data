digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _client_n_1 [label=BV]
	"_keep_v_prd-fn.Cause_to_continue" -> _client_n_1 [label="ARG1-fn.Agent"]
	_also_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG1-fn.Agent"]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> "_keep_v_prd-fn.Cause_to_continue" [label="ARG2-fn.Topic"]
	_international_a_1 -> _client_n_1 [label=ARG1]
	compound -> "named(Polk)" [label=ARG1]
	compound -> _partner_n_1 [label=ARG1]
	_busy_a_1 -> _partner_n_1 [label=ARG1]
	udef_q -> _partner_n_1 [label=BV]
	"_keep_v_prd-fn.Cause_to_continue" -> _partner_n_1 [label="ARG2-fn.Theme"]
	proper_q -> "named(Davis)" [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> _and_c [label=ARG2]
	udef_q -> _acquisition_n_of [label=BV]
	proper_q -> "named(Polk)" [label=BV]
	proper_q -> "named(Wardwell)" [label=BV]
	compound -> "named(Davis)" [label=ARG2]
	"_keep_v_prd-fn.Cause_to_continue" -> _busy_a_1 [label="ARG3-fn.NotExist"]
	udef_q -> _and_c [label=BV]
	udef_q -> _merger_n_1 [label=BV]
	poss -> _client_n_1 [label=ARG1]
}
