digraph {
	node [shape=circle style=filled]
	_in_p -> _defendant_n_1 [label=ARG1]
	proper_q -> "named(Adams)" [label=BV]
	focus_d -> _come_v_1 [label=ARG2]
	_to_p -> _come_v_1 [label=ARG1]
	_for_p -> _elapse_v_1 [label=ARG1]
	nominalization -> "_add_v_to-fn.Statement" [label=ARG1]
	udef_q -> _adhesive_n_1 [label=BV]
	_until_x_h -> _elapse_v_1 [label=ARG2]
	_the_q -> _case_n_of [label=BV]
	compound -> _limit_n_of [label=ARG1]
	_elapse_v_1 -> _limit_n_of [label=ARG1]
	_for_p -> nominalization [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Adams)" [label="ARG1-fn.Agent"]
	_until_x_h -> neg [label=ARG1]
	compound -> _maker_n_of [label=ARG1]
	_a_q -> _defendant_n_1 [label=BV]
	_the_q -> _maker_n_of [label=BV]
	compound -> _ms_n_1 [label=ARG2]
	"_add_v_to-fn.Statement" -> _maker_n_of [label="ARG2-fn.Patient"]
	_come_v_1 -> "named(Beebes)" [label=ARG1]
	_the_q -> "named(Beebes)" [label=BV]
	compound -> "named(Adams)" [label=ARG1]
	udef_q -> _ms_n_1 [label=BV]
	_as_p -> _defendant_n_1 [label=ARG2]
	neg -> _come_v_1 [label=ARG1]
	udef_q -> _time_n_of [label=BV]
	_as_p -> "_add_v_to-fn.Statement" [label=ARG1]
	compound -> _time_n_of [label=ARG2]
	udef_q -> nominalization [label=BV]
	_that_q_dem -> _conclusion_n_of [label=BV]
	_to_p -> _conclusion_n_of [label=ARG2]
	_in_p -> _case_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _until_x_h [label="ARG2-fn.Topic"]
	compound -> _adhesive_n_1 [label=ARG2]
	udef_q -> _limit_n_of [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
