digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Short)" [label=BV]
	"card(135)" -> _dollar_n_1 [label=ARG1]
	udef_q -> _analyst_n_1 [label=BV]
	"card(150)" -> _dollar_n_1 [label=ARG1]
	"_be_v_nv-fn.Cause_to_end" -> "_say_v_to-fn.Taking" [label="ARG2-fn.Means"]
	_worth_a_1 -> _stock_n_1 [label=ARG1]
	udef_q -> _airline_n_1 [label=BV]
	_worth_a_1 -> place_n [label=ARG2]
	udef_q -> _and_c [label=BV]
	compound -> _answer_n_to [label=ARG1]
	_the_q -> _answer_n_to [label=BV]
	_the_q -> _stock_n_1 [label=BV]
	compound -> _airline_n_1 [label=ARG2]
	_between_p -> place_n [label=ARG1]
	"_say_v_to-fn.Taking" -> _analyst_n_1 [label="ARG1-fn.Agent"]
	_a_p_per -> _share_n_of [label=ARG2]
	_on_p -> _answer_n_to [label=ARG1]
	compound -> _analyst_n_1 [label=ARG1]
	udef_q -> _share_n_of [label=BV]
	udef_q -> _dollar_n_1 [label=BV]
	_on_p -> _basis_n_of [label=ARG2]
	compound -> "named(Short)" [label=ARG2]
	"_say_v_to-fn.Taking" -> _worth_a_1 [label="ARG2-fn.Theme"]
	_fundamental_a_1 -> _basis_n_of [label=ARG1]
	_some_q -> place_n [label=BV]
	_a_p_per -> _and_c [label=ARG1]
	"_be_v_nv-fn.Cause_to_end" -> _answer_n_to [label="ARG1-fn.Process"]
	_a_q -> _basis_n_of [label=BV]
	_between_p -> _and_c [label=ARG2]
}
