digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Imperial)" [label=BV]
	compound -> _suit_n_of [label=ARG1]
	"_serve_v_as-fn.Assistance" -> _company_n_of [label="ARG2-fn.Attribute"]
	_derivative_a_1 -> _suit_n_of [label=ARG1]
	_against_p -> _defend_v_from [label=ARG1]
	udef_q -> _class_n_of [label=BV]
	_would_v_modal -> _defend_v_from [label=ARG1]
	_the_q -> _suit_n_of [label=BV]
	_statement_n_of -> _would_v_modal [label=ARG1]
	poss -> _statement_n_of [label=ARG1]
	_although_x -> "_reiterate_v_to-fn.Statement" [label=ARG1]
	_although_x -> "_say_v_to-fn.IN" [label=ARG2]
	_with_p -> _suit_n_of [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	_vigorous_a_1 -> _defend_v_from [label=ARG1]
	"_say_v_to-fn.IN" -> _spokesman_n_1 [label="ARG1-fn.Agent"]
	_yet_a_1 -> "_serve_v_as-fn.Assistance" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _class_n_of [label=ARG2]
	_with_p -> "_serve_v_as-fn.Assistance" [label=ARG1]
	compound -> _spokesman_n_1 [label=ARG1]
	_defend_v_from -> pron [label=ARG2]
	compound -> "named(Imperial)" [label=ARG2]
	"_reiterate_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	neg -> "_serve_v_as-fn.Assistance" [label=ARG1]
	parg_d -> _company_n_of [label=ARG2]
	_against_p -> _suit_n_of [label=ARG2]
	compound -> _action_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	poss -> _company_n_of [label=ARG2]
	_a_q -> _spokesman_n_1 [label=BV]
	udef_q -> _action_n_1 [label=BV]
	parg_d -> "_serve_v_as-fn.Assistance" [label=ARG1]
	def_explicit_q -> _statement_n_of [label=BV]
	"_reiterate_v_to-fn.Statement" -> _statement_n_of [label="ARG2-fn.Topic"]
}
