digraph {
	node [shape=circle style=filled]
	"_pose_v_as-fn.NF" -> pron [label="ARG1-fn.Agent"]
	compound -> _brain_n_1 [label=ARG2]
	"_profess_v_to-fn.Statement" -> person [label="ARG1-fn.Agent"]
	_while_x -> "_doubt_v_1-fn.Certainty" [label=ARG1]
	_of_p -> _drain_n_1 [label=ARG2]
	compound -> _drain_n_1 [label=ARG1]
	_a_q -> _threat_n_1 [label=BV]
	_the_q -> _economy_n_1 [label=BV]
	"_exact_a_same-as" -> _cost_n_1 [label=ARG1]
	"_doubt_v_1-fn.Certainty" -> person [label="ARG1-fn.Agent"]
	_the_q -> _cost_n_1 [label=BV]
	_hardly_x_deg -> person [label=ARG1]
	_of_p -> _cost_n_1 [label=ARG1]
	"_know_v_1-fn.IN" -> person [label="ARG1-fn.Agent"]
	pronoun_q -> pron [label=BV]
	comp_equal -> "_exact_a_same-as" [label=ARG1]
	_to_p -> _economy_n_1 [label=ARG2]
	"_pose_v_as-fn.NF" -> _threat_n_1 [label="ARG2-fn.Topic"]
	_no_q -> person [label=BV]
	"_profess_v_to-fn.Statement" -> "_know_v_1-fn.IN" [label="ARG2-fn.Result"]
	_to_p -> _cost_n_1 [label=ARG1]
	_any_q -> person [label=BV]
	udef_q -> _brain_n_1 [label=BV]
	"_know_v_1-fn.IN" -> _cost_n_1 [label="ARG2-fn.Theme"]
	"_doubt_v_1-fn.Certainty" -> "_pose_v_as-fn.NF" [label="ARG2-fn.Theme"]
	_while_x -> "_profess_v_to-fn.Statement" [label=ARG2]
	"_such+a_q" -> _drain_n_1 [label=BV]
}
