digraph {
	node [shape=circle style=filled]
	compound -> "named(South)" [label=ARG2]
	udef_q -> generic_entity [label=BV]
	loc_nonsp -> "_mean_v_1-fn.NF" [label=ARG1]
	"much-many_a" -> generic_entity [label=ARG1]
	loc_nonsp -> _state_n_of [label=ARG2]
	comp_equal -> ellipsis_ref [label=ARG2]
	_in_p -> _country_n_of [label=ARG2]
	udef_q -> _test_n_of [label=BV]
	comp_equal -> "much-many_a" [label=ARG1]
	ellipsis_ref -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	_the_q -> _country_n_of [label=BV]
	_in_p -> _state_n_of [label=ARG1]
	_in_p -> "named(Carolina)" [label=ARG2]
	udef_q -> _expert_n_1 [label=BV]
	_another_q -> _state_n_of [label=BV]
	"_say_v_to-fn.IN" -> _expert_n_1 [label="ARG1-fn.NotExist"]
	_in_p -> ellipsis_ref [label=ARG1]
	"_mean_v_1-fn.NF" -> generic_entity [label="ARG2-fn.Theme"]
	compound -> "named(Carolina)" [label=ARG1]
	_be_v_there -> _state_n_of [label=ARG1]
	neg -> _be_v_there [label=ARG1]
	"_mean_v_1-fn.NF" -> _test_n_of [label="ARG1-fn.Agent"]
	proper_q -> "named(Carolina)" [label=BV]
	proper_q -> "named(South)" [label=BV]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.NotExist"]
}
