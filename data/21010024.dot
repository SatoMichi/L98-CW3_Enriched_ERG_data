digraph {
	node [shape=circle style=filled]
	_if_x_then -> neg [label=ARG2]
	_without_p -> _support_n_of [label=ARG2]
	_support_n_of -> _machinist_n_1 [label=ARG1]
	_the_q -> _machinist_n_1 [label=BV]
	parg_d -> _compromise_n_1 [label=ARG2]
	parg_d -> "_reach_v_1-fn.Competition" [label=ARG1]
	neg -> "_can_v_modal-fn.Reliance" [label=ARG1]
	"_can_v_modal-fn.Reliance" -> "_reach_v_1-fn.Competition" [label="ARG1-fn.Protagonist"]
	_a_q -> _transaction_n_1 [label=BV]
	"_maintain_v_1-fn.Competition" -> _pilot_n_of [label="ARG1-fn.Participant_1"]
	"_can_v_modal-fn.Reliance" -> "_do_v_1-fn.Piracy" [label="ARG1-fn.Protagonist"]
	pronoun_q -> pron [label=BV]
	"_reach_v_1-fn.Competition" -> _compromise_n_1 [label="ARG2-fn.Participant_2"]
	_without_p -> "_do_v_1-fn.Piracy" [label=ARG1]
	_the_q -> _support_n_of [label=BV]
	"_do_v_1-fn.Piracy" -> pron [label="ARG1-fn.Perpetrator"]
	"_maintain_v_1-fn.Competition" -> "_can_v_modal-fn.Reliance" [label="ARG2-fn.Participant_2"]
	"_do_v_1-fn.Piracy" -> _transaction_n_1 [label="ARG2-fn.Vehicle"]
	_the_q -> _pilot_n_of [label=BV]
	_if_x_then -> "_maintain_v_1-fn.Competition" [label=ARG1]
	_a_q -> _compromise_n_1 [label=BV]
}
