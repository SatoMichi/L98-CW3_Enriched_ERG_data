digraph {
	node [shape=circle style=filled]
	compound -> "named(Industries)" [label=ARG1]
	"_understand_v_by-fn.Grasp" -> _perspective_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(Kageyama)" [label=ARG1]
	poss -> pron [label=ARG2]
	proper_q -> "named(Kotobuki)" [label=BV]
	poss -> _boss_n_1 [label=ARG2]
	"_suggest_v_to-fn.Statement" -> "_have_v_1-fn.IN" [label="ARG2-fn.Topic"]
	compound -> "named(Electronics)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _worker_n_1 [label=BV]
	udef_q -> _difficulty_n_1 [label=BV]
	"_have_v_1-fn.IN" -> _worker_n_1 [label="ARG1-fn.Pivot"]
	udef_q -> _mister_n_1 [label=BV]
	compound -> "named(Kotobuki)" [label=ARG2]
	"_understand_v_by-fn.Grasp" -> _worker_n_1 [label="ARG1-fn.Agent"]
	"_have_v_1-fn.IN" -> _difficulty_n_1 [label="ARG2-fn.Theme"]
	poss -> _perspective_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_have_v_1-fn.IN" -> "_understand_v_by-fn.Grasp" [label="ARG3-fn.NotExist"]
	proper_q -> "named(Kageyama)" [label=BV]
	proper_q -> "named(Electronics)" [label=BV]
	_foreign_a_1 -> _boss_n_1 [label=ARG1]
	"_suggest_v_to-fn.Statement" -> "named(Kageyama)" [label="ARG1-fn.Agent"]
	def_explicit_q -> _perspective_n_1 [label=BV]
	compound -> _worker_n_1 [label=ARG1]
	proper_q -> "named(Industries)" [label=BV]
	def_explicit_q -> _boss_n_1 [label=BV]
}
