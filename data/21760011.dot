digraph {
	node [shape=circle style=filled]
	parg_d -> "_found_v_1-fn.Intentionally_create" [label=ARG1]
	_former_a_1 -> "_prime+minister_n_of" [label=ARG1]
	_if_x_then -> "_want_v_1-fn.Desiring" [label=ARG2]
	_willing_a_1 -> _do_v_1 [label=ARG2]
	_son_n_of -> _and_c [label=ARG1]
	_must_v_modal -> _willing_a_1 [label=ARG1]
	_if_x_then -> _then_a_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	parg_d -> "named(Workers)" [label=ARG2]
	_do_v_1 -> part_of [label=ARG2]
	appos -> "named(Jr.)" [label=ARG1]
	poss -> pron [label=ARG2]
	_all_q -> part_of [label=BV]
	_the_q -> "_prime+minister_n_of" [label=BV]
	_in_p_temp -> "yofc(1980)" [label=ARG2]
	compound -> "named(Verwoerd)" [label=ARG1]
	focus_d -> _must_v_modal [label=ARG2]
	appos -> _son_n_of [label=ARG2]
	proper_q -> "named(Hendrik)" [label=BV]
	"_want_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	compound -> "named(Orange)" [label=ARG2]
	compound -> "named(Jr.)" [label=ARG1]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_own_a_1 -> _nation_n_of [label=ARG1]
	proper_q -> "named(Verwoerd)" [label=BV]
	poss -> _nation_n_of [label=ARG1]
	def_explicit_q -> _nation_n_of [label=BV]
	"_want_v_1-fn.Desiring" -> "_have_v_1-fn.IN" [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> "named(Jr.)" [label="ARG1-fn.Agent"]
	refl_mod -> pron [label=ARG2]
	_do_v_1 -> pron [label=ARG1]
	"_have_v_1-fn.IN" -> _nation_n_of [label="ARG2-fn.Theme"]
	proper_q -> "named(Jr.)" [label=BV]
	_willing_a_1 -> pron [label=ARG1]
	refl_mod -> _do_v_1 [label=ARG1]
	udef_q -> _son_n_of [label=BV]
	proper_q -> "named(Orange)" [label=BV]
	compound -> "named(Workers)" [label=ARG1]
	_in_p_temp -> "_found_v_1-fn.Intentionally_create" [label=ARG1]
	_then_a_1 -> _must_v_modal [label=ARG1]
	compound -> "named(Hendrik)" [label=ARG2]
	_the_q -> _leader_n_of [label=BV]
	proper_q -> "yofc(1980)" [label=BV]
	part_of -> _work_n_1 [label=ARG1]
	_leader_n_of -> "named(Workers)" [label=ARG1]
	"_found_v_1-fn.Intentionally_create" -> "named(Workers)" [label="ARG2-fn.NotExist"]
	udef_q -> _and_c [label=BV]
	_the_q -> "named(Workers)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_the_q -> _work_n_1 [label=BV]
}
