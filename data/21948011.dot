digraph {
	node [shape=circle style=filled]
	part_of -> pron [label=ARG1]
	_all_q -> part_of [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	compound -> "named(Street)" [label=ARG1]
	proper_q -> "named(Wall)" [label=BV]
	"_as+far+as_x" -> _low_a_on [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_go_v_1-fn.Motion" -> "named(Street)" [label="ARG1-fn.NotExist"]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _base_n_1 [label=BV]
	focus_d -> _and_c [label=ARG2]
	_make_v_1 -> _firm_n_1 [label=ARG1]
	compound -> _base_n_1 [label=ARG2]
	proper_q -> "named(Street)" [label=BV]
	compound -> _salary_n_1 [label=ARG1]
	_of_p -> _salary_n_1 [label=ARG1]
	_low_a_on -> generic_entity [label=ARG1]
	_on_p -> part_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> "named(Montgoris)" [label=ARG1]
	_pretty_x -> _low_a_on [label=ARG1]
	compound -> "named(Wall)" [label=ARG2]
	_a_q -> _salary_n_1 [label=BV]
	proper_q -> "named(Montgoris)" [label=BV]
	_on_p -> _salary_n_1 [label=ARG2]
	_no_q -> thing [label=BV]
	"_say_v_to-fn.IN" -> "named(Montgoris)" [label="ARG1-fn.Agent"]
	_if_x_then -> _on_p [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	_if_x_then -> _make_v_1 [label=ARG2]
	_the_q -> _firm_n_1 [label=BV]
	_of_p -> _dollar_n_1 [label=ARG2]
	"_as+far+as_x" -> "_go_v_1-fn.Motion" [label=ARG2]
	_make_v_1 -> thing [label=ARG2]
	"card(200,000)" -> _dollar_n_1 [label=ARG1]
	udef_q -> _dollar_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
