digraph {
	node [shape=circle style=filled]
	_the_q -> _agency_n_1 [label=BV]
	compound -> _appeal_n_1 [label=ARG2]
	_source_n_of -> "_bailouts/nns_u_unknown" [label=ARG1]
	compound -> _source_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> _agency_n_1 [label="ARG1-fn.Agent"]
	"_favor_v_1-fn.Partiality" -> _ruling_n_1 [label="ARG1-fn.Experiencer"]
	"_say_v_to-fn.IN" -> "_threaten_v_1-fn.NF" [label="ARG2-fn.Topic"]
	"_transform_v_into-fn.NF" -> _ruling_n_1 [label="ARG1-fn.Agent"]
	_of_p -> "_insurer/nn_u_unknown" [label=ARG1]
	udef_q -> _end_n_of [label=BV]
	udef_q -> _court_n_of [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	_the_q -> _court_n_of [label=BV]
	compound -> _plan_n_1 [label=ARG1]
	_high_a_1 -> _court_n_of [label=ARG1]
	compound -> _pension_n_1 [label=ARG2]
	def_explicit_q -> _appeal_n_1 [label=BV]
	"_transform_v_into-fn.NF" -> _agency_n_1 [label="ARG2-fn.Patient"]
	proper_q -> "named(LTV)" [label=BV]
	udef_q -> "_bailouts/nns_u_unknown" [label=BV]
	"_favor_v_1-fn.Partiality" -> "named(LTV)" [label="ARG2-fn.Attribute"]
	pronoun_q -> pron [label=BV]
	_a_q -> "_insurer/nn_u_unknown" [label=BV]
	udef_q -> _appeal_n_1 [label=BV]
	_to_p -> _appeal_n_1 [label=ARG1]
	compound -> _ruling_n_1 [label=ARG1]
	poss -> _appeal_n_1 [label=ARG1]
	"_transform_v_into-fn.NF" -> _source_n_of [label="ARG3-fn.Result"]
	"_threaten_v_1-fn.NF" -> "_transform_v_into-fn.NF" [label="ARG2-fn.Experiencer"]
	_from_p -> "_transform_v_into-fn.NF" [label=ARG1]
	udef_q -> _plan_n_1 [label=BV]
	udef_q -> _pension_n_1 [label=BV]
	_a_q -> _source_n_of [label=BV]
	compound -> _industry_n_1 [label=ARG2]
	compound -> _end_n_of [label=ARG2]
	"_threaten_v_1-fn.NF" -> _ruling_n_1 [label="ARG1-fn.Stimulus"]
	compound -> "_bailouts/nns_u_unknown" [label=ARG1]
	_troubled_a_1 -> _plan_n_1 [label=ARG1]
	_federal_a_1 -> _court_n_of [label=ARG1]
	_from_p -> "_insurer/nn_u_unknown" [label=ARG2]
	_of_p -> _plan_n_1 [label=ARG2]
	_to_p -> _court_n_of [label=ARG2]
	_open_a_1 -> _end_n_of [label=ARG1]
	udef_q -> _industry_n_1 [label=BV]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _court_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_in_p_state -> _appeal_n_1 [label=ARG2]
	_the_q -> _ruling_n_1 [label=BV]
}
