digraph {
	node [shape=circle style=filled]
	_of_p -> "named(Associates)" [label=ARG2]
	proper_q -> "named(Boston)" [label=BV]
	appos -> _firm_n_1 [label=ARG2]
	nominalization -> _would_v_modal [label=ARG1]
	_from_p -> _mail_n_1 [label=ARG2]
	appos -> "named(Associates)" [label=ARG1]
	_for_p -> reason [label=ARG2]
	compound -> "named(Boston)" [label=ARG2]
	neg -> "_make_v_1-fn.IN" [label=ARG1]
	_a_q -> _firm_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Bronner)" [label="ARG1-fn.Agent"]
	"_make_v_1-fn.IN" -> nominalization [label="ARG1-fn.NotExist"]
	_of_p -> "named(Bronner)" [label=ARG1]
	_close_v_off -> pron [label=ARG2]
	_from_p -> _close_v_off [label=ARG1]
	"_a+priori_a_1" -> "_want_v_1-fn.Desiring" [label=ARG1]
	_direct_a_1 -> _mail_n_1 [label=ARG1]
	proper_q -> "named(Michael)" [label=BV]
	udef_q -> "_directmail/nn_u_unknown" [label=BV]
	_close_v_off -> person [label=ARG1]
	which_q -> reason [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _mail_n_1 [label=BV]
	_would_v_modal -> "_want_v_1-fn.Desiring" [label=ARG1]
	"_want_v_1-fn.Desiring" -> _close_v_off [label="ARG2-fn.Theme"]
	"_make_v_1-fn.IN" -> _sense_n_of [label="ARG2-fn.Product"]
	compound -> _firm_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	compound -> "named(Bronner)" [label=ARG2]
	_any_q -> _sense_n_of [label=BV]
	"_say_v_to-fn.IN" -> neg [label="ARG2-fn.Topic"]
	compound -> "named(Associates)" [label=ARG1]
	compound -> "_directmail/nn_u_unknown" [label=ARG2]
	_any_q -> person [label=BV]
	proper_q -> "named(Associates)" [label=BV]
	compound -> "named(Slosberg)" [label=ARG1]
	compound -> "named(Michael)" [label=ARG2]
	_for_p -> "_want_v_1-fn.Desiring" [label=ARG1]
	focus_d -> "_make_v_1-fn.IN" [label=ARG2]
	proper_q -> "named(Slosberg)" [label=BV]
	"_want_v_1-fn.Desiring" -> person [label="ARG1-fn.Pivot"]
	proper_q -> "named(Bronner)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
