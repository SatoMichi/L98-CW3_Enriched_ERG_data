digraph {
	node [shape=circle style=filled]
	"card(16-)" -> _bit_n_1 [label=ARG1]
	focus_d -> _since_p [label=ARG2]
	focus_d -> "_corner_v_1-fn.Halt" [label=ARG1]
	_a_q -> _part_n_1 [label=BV]
	_previous_a_1 -> _model_n_of [label=ARG1]
	_with_p -> _generation_n_of [label=ARG2]
	parg_d -> _software_n_1 [label=ARG2]
	"card(32-)" -> _bit_n_1 [label=ARG1]
	_for_p -> "_write_v_to-fn.Cause_to_end" [label=ARG1]
	_successive_a_1 -> _generation_n_of [label=ARG1]
	_then_p_temp -> time_n [label=ARG1]
	"_corner_v_1-fn.Halt" -> _part_n_1 [label="ARG2-fn.Place"]
	parg_d -> "_write_v_to-fn.Cause_to_end" [label=ARG1]
	_for_p -> _model_n_of [label=ARG2]
	_all_q -> part_of [label=BV]
	udef_q -> _and_c [label=BV]
	compound -> _and_c [label=ARG2]
	_the_q -> _market_n_1 [label=BV]
	udef_q -> _generation_n_of [label=BV]
	proper_q -> "named(Intel)" [label=BV]
	udef_q -> _model_n_of [label=BV]
	"_run_v_1-fn.Competition" -> part_of [label="ARG1-fn.Participant_1"]
	udef_q -> _bit_n_1 [label=BV]
	_since_p -> time_n [label=ARG2]
	part_of -> _chip_n_1 [label=ARG1]
	"_corner_v_1-fn.Halt" -> "named(Intel)" [label="ARG1-fn.Purpose"]
	_since_p -> "_corner_v_1-fn.Halt" [label=ARG1]
	compound -> _chip_n_1 [label=ARG1]
	"_can_v_modal-fn.Reliance" -> "_run_v_1-fn.Competition" [label="ARG1-fn.Protagonist"]
	"_write_v_to-fn.Cause_to_end" -> _software_n_1 [label="ARG2-fn.Means"]
	udef_q -> _chip_n_1 [label=BV]
	_large_a_1 -> _part_n_1 [label=ARG1]
	udef_q -> _software_n_1 [label=BV]
	_of_p -> _market_n_1 [label=ARG2]
	"_run_v_1-fn.Competition" -> _software_n_1 [label="ARG2-fn.Participant_2"]
	def_implicit_q -> time_n [label=BV]
	_of_p -> _part_n_1 [label=ARG1]
	_generation_n_of -> _chip_n_1 [label=ARG1]
	_with_p -> "_corner_v_1-fn.Halt" [label=ARG1]
}
