digraph {
	node [shape=circle style=filled]
	_for_p -> _sweet_a_to [label=ARG1]
	_for_p -> "named(Lincoln)" [label=ARG2]
	_if_x_then -> _then_a_1 [label=ARG1]
	_when_x_subord -> _sweet_a_to [label=ARG1]
	poss -> pron [label=ARG2]
	_sweet_a_to -> pron [label=ARG1]
	"_hate_v_1-fn.Experiencer_obj" -> pron [label="ARG2-fn.Attribute"]
	_as_x_prd -> _for_p [label=ARG2]
	_for_p -> reason [label=ARG2]
	comp_so -> _sweet_a_to [label=ARG1]
	every_q -> person [label=BV]
	"_hate_v_1-fn.Experiencer_obj" -> person [label="ARG1-fn.Experiencer"]
	_as_x_prd -> _if_x_then [label=ARG1]
	_when_x_subord -> "_hate_v_1-fn.Experiencer_obj" [label=ARG2]
	proper_q -> "named(Lincoln)" [label=BV]
	_if_x_then -> neg [label=ARG2]
	_sweet_a_to -> _sister_n_of [label=ARG2]
	which_q -> reason [label=BV]
	pronoun_q -> pron [label=BV]
	"_guess_v_1-fn.Estimating" -> pron [label="ARG1-fn.Agent"]
	neg -> "_going+to_v_qmodal" [label=ARG1]
	_else_a_1 -> person [label=ARG1]
	"_guess_v_1-fn.Estimating" -> _when_x_subord [label="ARG2-fn.Theme"]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.NotExist"]
	poss -> _sister_n_of [label=ARG1]
	_then_a_1 -> neg [label=ARG1]
	"_going+to_v_qmodal" -> "_tell_v_1-fn.Telling" [label=ARG1]
	_can_v_modal -> "_guess_v_1-fn.Estimating" [label=ARG1]
	def_explicit_q -> _sister_n_of [label=BV]
	neg -> _can_v_modal [label=ARG1]
}
