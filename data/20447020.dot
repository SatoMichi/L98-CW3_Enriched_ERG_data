digraph {
	node [shape=circle style=filled]
	compound -> _market_n_1 [label=ARG2]
	_for_p -> _effort_n_1 [label=ARG1]
	"_suggest_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_just_x_deg -> udef_q [label=ARG1]
	"_relieve_v_1-fn.NF" -> _need_n_of [label="ARG2-fn.Source"]
	compound -> _open_v_cause [label=ARG1]
	poss -> pron [label=ARG2]
	_for_p -> _need_n_of [label=ARG1]
	def_explicit_q -> _export_n_of [label=BV]
	nominalization -> _borrow_v_from [label=ARG1]
	poss -> _export_n_of [label=ARG1]
	_export_n_of -> _service_n_1 [label=ARG1]
	_for_p -> _and_c [label=ARG2]
	udef_q -> _market_n_1 [label=BV]
	def_explicit_q -> _import_n_of [label=BV]
	neg -> "_relieve_v_1-fn.NF" [label=ARG1]
	"_suggest_v_to-fn.Statement" -> _be_v_itcleft [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	_open_v_cause -> _effort_n_1 [label=ARG1]
	udef_q -> _service_n_1 [label=BV]
	udef_q -> _goods_n_1 [label=BV]
	_the_q -> _need_n_of [label=BV]
	_be_v_itcleft -> "_and+not_c" [label=ARG1]
	udef_q -> nominalization [label=BV]
	def_explicit_q -> _effort_n_1 [label=BV]
	poss -> _effort_n_1 [label=ARG1]
	poss -> _import_n_of [label=ARG1]
	_finance_v_1 -> "_and+not_c" [label=ARG1]
	_import_n_of -> _goods_n_1 [label=ARG1]
	"_relieve_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	udef_q -> "_and+not_c" [label=BV]
	udef_q -> _and_c [label=BV]
	_finance_v_1 -> _import_n_of [label=ARG2]
	_be_v_itcleft -> _finance_v_1 [label=ARG2]
}
