digraph {
	node [shape=circle style=filled]
	"_genetically/rb_u_unknown" -> _engineer_v_1 [label=ARG1]
	poss -> _protein_n_1 [label=ARG1]
	_the_q -> "_yeast/nn_u_unknown" [label=BV]
	poss -> pron [label=ARG2]
	appos -> _firm_n_1 [label=ARG2]
	compound -> "named(Chiron)" [label=ARG1]
	_a_q -> _firm_n_1 [label=BV]
	compound -> _corporation_n_1 [label=ARG2]
	proper_q -> "named(California)" [label=BV]
	parg_d -> "_yeast/nn_u_unknown" [label=ARG2]
	"_make_v_1-fn.Intentionally_create" -> _protein_n_1 [label="ARG2-fn.Product"]
	parg_d -> _protein_n_1 [label=ARG2]
	_engineer_v_1 -> _protein_n_1 [label=ARG2]
	udef_q -> _corporation_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> "named(California)" [label=ARG1]
	"_see_v_1-fn.Grasp" -> "named(Chiron)" [label="ARG1-fn.Experiencer"]
	parg_d -> "_use_v_1-fn.IN" [label=ARG1]
	"_use_v_1-fn.IN" -> "_yeast/nn_u_unknown" [label="ARG2-fn.NotExist"]
	parg_d -> _engineer_v_1 [label=ARG1]
	compound -> "named(Emeryville)" [label=ARG2]
	proper_q -> "named(Emeryville)" [label=BV]
	compound -> "_yeast/nn_u_unknown" [label=ARG1]
	"_see_v_1-fn.Grasp" -> _can_v_modal [label="ARG2-fn.Stimulus"]
	compound -> _firm_n_1 [label=ARG1]
	def_explicit_q -> _protein_n_1 [label=BV]
	proper_q -> "named(Chiron)" [label=BV]
	"_use_v_1-fn.IN" -> "_make_v_1-fn.Intentionally_create" [label="ARG3-fn.NotExist"]
	compound -> "_biotechnology/nn_u_unknown" [label=ARG2]
	compound -> "named(Phillips)" [label=ARG2]
	_human_a_1 -> _protein_n_1 [label=ARG1]
	proper_q -> "named(Phillips)" [label=BV]
	_can_v_modal -> "_use_v_1-fn.IN" [label=ARG1]
	udef_q -> "_biotechnology/nn_u_unknown" [label=BV]
	appos -> "named(Chiron)" [label=ARG1]
}
