digraph {
	node [shape=circle style=filled]
	"_add_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	proper_q -> "named(Ackerman)" [label=BV]
	neg -> "_design_v_1-fn.Activity_stop" [label=ARG1]
	parg_d -> pron [label=ARG2]
	"_take_v_1-fn.Commerce_buy" -> pron [label="ARG1-fn.Buyer"]
	"_do_v_1-fn.State_continue" -> thing [label="ARG2-fn.State"]
	compound -> "named(Ackerman)" [label=ARG1]
	"_do_v_1-fn.State_continue" -> _with_p [label="ARG3-fn.Time"]
	_no_q -> thing [label=BV]
	"_have_v_1-fn.State_continue" -> thing [label="ARG2-fn.State"]
	pronoun_q -> pron [label=BV]
	parg_d -> "_design_v_1-fn.Activity_stop" [label=ARG1]
	"_design_v_1-fn.Activity_stop" -> pron [label="ARG2-fn.Place"]
	_this_q_dem -> generic_entity [label=BV]
	"_have_v_1-fn.State_continue" -> generic_entity [label="ARG1-fn.Entity"]
	_particular_a_1 -> "_design_v_1-fn.Activity_stop" [label=ARG1]
	"_design_v_1-fn.Activity_stop" -> subord [label="ARG3-fn.Time"]
	_with_p -> "named(Ackerman)" [label=ARG2]
	"_take_v_1-fn.Commerce_buy" -> _company_n_of [label="ARG2-fn.Goods"]
	subord -> "_take_v_1-fn.Commerce_buy" [label=ARG1]
	proper_q -> "named(Marty)" [label=BV]
	subord -> _private_a_1 [label=ARG2]
	_the_q -> _company_n_of [label=BV]
	compound -> "named(Marty)" [label=ARG2]
	_with_p -> thing [label=ARG1]
	"_add_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
}
