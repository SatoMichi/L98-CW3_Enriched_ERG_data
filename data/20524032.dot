digraph {
	node [shape=circle style=filled]
	_a_q -> _recovery_n_1 [label=BV]
	_under_p -> _secure_a_1 [label=ARG1]
	def_explicit_q -> _turmoil_n_1 [label=BV]
	parg_d -> "_shake_v_1-fn.Experiencer_obj" [label=ARG1]
	parg_d -> _investor_n_1 [label=ARG2]
	udef_q -> _investor_n_1 [label=BV]
	_can_v_modal -> "_prove_v_to-fn.Reasoning" [label=ARG1]
	_secure_a_1 -> pron [label=ARG1]
	neg -> _may_v_modal [label=ARG1]
	udef_q -> _sovereignty_n_1 [label=BV]
	_until_x_h -> neg [label=ARG1]
	compound -> "named(Hong)" [label=ARG2]
	poss -> _turmoil_n_1 [label=ARG1]
	_under_p -> _sovereignty_n_1 [label=ARG2]
	"_prove_v_to-fn.Reasoning" -> _secure_a_1 [label="ARG3-fn.NotExist"]
	poss -> "named(China)" [label=ARG2]
	proper_q -> "named(Hong)" [label=BV]
	_chinese_a_1 -> _sovereignty_n_1 [label=ARG1]
	_genuine_a_1 -> _recovery_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_until_x_h -> _can_v_modal [label=ARG2]
	_arrive_v_1 -> _recovery_n_1 [label=ARG1]
	"_shake_v_1-fn.Experiencer_obj" -> _turmoil_n_1 [label="ARG1-fn.Stimulus"]
	"_prove_v_to-fn.Reasoning" -> "named(Kong)" [label="ARG1-fn.NotExist"]
	"_prove_v_to-fn.Reasoning" -> pron [label="ARG2-fn.Theme"]
	proper_q -> "named(Kong)" [label=BV]
	_with_x_subord -> "_say_v_to-fn.IN" [label=ARG1]
	_local_a_1 -> _investor_n_1 [label=ARG1]
	_political_a_1 -> _turmoil_n_1 [label=ARG1]
	proper_q -> "named(China)" [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_with_x_subord -> "_shake_v_1-fn.Experiencer_obj" [label=ARG2]
	_economic_a_1 -> _turmoil_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> _until_x_h [label="ARG2-fn.NotExist"]
	"_shake_v_1-fn.Experiencer_obj" -> _investor_n_1 [label="ARG2-fn.Experiencer"]
	compound -> "named(Kong)" [label=ARG1]
	_may_v_modal -> _arrive_v_1 [label=ARG1]
}
