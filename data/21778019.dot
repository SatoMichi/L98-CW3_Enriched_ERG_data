digraph {
	node [shape=circle style=filled]
	_toss_v_1 -> _block_n_of [label=ARG2]
	focus_d -> loc_nonsp [label=ARG2]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	"_get_v_state-fn.IN" -> _strong_a_1 [label="ARG2-fn.Patient"]
	compound -> _block_n_of [label=ARG1]
	"_as+though_x" -> _be_v_id [label=ARG2]
	focus_d -> "_get_v_state-fn.IN" [label=ARG1]
	_just_a_1 -> "_get_v_state-fn.IN" [label=ARG1]
	_be_v_id -> _block_n_of [label=ARG2]
	"_start_v_1-fn.Process_start" -> _shake_v_1 [label="ARG1-fn.NotExist"]
	compound -> _toy_n_1 [label=ARG2]
	"_as+though_x" -> "_start_v_1-fn.Process_start" [label=ARG1]
	loc_nonsp -> _time_n_of [label=ARG2]
	_this_q_dem -> _time_n_of [label=BV]
	_be_v_id -> pron [label=ARG1]
	_up_p -> _shake_v_1 [label=ARG1]
	parg_d -> _toss_v_1 [label=ARG1]
	comp -> _strong_a_1 [label=ARG1]
	def_explicit_q -> _block_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _building_n_1 [label=BV]
	_violent_a_1 -> _shake_v_1 [label=ARG1]
	poss -> _block_n_of [label=ARG1]
	_a_q -> _child_n_1 [label=BV]
	udef_q -> _toy_n_1 [label=BV]
	loc_nonsp -> "_get_v_state-fn.IN" [label=ARG1]
	_shake_v_1 -> _building_n_1 [label=ARG1]
	_strong_a_1 -> pron [label=ARG1]
	poss -> _child_n_1 [label=ARG2]
	parg_d -> _block_n_of [label=ARG2]
	_down_p -> _shake_v_1 [label=ARG1]
}
