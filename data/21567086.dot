digraph {
	node [shape=circle style=filled]
	_other_a_1 -> _case_n_of [label=ARG1]
	_show_v_1 -> "_apply_v_2-fn.Using" [label=ARG2]
	focus_d -> "_apply_v_2-fn.Using" [label=ARG1]
	"_sound_v_seem-to-fn.Appearance" -> pron [label="ARG1-fn.NotExist"]
	_that_q_dem -> generic_entity [label=BV]
	"_apply_v_2-fn.Using" -> _saw_n_1 [label="ARG1-fn.NotExist"]
	"_good_a_at-for-of" -> pron [label=ARG1]
	focus_d -> generic_entity [label=ARG2]
	_probable_a_1 -> ellipsis_ref [label=ARG1]
	ellipsis_ref -> pron [label=ARG1]
	_show_v_1 -> _case_n_of [label=ARG1]
	_if_x_then -> _probable_a_1 [label=ARG1]
	_colon_p_namely -> _show_v_1 [label=ARG1]
	"_in+order+to_x" -> _show_v_1 [label=ARG2]
	"_apply_v_2-fn.Using" -> generic_entity [label="ARG2-fn.Theme"]
	pronoun_q -> pron [label=BV]
	"_in+order+to_x" -> _go_v_1 [label=ARG1]
	"_sound_v_seem-to-fn.Appearance" -> "_good_a_at-for-of" [label="ARG2-fn.Stimulus"]
	_old_a_1 -> _saw_n_1 [label=ARG1]
	_go_v_1 -> _case_n_of [label=ARG1]
	_a_q -> _saw_n_1 [label=BV]
	_if_x_then -> "_sound_v_seem-to-fn.Appearance" [label=ARG2]
	udef_q -> _case_n_of [label=BV]
	comp_too -> "_good_a_at-for-of" [label=ARG1]
	comp_too -> _true_a_of [label=ARG2]
	_still_a_1 -> "_apply_v_2-fn.Using" [label=ARG1]
}
