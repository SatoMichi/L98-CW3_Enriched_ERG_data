digraph {
	node [shape=circle style=filled]
	loc_nonsp -> "_inform_v_1-fn.Telling" [label=ARG1]
	"_inform_v_1-fn.Telling" -> _closed_a_1 [label="ARG3-fn.Topic"]
	focus_d -> loc_nonsp [label=ARG2]
	focus_d -> _open_a_1 [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	compound -> "named(San)" [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_the_q -> _bridge_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Schumacher)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Schumacher)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	loc_nonsp -> _morning_n_of [label=ARG2]
	compound -> "named(Schumacher)" [label=ARG1]
	parenthetical -> _morning_n_of [label=ARG1]
	focus_d -> _and_c [label=ARG2]
	compound -> "named(Mateo)" [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	parg_d -> pron [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_inform_v_1-fn.Telling" -> pron [label="ARG2-fn.Recipient"]
	compound -> _bridge_n_1 [label=ARG1]
	proper_q -> "named(Mateo)" [label=BV]
	_now_a_1 -> time_n [label=ARG1]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	parenthetical -> "dofw(Wed)" [label=ARG2]
	_open_a_1 -> _bridge_n_1 [label=ARG1]
	focus_d -> "_inform_v_1-fn.Telling" [label=ARG1]
	_closed_a_1 -> pron [label=ARG1]
	loc_nonsp -> _open_a_1 [label=ARG1]
	proper_q -> "named(San)" [label=BV]
	_this_q_dem -> _morning_n_of [label=BV]
	udef_q -> "dofw(Wed)" [label=BV]
	parg_d -> "_inform_v_1-fn.Telling" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
