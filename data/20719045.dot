digraph {
	node [shape=circle style=filled]
	_the_q -> "named(Bourse)" [label=BV]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.Topic"]
	neg -> _work_v_1 [label=ARG1]
	_here_a_1 -> place_n [label=ARG1]
	_for_p -> "named(Bourse)" [label=ARG2]
	_a_q -> "_spokeswoman/nn_u_unknown" [label=BV]
	_happy_a_with -> pron [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	"_tell_v_1-fn.Telling" -> person [label="ARG1-fn.Agent"]
	_work_v_1 -> _system_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_tell_v_1-fn.Telling" -> _happy_a_with [label="ARG3-fn.Recipient"]
	_around_p -> place_n [label=ARG2]
	proper_q -> "named(Brussels)" [label=BV]
	_happy_a_with -> neg [label=ARG2]
	_for_p -> "_spokeswoman/nn_u_unknown" [label=ARG1]
	"_say_v_to-fn.IN" -> "_spokeswoman/nn_u_unknown" [label="ARG1-fn.Agent"]
	_no_q -> person [label=BV]
	_around_p -> person [label=ARG1]
	_the_q -> _system_n_of [label=BV]
	_colon_p_namely -> "_spokeswoman/nn_u_unknown" [label=ARG1]
	"_say_v_to-fn.IN" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.Topic"]
	compound -> "named(Bourse)" [label=ARG1]
	compound -> "named(Brussels)" [label=ARG2]
}
