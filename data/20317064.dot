digraph {
	node [shape=circle style=filled]
	udef_q -> _expansion_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_see_v_1-fn.Expectation" -> _program_n_of [label="ARG2-fn.Phenomenon"]
	compound -> "named(Bache)" [label=ARG1]
	poss -> "named(Rodgers)" [label=ARG1]
	compound -> "named(Rodgers)" [label=ARG1]
	compound -> _capacity_n_1 [label=ARG2]
	"_say_v_to-fn.Taking" -> neg [label="ARG2-fn.Theme"]
	udef_q -> _mister_n_1 [label=BV]
	"_see_v_1-fn.Expectation" -> "_hinder_v_1-fn.Relative_time" [label="ARG3-fn.Degree"]
	poss -> _industry_n_1 [label=ARG2]
	udef_q -> _takeover_n_of [label=BV]
	poss -> _program_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _program_n_of [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Rodgers)" [label="ARG1-fn.Agent"]
	compound -> "named(Prudential-)" [label=ARG2]
	neg -> "_see_v_1-fn.Expectation" [label=ARG1]
	proper_q -> "named(Prudential-)" [label=BV]
	"_see_v_1-fn.Expectation" -> pron [label="ARG1-fn.Cognizer"]
	def_explicit_q -> _program_n_of [label=BV]
	compound -> _expansion_n_1 [label=ARG1]
	udef_q -> _capacity_n_1 [label=BV]
	"_hinder_v_1-fn.Relative_time" -> _program_n_of [label="ARG1-fn.Focal_occasion"]
	compound -> _takeover_n_of [label=ARG2]
	poss -> "named(Bache)" [label=ARG2]
	def_explicit_q -> "named(Rodgers)" [label=BV]
	proper_q -> "named(Bache)" [label=BV]
	udef_q -> _activity_n_1 [label=BV]
	_the_q -> _industry_n_1 [label=BV]
	"_hinder_v_1-fn.Relative_time" -> _activity_n_1 [label="ARG2-fn.Landmark_occasion"]
	compound -> _activity_n_1 [label=ARG1]
}
