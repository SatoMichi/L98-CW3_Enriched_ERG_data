digraph {
	node [shape=circle style=filled]
	"_run_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_as_x_subord -> "_try_v_1-fn.Competition" [label=ARG2]
	"_in+order+to_x" -> "_run_v_1-fn.Competition" [label=ARG1]
	poss -> _foot_n_1 [label=ARG1]
	"_bounce_v_cause-fn.Cause_motion" -> pron [label="ARG2-fn.Theme"]
	def_explicit_q -> _foot_n_1 [label=BV]
	"_throw_v_1-fn.Competition" -> _in_p [label="ARG3-fn.Participants"]
	"_try_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_get_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_next_a_1 -> _tremor_n_1 [label=ARG1]
	"_bounce_v_cause-fn.Cause_motion" -> _tremor_n_1 [label="ARG1-fn.Agent"]
	"_throw_v_1-fn.Competition" -> pron [label="ARG2-fn.Participant_2"]
	pronoun_q -> pron [label=BV]
	"_get_v_1-fn.Competition" -> "named(Mame)" [label="ARG2-fn.Participant_2"]
	"_get_v_state-fn.Residence" -> pron [label="ARG1-fn.Resident"]
	_into_p -> "_run_v_1-fn.Competition" [label=ARG1]
	poss -> pron [label=ARG2]
	"_throw_v_1-fn.Competition" -> _tremor_n_1 [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Mame)" [label=BV]
	_to_p -> pron [label=ARG1]
	_to_p -> _foot_n_1 [label=ARG2]
	_in_p -> _air_n_1 [label=ARG2]
	_the_q -> _tremor_n_1 [label=BV]
	"_in+order+to_x" -> "_get_v_1-fn.Competition" [label=ARG2]
	_the_q -> _house_n_of [label=BV]
	"_get_v_state-fn.Residence" -> _to_p [label="ARG2-fn.Location"]
	_as_x_subord -> "_bounce_v_cause-fn.Cause_motion" [label=ARG1]
	"_try_v_1-fn.Competition" -> "_get_v_state-fn.Residence" [label="ARG2-fn.Participant_2"]
	_into_p -> _house_n_of [label=ARG2]
	_in_p -> pron [label=ARG1]
	_the_q -> _air_n_1 [label=BV]
}
