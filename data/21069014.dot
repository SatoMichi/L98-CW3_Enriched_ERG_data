digraph {
	node [shape=circle style=filled]
	_with_p -> "named(Securities)" [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "named(Gilbert)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Securities)" [label=BV]
	focus_d -> "_think_v_1-fn.Attempt_suasion" [label=ARG2]
	_still_a_1 -> "_think_v_1-fn.Attempt_suasion" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	"_think_v_1-fn.Attempt_suasion" -> _poor_a_1 [label="ARG2-fn.Addressee"]
	_in_p -> "named(Francisco)" [label=ARG2]
	_with_p -> _analyst_n_1 [label=ARG1]
	compound -> "named(Montgomery)" [label=ARG2]
	appos -> "named(Gilbert)" [label=ARG1]
	_a_q -> _analyst_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Denise)" [label=BV]
	"_think_v_1-fn.Attempt_suasion" -> pron [label="ARG1-fn.Content"]
	appos -> _analyst_n_1 [label=ARG2]
	_poor_a_1 -> _fundamental_n_1 [label=ARG1]
	compound -> "named(Francisco)" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "_think_v_1-fn.Attempt_suasion" [label="ARG2-fn.Requirement"]
	proper_q -> "named(Gilbert)" [label=BV]
	compound -> "named(Denise)" [label=ARG2]
	compound -> "named(San)" [label=ARG2]
	proper_q -> "named(Montgomery)" [label=BV]
	proper_q -> "named(San)" [label=BV]
	_in_p -> "named(Securities)" [label=ARG1]
	proper_q -> "named(Francisco)" [label=BV]
	_the_q -> _fundamental_n_1 [label=BV]
	compound -> "named(Gilbert)" [label=ARG1]
	compound -> "named(Securities)" [label=ARG1]
}
