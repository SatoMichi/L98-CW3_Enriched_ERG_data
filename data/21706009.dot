digraph {
	node [shape=circle style=filled]
	compound -> "named(Poyner)" [label=ARG1]
	compound -> "named(Jim)" [label=ARG2]
	"_base_v_1-fn.Social_event" -> "named(Woodruff)" [label="ARG2-fn.Social_event"]
	focus_d -> "_observe_v_to-fn.Receiving" [label=ARG1]
	proper_q -> "named(Jim)" [label=BV]
	compound -> "named(Woodruff)" [label=ARG1]
	_at_p_temp -> "_get_v_state-fn.Residence" [label=ARG1]
	compound -> "_and+company_n_1" [label=ARG2]
	focus_d -> "_get_v_state-fn.Residence" [label=ARG2]
	proper_q -> "named(William)" [label=BV]
	"_get_v_state-fn.Residence" -> _in_p [label="ARG3-fn.Co_resident"]
	compound -> _computer_n_1 [label=ARG2]
	_with_p -> _analyst_n_1 [label=ARG1]
	udef_q -> _ball_n_of [label=BV]
	"_observe_v_to-fn.Receiving" -> "named(Poyner)" [label="ARG1-fn.Recipient"]
	compound -> "named(K)" [label=ARG1]
	udef_q -> _security_n_1 [label=BV]
	_lot_n_of -> _ball_n_of [label=ARG1]
	proper_q -> "named(K)" [label=BV]
	_a_q -> _analyst_n_1 [label=BV]
	udef_q -> "named(Dallas)" [label=BV]
	_same_a_as -> _time_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_get_v_state-fn.Residence" -> pron [label="ARG1-fn.Resident"]
	"_observe_v_to-fn.Receiving" -> "_get_v_state-fn.Residence" [label="ARG2-fn.Donor"]
	_a_q -> _lot_n_of [label=BV]
	appos -> "named(Poyner)" [label=ARG1]
	compound -> _security_n_1 [label=ARG1]
	appos -> _analyst_n_1 [label=ARG2]
	compound -> "named(Dallas)" [label=ARG2]
	compound -> _analyst_n_1 [label=ARG1]
	_at_p_temp -> _time_n_of [label=ARG2]
	_the_q -> _time_n_of [label=BV]
	udef_q -> _computer_n_1 [label=BV]
	compound -> "named(William)" [label=ARG2]
	_in_p -> _air_n_1 [label=ARG2]
	proper_q -> "named(Woodruff)" [label=BV]
	compound -> "_base_v_1-fn.Social_event" [label=ARG1]
	comp -> "_different_a_than-from" [label=ARG1]
	parg_d -> "_base_v_1-fn.Social_event" [label=ARG1]
	"_different_a_than-from" -> _ball_n_of [label=ARG1]
	udef_q -> "_and+company_n_1" [label=BV]
	"_get_v_state-fn.Residence" -> _lot_n_of [label="ARG2-fn.Location"]
	proper_q -> "named(Poyner)" [label=BV]
	_in_p -> _lot_n_of [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	_the_q -> _air_n_1 [label=BV]
	_with_p -> "named(Woodruff)" [label=ARG2]
	parg_d -> "named(Woodruff)" [label=ARG2]
}
