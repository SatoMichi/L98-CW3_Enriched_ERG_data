digraph {
	node [shape=circle style=filled]
	_yesterday_a_1 -> time_n [label=ARG1]
	"_grow_v_to-fn.NF" -> _economy_n_1 [label="ARG1-fn.NotExist"]
	"_grow_v_to-fn.NF" -> _weak_a_1 [label="ARG2-fn.Theme"]
	_whether_x -> neg [label=ARG1]
	poss -> pron [label=ARG2]
	"_think_v_1-fn.IN" -> _or_c [label="ARG2-fn.NotExist"]
	_at_p -> "named(Securities)" [label=ARG2]
	def_explicit_q -> _opinion_n_of [label=BV]
	appos -> "named(Lieberman)" [label=ARG1]
	"_think_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_hold_v_1 -> _economy_n_1 [label=ARG1]
	poss -> _opinion_n_of [label=ARG1]
	compound -> _corporation_n_1 [label=ARG2]
	_the_q -> _economy_n_1 [label=BV]
	neg -> _change_v_cause [label=ARG1]
	poss -> time_n [label=ARG2]
	compound -> nominalization [label=ARG2]
	proper_q -> "named(Manufacturers)" [label=BV]
	"_say_v_to-fn.IN" -> _whether_x [label="ARG2-fn.NotExist"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_weak_a_1 -> _economy_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_economic_a_1 -> _indicator_n_of [label=ARG1]
	udef_q -> _corporation_n_1 [label=BV]
	focus_d -> _change_v_cause [label=ARG2]
	proper_q -> "named(Lieberman)" [label=BV]
	compound -> "named(Lieberman)" [label=ARG1]
	_at_p -> _director_n_of [label=ARG1]
	_whether_x -> "_think_v_1-fn.IN" [label=ARG2]
	subord -> _steady_a_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Lieberman)" [label="ARG1-fn.NotExist"]
	_a_q -> _director_n_of [label=BV]
	poss -> _indicator_n_of [label=ARG1]
	_change_v_cause -> _indicator_n_of [label=ARG1]
	proper_q -> "named(Securities)" [label=BV]
	udef_q -> nominalization [label=BV]
	subord -> _hold_v_1 [label=ARG1]
	proper_q -> "named(Charles)" [label=BV]
	proper_q -> "named(Hanover)" [label=BV]
	compound -> "named(Manufacturers)" [label=ARG2]
	def_explicit_q -> _indicator_n_of [label=BV]
	compound -> "named(Hanover)" [label=ARG1]
	_change_v_cause -> _opinion_n_of [label=ARG2]
	compound -> "named(Charles)" [label=ARG2]
	compound -> _director_n_of [label=ARG1]
	nominalization -> _manage_v_1 [label=ARG1]
	appos -> _director_n_of [label=ARG2]
	compound -> "named(Securities)" [label=ARG1]
	def_implicit_q -> time_n [label=BV]
}
