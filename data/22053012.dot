digraph {
	node [shape=circle style=filled]
	compound -> _backer_n_1 [label=ARG1]
	_be_v_id -> "named(Republican)" [label=ARG1]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	proper_q -> "named(Contra)" [label=BV]
	_as_x_subord -> "_get_v_state-fn.IN" [label=ARG2]
	_some_q -> thing [label=BV]
	focus_d -> implicit_conj [label=ARG2]
	_want_v_1 -> pron [label=ARG1]
	_say_v_to -> "named(Burton)" [label=ARG1]
	_a_q -> "named(Republican)" [label=BV]
	ellipsis_ref -> pron [label=ARG1]
	comp -> _bad_a_1 [label=ARG1]
	proper_q -> "named(Dan)" [label=BV]
	_about_p -> pron [label=ARG2]
	"_going+to_v_qmodal" -> ellipsis_ref [label=ARG1]
	pronoun_q -> pron [label=BV]
	_bad_a_1 -> pron [label=ARG1]
	compound -> _representative_n_1 [label=ARG2]
	_want_v_1 -> _say_v_1 [label=ARG2]
	_say_v_1 -> thing [label=ARG2]
	compound -> "named(Republican)" [label=ARG1]
	"_staunch/jj_u_unknown" -> _backer_n_1 [label=ARG1]
	udef_q -> _representative_n_1 [label=BV]
	_say_v_to -> implicit_conj [label=ARG2]
	"_get_v_state-fn.IN" -> _bad_a_1 [label="ARG2-fn.Patient"]
	compound -> "named(Indiana)" [label=ARG2]
	_be_v_id -> _backer_n_1 [label=ARG2]
	_want_v_1 -> "_complain_v_to-about-fn.Statement" [label=ARG2]
	_say_v_1 -> pron [label=ARG1]
	appos -> "named(Republican)" [label=ARG2]
	compound -> "named(Burton)" [label=ARG1]
	compound -> "named(Contra)" [label=ARG2]
	appos -> "named(Burton)" [label=ARG1]
	proper_q -> "named(Burton)" [label=BV]
	proper_q -> "named(Indiana)" [label=BV]
	_about_p -> thing [label=ARG1]
	_a_q -> _backer_n_1 [label=BV]
	_as_x_subord -> "_going+to_v_qmodal" [label=ARG1]
	compound -> "named(Dan)" [label=ARG2]
	"_complain_v_to-about-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	focus_d -> _say_v_to [label=ARG1]
}
