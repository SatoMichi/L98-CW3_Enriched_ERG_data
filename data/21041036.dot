digraph {
	node [shape=circle style=filled]
	_a_q -> _bicycle_n_1 [label=BV]
	_if_x_then -> _temporary_a_1 [label=ARG2]
	poss -> pron [label=ARG2]
	_some_q -> _patient_n_1 [label=BV]
	_for_p -> "_restore_v_to-fn.NF" [label=ARG1]
	poss -> _childhood_n_1 [label=ARG1]
	"_restore_v_to-fn.NF" -> _ability_n_1 [label="ARG2-fn.Theme"]
	def_explicit_q -> _childhood_n_1 [label=BV]
	subord -> "_restore_v_to-fn.NF" [label=ARG1]
	"_solve_v_1-fn.NF" -> _puzzle_n_1 [label="ARG2-fn.Theme"]
	focus_d -> _for_p [label=ARG2]
	"_ride_v_1-fn.IN" -> _bicycle_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _puzzle_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(AZT)" [label=BV]
	"_restore_v_to-fn.NF" -> "named(AZT)" [label="ARG1-fn.Agent"]
	subord -> _if_x_then [label=ARG2]
	_only_x_deg -> _temporary_a_1 [label=ARG1]
	_the_q -> _ability_n_1 [label=BV]
	_a_q -> _piece_n_of [label=BV]
	_piece_n_of -> _childhood_n_1 [label=ARG1]
	focus_d -> "_restore_v_to-fn.NF" [label=ARG1]
	"_give_v_back-fn.Giving" -> _piece_n_of [label="ARG2-fn.Theme"]
	_if_x_then -> "_give_v_back-fn.Giving" [label=ARG1]
	_ability_n_1 -> _or_c [label=ARG1]
	_for_p -> _patient_n_1 [label=ARG2]
}
