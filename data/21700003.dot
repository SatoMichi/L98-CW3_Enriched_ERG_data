digraph {
	node [shape=circle style=filled]
	_imagine_v_1 -> "_in+order+to_x" [label=ARG2]
	udef_q -> _horror_n_1 [label=BV]
	_easy_a_for -> _choice_n_of [label=ARG1]
	"_end_v_1-fn.Cause_to_end" -> _process_n_of [label="ARG1-fn.NotExist"]
	_benefit_v_1 -> "named_n(US)" [label=ARG2]
	_the_q -> _catalyst_n_1 [label=BV]
	_can_v_modal -> _imagine_v_1 [label=ARG1]
	_become_v_id -> pron [label=ARG1]
	"_in+order+to_x" -> _become_v_id [label=ARG2]
	_a_q -> _process_n_of [label=BV]
	_be_v_there -> _choice_n_of [label=ARG1]
	_familiar_a_with -> _process_n_of [label=ARG1]
	_imagine_v_1 -> pron [label=ARG1]
	"_in+order+to_x" -> _benefit_v_1 [label=ARG1]
	_the_q -> "named_n(US)" [label=BV]
	_become_v_id -> _catalyst_n_1 [label=ARG2]
	_in_p -> "_end_v_1-fn.Cause_to_end" [label=ARG1]
	_another_q -> _round_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	_in_p -> "named(Cambodia)" [label=ARG2]
	_no_q -> _choice_n_of [label=BV]
	_could_v_modal -> "_end_v_1-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Cambodia)" [label=BV]
	_in_p -> _horror_n_1 [label=ARG1]
	_for_p -> _process_n_of [label=ARG2]
	_benefit_v_1 -> pron [label=ARG1]
	_round_n_of -> _horror_n_1 [label=ARG1]
	_in_p -> _choice_n_of [label=ARG1]
	_in_p -> _round_n_of [label=ARG2]
	_for_p -> _catalyst_n_1 [label=ARG1]
	neg -> _can_v_modal [label=ARG1]
	"_all-too_x_deg" -> _familiar_a_with [label=ARG1]
}
