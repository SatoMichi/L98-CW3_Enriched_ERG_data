digraph {
	node [shape=circle style=filled]
	udef_q -> _activity_n_1 [label=BV]
	comp_too -> _early_a_1 [label=ARG1]
	poss -> pron [label=ARG2]
	udef_q -> _takeover_n_of [label=BV]
	_temporary_a_1 -> _dearth_n_1 [label=ARG1]
	_brace_v_1 -> _firm_n_1 [label=ARG1]
	_in_p -> _past_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _lawyer_n_1 [label="ARG1-fn.Agent"]
	compound -> _work_n_1 [label=ARG1]
	_lucrative_a_1 -> _work_n_1 [label=ARG1]
	_while_x -> _still_a_1 [label=ARG2]
	_still_a_1 -> pron [label=ARG1]
	"much-many_a" -> _lawyer_n_1 [label=ARG1]
	_for_p -> _brace_v_1 [label=ARG1]
	_the_q -> _dearth_n_1 [label=BV]
	_of_p -> _activity_n_1 [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	_for_p -> _revenue_n_1 [label=ARG2]
	loc_nonsp -> _still_a_1 [label=ARG1]
	_from_p -> _revenue_n_1 [label=ARG1]
	comp_so -> _lucrative_a_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> _brace_v_1 [label="ARG2-fn.Topic"]
	udef_q -> _revenue_n_1 [label=BV]
	_the_q -> _past_n_1 [label=BV]
	compound -> _activity_n_1 [label=ARG1]
	udef_q -> _lawyer_n_1 [label=BV]
	"_tell_v_1-fn.Telling" -> _temporary_a_1 [label="ARG2-fn.Topic"]
	def_explicit_q -> _firm_n_1 [label=BV]
	comp_too -> "_tell_v_1-fn.Telling" [label=ARG2]
	poss -> _firm_n_1 [label=ARG1]
	_while_x -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> _merger_n_1 [label=ARG2]
	_in_p -> _lucrative_a_1 [label=ARG1]
	_early_a_1 -> time_n [label=ARG1]
	_only_x_deg -> _temporary_a_1 [label=ARG1]
	_low_a_1 -> _revenue_n_1 [label=ARG1]
	compound -> _takeover_n_of [label=ARG2]
	_from_p -> _work_n_1 [label=ARG2]
	_of_p -> _dearth_n_1 [label=ARG1]
	udef_q -> _merger_n_1 [label=BV]
	def_implicit_q -> time_n [label=BV]
	comp -> _low_a_1 [label=ARG1]
	udef_q -> _work_n_1 [label=BV]
}
