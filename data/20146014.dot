digraph {
	node [shape=circle style=filled]
	poss -> _plan_n_1 [label=ARG1]
	_the_q -> _proposal_n_1 [label=BV]
	compound -> _acid_n_1 [label=ARG2]
	_serious_a_1 -> _challenge_n_1 [label=ARG1]
	compound -> _house_n_1 [label=ARG2]
	compound -> _rain_n_1 [label=ARG1]
	def_explicit_q -> _plan_n_1 [label=BV]
	compound -> _plan_n_1 [label=ARG1]
	neg -> _however_a_1 [label=ARG1]
	comp_enough -> _broad_a_1 [label=ARG1]
	_for_p -> _support_n_of [label=ARG1]
	udef_q -> _house_n_1 [label=BV]
	_broad_a_1 -> _support_n_of [label=ARG1]
	_to_p -> _plan_n_1 [label=ARG2]
	_a_q -> _challenge_n_1 [label=BV]
	_the_q -> "named(White)" [label=BV]
	"_pose_v_as-fn.NF" -> _support_n_of [label="ARG2-fn.Topic"]
	"_pose_v_as-fn.NF" -> _challenge_n_1 [label="ARG3-fn.NotExist"]
	comp_enough -> "_pose_v_as-fn.NF" [label=ARG2]
	_to_p -> _challenge_n_1 [label=ARG1]
	_clear_a_of -> _broad_a_1 [label=ARG1]
	poss -> "named(White)" [label=ARG2]
	udef_q -> _support_n_of [label=BV]
	udef_q -> _acid_n_1 [label=BV]
	compound -> "named(White)" [label=ARG1]
	_however_a_1 -> _clear_a_of [label=ARG1]
	_for_p -> _proposal_n_1 [label=ARG2]
	udef_q -> _rain_n_1 [label=BV]
}
