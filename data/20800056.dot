digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _business_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_to_p -> _area_n_of [label=ARG2]
	poss -> _business_n_1 [label=ARG1]
	_at_p -> place_n [label=ARG2]
	def_implicit_q -> place_n [label=BV]
	udef_q -> _area_n_of [label=BV]
	"_say_v_to-fn.Taking" -> "_intend_v_for-fn.Have_as_requirement" [label="ARG2-fn.Theme"]
	_to_p -> "_expand_v_cause-fn.Cause_to_end" [label=ARG1]
	"_expand_v_cause-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	"_intend_v_for-fn.Have_as_requirement" -> pron [label="ARG1-fn.Dependent"]
	udef_q -> _mister_n_1 [label=BV]
	_home_p -> place_n [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_intend_v_for-fn.Have_as_requirement" -> "_expand_v_cause-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	poss -> pron [label=ARG2]
	_abroad_p -> place_n [label=ARG1]
	"much-many_a" -> _area_n_of [label=ARG1]
	_at_p -> _area_n_of [label=ARG1]
	proper_q -> "named(Morishita)" [label=BV]
	loc_nonsp -> _area_n_of [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	_other_a_1 -> _area_n_of [label=ARG1]
	"_expand_v_cause-fn.Cause_to_end" -> _business_n_1 [label="ARG2-fn.Means"]
	compound -> "named(Morishita)" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Morishita)" [label="ARG1-fn.Agent"]
}
