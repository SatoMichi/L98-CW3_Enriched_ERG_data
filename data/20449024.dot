digraph {
	node [shape=circle style=filled]
	"_tell_v_1-fn.Telling" -> pron [label="ARG2-fn.Topic"]
	focus_d -> loc_nonsp [label=ARG2]
	neg -> _would_v_modal [label=ARG1]
	_yesterday_a_1 -> time_n [label=ARG1]
	_own_a_1 -> _account_n_of [label=ARG1]
	compound -> _index_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	udef_q -> _investor_n_1 [label=BV]
	def_implicit_q -> time_n [label=BV]
	"_tell_v_1-fn.Telling" -> neg [label="ARG3-fn.Recipient"]
	compound -> _mister_n_1 [label=ARG2]
	_would_v_modal -> _do_v_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Carpenter)" [label="ARG1-fn.Agent"]
	udef_q -> _firm_n_1 [label=BV]
	_for_p -> _account_n_of [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_do_v_1 -> _firm_n_1 [label=ARG1]
	_do_v_1 -> "_arbitrage/nn_u_unknown" [label=ARG2]
	"_continue_v_2-fn.Activity_ongoing" -> _do_v_1 [label="ARG1-fn.NotExist"]
	_identify_v_1 -> pron [label=ARG1]
	udef_q -> _index_n_1 [label=BV]
	_big_a_1 -> _investor_n_1 [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_with_p -> _do_v_1 [label=ARG1]
	poss -> _account_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	_with_p -> _firm_n_1 [label=ARG2]
	_do_v_1 -> pron [label=ARG1]
	compound -> "named(Carpenter)" [label=ARG1]
	_would_v_modal -> _identify_v_1 [label=ARG1]
	udef_q -> "_arbitrage/nn_u_unknown" [label=BV]
	def_explicit_q -> _account_n_of [label=BV]
	_institutional_a_1 -> _investor_n_1 [label=ARG1]
	compound -> "_arbitrage/nn_u_unknown" [label=ARG1]
	loc_nonsp -> "_say_v_to-fn.IN" [label=ARG1]
	_for_p -> "_arbitrage/nn_u_unknown" [label=ARG1]
	"_tell_v_1-fn.Telling" -> _investor_n_1 [label="ARG1-fn.Agent"]
	_do_v_1 -> _business_n_1 [label=ARG2]
	udef_q -> _business_n_1 [label=BV]
	_identify_v_1 -> _investor_n_1 [label=ARG2]
	proper_q -> "named(Carpenter)" [label=BV]
	"_say_v_to-fn.IN" -> "_tell_v_1-fn.Telling" [label="ARG2-fn.Topic"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
