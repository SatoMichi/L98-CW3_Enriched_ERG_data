digraph {
	node [shape=circle style=filled]
	_of_p -> "named(Insurance)" [label=ARG1]
	neg -> _would_v_modal [label=ARG1]
	_as_p -> part_of [label=ARG2]
	_significant_a_for -> _litigation_n_1 [label=ARG1]
	part_of -> _agreement_n_1 [label=ARG1]
	compound -> _company_n_1 [label=ARG2]
	_would_v_modal -> "_proceed_v_with-fn.NF" [label=ARG1]
	focus_d -> _as_p [label=ARG2]
	_of_p -> _and_c [label=ARG2]
	udef_q -> _litigation_n_1 [label=BV]
	_while_x -> neg [label=ARG1]
	"_say_v_to-fn.IN" -> _developer_n_of [label="ARG1-fn.Agent"]
	_as_p -> "_say_v_to-fn.IN" [label=ARG1]
	_of_p -> "named(America)" [label=ARG2]
	_the_q -> _state_n_of [label=BV]
	appos -> _developer_n_of [label=ARG1]
	_of_p -> _partnership_n_1 [label=ARG1]
	compound -> "named(Tower)" [label=ARG1]
	compound -> "named(Park)" [label=ARG2]
	compound -> "named(Prudential)" [label=ARG2]
	_part_q -> part_of [label=BV]
	proper_q -> "named(Tower)" [label=BV]
	compound -> _proceedings_n_1 [label=ARG1]
	_with_p -> _state_n_of [label=ARG2]
	proper_q -> "named(Park)" [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _agreement_n_1 [label=BV]
	_a_q -> _partnership_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _while_x [label="ARG2-fn.Topic"]
	proper_q -> "named(Prudential)" [label=BV]
	compound -> "named(Realty)" [label=ARG1]
	udef_q -> "_condemnation/nn_u_unknown" [label=BV]
	_pending_a_1 -> _litigation_n_1 [label=ARG1]
	proper_q -> "named(Realty)" [label=BV]
	"_proceed_v_with-fn.NF" -> _proceedings_n_1 [label="ARG2-fn.Theme"]
	proper_q -> "named(Insurance)" [label=BV]
	compound -> "_condemnation/nn_u_unknown" [label=ARG2]
	appos -> _partnership_n_1 [label=ARG2]
	_with_p -> _agreement_n_1 [label=ARG1]
	compound -> "named(Insurance)" [label=ARG1]
	proper_q -> "named(America)" [label=BV]
	udef_q -> _proceedings_n_1 [label=BV]
	_the_q -> _developer_n_of [label=BV]
	"_proceed_v_with-fn.NF" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _and_c [label=BV]
	_while_x -> _be_v_there [label=ARG2]
	udef_q -> _company_n_1 [label=BV]
	_be_v_there -> _litigation_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
