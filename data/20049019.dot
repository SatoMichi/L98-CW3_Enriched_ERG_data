digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> "_assure_v_of-fn.Telling" [label="ARG2-fn.NotExist"]
	neg -> _would_v_modal [label=ARG1]
	udef_q -> _advance_n_of [label=BV]
	parg_d -> "_threaten_v_1-fn.NF" [label=ARG1]
	udef_q -> _procedure_n_1 [label=BV]
	_against_p -> _attorney_n_1 [label=ARG2]
	compound -> _enforcement_n_of [label=ARG2]
	_without_p -> _and_c [label=ARG2]
	compound -> _department_n_1 [label=ARG1]
	"_threaten_v_1-fn.NF" -> _procedure_n_1 [label="ARG2-fn.Experiencer"]
	udef_q -> _review_n_of [label=BV]
	focus_d -> _at_p [label=ARG2]
	_against_p -> "_threaten_v_1-fn.NF" [label=ARG1]
	_further_a_1 -> _review_n_of [label=ARG1]
	_the_q -> _department_n_1 [label=BV]
	_would_v_modal -> "_threaten_v_1-fn.NF" [label=ARG1]
	_at_p -> "_assure_v_of-fn.Telling" [label=ARG1]
	_without_p -> "_threaten_v_1-fn.NF" [label=ARG1]
	_at_p -> _meeting_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	_that_q_dem -> _meeting_n_of [label=BV]
	udef_q -> _attorney_n_1 [label=BV]
	proper_q -> "named(Justice)" [label=BV]
	comp -> _further_a_1 [label=ARG1]
	compound -> _notice_n_1 [label=ARG1]
	compound -> "named(Justice)" [label=ARG2]
	"_assure_v_of-fn.Telling" -> _department_n_1 [label="ARG1-fn.Agent"]
	"_assure_v_of-fn.Telling" -> pron [label="ARG2-fn.Recipient"]
	udef_q -> _enforcement_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_assure_v_of-fn.Telling" -> neg [label="ARG3-fn.Topic"]
	compound -> _procedure_n_1 [label=ARG1]
	udef_q -> _notice_n_1 [label=BV]
	compound -> _advance_n_of [label=ARG2]
	parg_d -> _procedure_n_1 [label=ARG2]
	udef_q -> _and_c [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
