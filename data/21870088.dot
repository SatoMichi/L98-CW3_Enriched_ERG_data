digraph {
	node [shape=circle style=filled]
	_insure_v_for -> pron [label=ARG1]
	part_of -> _property_n_1 [label=ARG1]
	_of_p -> "named(California)" [label=ARG2]
	_show_v_1 -> _location_n_1 [label=ARG2]
	_show_v_1 -> _map_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	_all_q -> part_of [label=BV]
	_because_x -> "_assess_v_1-fn.NF" [label=ARG1]
	_because_x -> "_have_v_1-fn.IN" [label=ARG2]
	_quick_a_1 -> "_assess_v_1-fn.NF" [label=ARG1]
	_able_a_1 -> _company_n_of [label=ARG1]
	proper_q -> "named(California)" [label=BV]
	_of_p -> _location_n_1 [label=ARG1]
	"_assess_v_1-fn.NF" -> _liability_n_1 [label="ARG2-fn.NotExist"]
	poss -> _liability_n_1 [label=ARG1]
	_computerize_v_1 -> _map_n_of [label=ARG2]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_insure_v_for -> _property_n_1 [label=ARG2]
	parg_d -> _map_n_of [label=ARG2]
	_the_q -> _location_n_1 [label=BV]
	_the_q -> _company_n_of [label=BV]
	_of_p -> part_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_have_v_1-fn.IN" -> _map_n_of [label="ARG2-fn.Theme"]
	"_assess_v_1-fn.NF" -> _company_n_of [label="ARG1-fn.NotExist"]
	compound -> "named(California)" [label=ARG1]
	"_exact_a_same-as" -> _location_n_1 [label=ARG1]
	comp_equal -> "_exact_a_same-as" [label=ARG1]
	_the_q -> _property_n_1 [label=BV]
	compound -> _damage_n_to [label=ARG2]
	def_explicit_q -> _liability_n_1 [label=BV]
	compound -> "named(Northern)" [label=ARG2]
	udef_q -> _damage_n_to [label=BV]
	udef_q -> _map_n_of [label=BV]
	compound -> _liability_n_1 [label=ARG1]
	_of_p -> _map_n_of [label=ARG1]
	parg_d -> _computerize_v_1 [label=ARG1]
	_able_a_1 -> _because_x [label=ARG2]
	proper_q -> "named(Northern)" [label=BV]
}
