digraph {
	node [shape=circle style=filled]
	_include_v_1 -> _and_c [label=ARG2]
	_too_a_also -> "_have_v_1-fn.IN" [label=ARG1]
	_big_a_1 -> _name_n_of [label=ARG1]
	udef_q -> _father_n_of [label=BV]
	_include_v_1 -> _unknown_n_1 [label=ARG1]
	"_a+lot_a_1" -> "_deal_v_with-fn.Resolve_problem" [label=ARG1]
	compound -> "named(Alton)" [label=ARG1]
	proper_q -> "named(Anderson)" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(Bill)" [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_contend_v_with-fn.Statement" -> _name_n_of [label="ARG2-fn.Theme"]
	proper_q -> "named(Jenco)" [label=BV]
	_as_p -> "named(Jenco)" [label=ARG2]
	compound -> "named(Wentworth)" [label=ARG1]
	compound -> "named(Jenco)" [label=ARG1]
	"_deal_v_with-fn.Resolve_problem" -> _network_n_of [label="ARG1-fn.Agent"]
	_portray_v_1 -> "named(Wentworth)" [label=ARG1]
	proper_q -> "named(Alton)" [label=BV]
	"_have_v_1-fn.IN" -> _network_n_of [label="ARG1-fn.Pivot"]
	compound -> "named(Anderson)" [label=ARG1]
	_the_q -> _network_n_of [label=BV]
	proper_q -> "named(Scott)" [label=BV]
	"_deal_v_with-fn.Resolve_problem" -> _unknown_n_1 [label="ARG2-fn.Theme"]
	compound -> _father_n_of [label=ARG2]
	compound -> "named(Bill)" [label=ARG2]
	udef_q -> _unknown_n_1 [label=BV]
	proper_q -> "named(Wentworth)" [label=BV]
	_as_p -> "named(Alton)" [label=ARG1]
	"_have_v_1-fn.IN" -> _name_n_of [label="ARG2-fn.Theme"]
	udef_q -> _and_c [label=BV]
	compound -> "named(Scott)" [label=ARG2]
	_some_q -> _name_n_of [label=BV]
	_portray_v_1 -> "named(Anderson)" [label=ARG2]
}
