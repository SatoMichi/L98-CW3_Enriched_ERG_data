digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Control)" [label=BV]
	"_sell_v_1-fn.Change_of_quantity_of_possession" -> _stock_n_1 [label="ARG1-fn.Owner"]
	"_consider_v_1-fn.Attempt_suasion" -> _possibility_n_of [label="ARG2-fn.Addressee"]
	compound -> _nor_c [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	parg_d -> _value_n_1 [label=ARG2]
	udef_q -> _time_n_of [label=BV]
	compound -> "named(Control)" [label=ARG2]
	udef_q -> _price_n_of [label=BV]
	_about_x_deg -> _half_q [label=ARG1]
	udef_q -> "named(Perlman)" [label=BV]
	"_say_v_to-fn.Taking" -> _nor_c [label="ARG1-fn.Agent"]
	def_explicit_q -> _stock_n_1 [label=BV]
	poss -> _value_n_1 [label=ARG1]
	"_consider_v_1-fn.Attempt_suasion" -> pron [label="ARG1-fn.Content"]
	proper_q -> "named(Data)" [label=BV]
	"_spend_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	udef_q -> _mister_n_1 [label=BV]
	compound -> "named(Data)" [label=ARG1]
	"_spend_v_1-fn.Competition" -> "_consider_v_1-fn.Attempt_suasion" [label="ARG3-fn.Participants"]
	_hostile_a_1 -> _takeover_n_of [label=ARG1]
	poss -> "named(Data)" [label=ARG2]
	"much-many_a" -> _time_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	part_of -> _value_n_1 [label=ARG1]
	_the_q -> _possibility_n_of [label=BV]
	_half_q -> part_of [label=BV]
	"_estimate_v_at-fn.Activity_start" -> _value_n_1 [label="ARG2-fn.Purpose"]
	_a_q -> _takeover_n_of [label=BV]
	"_spend_v_1-fn.Competition" -> _time_n_of [label="ARG2-fn.Participant_2"]
	poss -> _stock_n_1 [label=ARG1]
	_at_p -> part_of [label=ARG2]
	compound -> _breakup_n_1 [label=ARG2]
	_neither_q -> _nor_c [label=BV]
	udef_q -> _breakup_n_1 [label=BV]
	_at_p -> "_sell_v_1-fn.Change_of_quantity_of_possession" [label=ARG1]
	_while_x -> "_sell_v_1-fn.Change_of_quantity_of_possession" [label=ARG2]
	def_explicit_q -> _value_n_1 [label=BV]
	_possibility_n_of -> _takeover_n_of [label=ARG1]
	compound -> _value_n_1 [label=ARG1]
	"_say_v_to-fn.Taking" -> "_spend_v_1-fn.Competition" [label="ARG2-fn.Theme"]
	parg_d -> "_estimate_v_at-fn.Activity_start" [label=ARG1]
	_while_x -> "_say_v_to-fn.Taking" [label=ARG1]
}
