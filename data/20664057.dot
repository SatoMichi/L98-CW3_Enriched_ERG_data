digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> "named(O’Neill)" [label="ARG1-fn.NotExist"]
	appos -> "named(O’Neill)" [label=ARG1]
	udef_q -> _inc_n_1 [label=BV]
	compound -> "named(New)" [label=ARG2]
	_for_x_cond -> _must_v_modal [label=ARG1]
	proper_q -> "named(Futures)" [label=BV]
	proper_q -> "named(New)" [label=BV]
	_for_x_cond -> "_occur_v_to-fn.Event" [label=ARG2]
	_the_q -> "named(East)" [label=BV]
	_for_p -> _director_n_of [label=ARG1]
	udef_q -> _research_n_1 [label=BV]
	_in_p -> "named(Futures)" [label=ARG1]
	compound -> "named(Elders)" [label=ARG2]
	compound -> "named(Far)" [label=ARG2]
	_be_v_there -> _demand_n_1 [label=ARG1]
	_from_p -> _demand_n_1 [label=ARG1]
	proper_q -> "named(O’Neill)" [label=BV]
	_from_p -> "named(East)" [label=ARG2]
	compound -> "named(O’Neill)" [label=ARG1]
	_a_q -> _rally_n_1 [label=BV]
	compound -> "named(York)" [label=ARG1]
	compound -> "named(William)" [label=ARG2]
	udef_q -> _demand_n_1 [label=BV]
	compound -> "named(East)" [label=ARG1]
	compound -> "named(Futures)" [label=ARG1]
	"_say_v_to-fn.IN" -> _for_x_cond [label="ARG2-fn.NotExist"]
	"_occur_v_to-fn.Event" -> _rally_n_1 [label="ARG1-fn.NotExist"]
	_in_p -> "named(York)" [label=ARG2]
	proper_q -> "named(Far)" [label=BV]
	compound -> _director_n_of [label=ARG1]
	compound -> _research_n_1 [label=ARG2]
	_for_p -> "named(Futures)" [label=ARG2]
	proper_q -> "named(Elders)" [label=BV]
	proper_q -> "named(York)" [label=BV]
	appos -> _director_n_of [label=ARG2]
	compound -> _inc_n_1 [label=ARG2]
	udef_q -> _director_n_of [label=BV]
	proper_q -> "named(William)" [label=BV]
	_must_v_modal -> _be_v_there [label=ARG1]
}
