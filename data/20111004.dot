digraph {
	node [shape=circle style=filled]
	compound -> "named(Bernstein)" [label=ARG1]
	proper_q -> "named(Bernstein)" [label=BV]
	_with_p -> _discussion_n_1 [label=ARG1]
	_be_v_id -> _decision_n_1 [label=ARG2]
	poss -> pron [label=ARG2]
	proper_q -> "named(Newhouse)" [label=BV]
	"_reach_v_1-fn.NF" -> _decision_n_1 [label="ARG2-fn.Theme"]
	_that_q_dem -> generic_entity [label=BV]
	udef_q -> _discussion_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_a_q -> _interview_n_1 [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _decision_n_1 [label=BV]
	_be_v_id -> generic_entity [label=ARG1]
	"_out+of_p" -> _discussion_n_1 [label=ARG2]
	_with_p -> "named(Newhouse)" [label=ARG2]
	def_explicit_q -> _departure_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_in_p_state -> _interview_n_1 [label=ARG2]
	poss -> _departure_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Bernstein)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	compound -> "named(Newhouse)" [label=ARG1]
	"_reach_v_1-fn.NF" -> pron [label="ARG1-fn.Agent"]
	proper_q -> "named(Si)" [label=BV]
	compound -> "named(Si)" [label=ARG2]
	"_out+of_p" -> _evolve_v_1 [label=ARG1]
	_evolve_v_1 -> _departure_n_1 [label=ARG1]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
