digraph {
	node [shape=circle style=filled]
	relative_mod -> _persuade_v_of [label=ARG2]
	poss -> pron [label=ARG2]
	_in_p -> _turn_n_of [label=ARG2]
	poss -> _husband_n_1 [label=ARG1]
	_to_p -> pron [label=ARG1]
	"_take_v_1-fn.Bringing" -> _to_p [label="ARG3-fn.NotExist"]
	"_in+order+to_x" -> "_call_v_1-fn.IN" [label=ARG1]
	_persuade_v_of -> _run_v_1 [label=ARG3]
	compound -> _mister_n_1 [label=ARG2]
	poss -> _daughter_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_call_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	def_explicit_q -> _husband_n_1 [label=BV]
	_this_q_dem -> _errand_n_1 [label=BV]
	"_call_v_1-fn.IN" -> _daughter_n_1 [label="ARG2-fn.Theme"]
	_a_q -> "named(Loeb)" [label=BV]
	pronoun_q -> pron [label=BV]
	_the_q -> _bank_n_of [label=BV]
	_run_v_1 -> _husband_n_1 [label=ARG1]
	idiom_q_i -> _turn_n_of [label=BV]
	appos -> "named(Loeb)" [label=ARG2]
	_to_p -> _bank_n_of [label=ARG2]
	_run_v_1 -> _errand_n_1 [label=ARG2]
	appos -> _husband_n_1 [label=ARG1]
	compound -> "named(Loeb)" [label=ARG1]
	_persuade_v_of -> _husband_n_1 [label=ARG2]
	"_in+order+to_x" -> "_take_v_1-fn.Bringing" [label=ARG2]
	"_take_v_1-fn.Bringing" -> pron [label="ARG2-fn.Theme"]
	def_explicit_q -> _daughter_n_1 [label=BV]
}
