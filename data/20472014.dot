digraph {
	node [shape=circle style=filled]
	proper_q -> "named(James)" [label=BV]
	proper_q -> "named(Smith)" [label=BV]
	focus_d -> "_be_v_id-fn.Cause_to_end" [label=ARG2]
	neg -> "_be_v_id-fn.Cause_to_end" [label=ARG1]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_with_p -> _analyst_n_1 [label=ARG1]
	compound -> "named(James)" [label=ARG1]
	udef_q -> _and_c [label=BV]
	proper_q -> "named(Raymond)" [label=BV]
	compound -> "named(Smith)" [label=ARG1]
	"_be_v_id-fn.Cause_to_end" -> _picture_n_of [label="ARG2-fn.Means"]
	_a_q -> _analyst_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	"_be_v_id-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	"_say_v_to-fn.Have_as_requirement" -> "named(Smith)" [label="ARG1-fn.Dependent"]
	appos -> _analyst_n_1 [label=ARG2]
	udef_q -> "named(Associates)" [label=BV]
	_with_p -> _and_c [label=ARG2]
	_a_q -> _picture_n_of [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> neg [label="ARG2-fn.Requirement"]
	_pretty_a_1 -> _picture_n_of [label=ARG1]
	compound -> "named(Raymond)" [label=ARG2]
	appos -> "named(Smith)" [label=ARG1]
	proper_q -> "named(David)" [label=BV]
	compound -> "named(David)" [label=ARG2]
}
