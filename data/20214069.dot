digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	_no_q -> _problem_n_of [label=BV]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	focus_d -> "_expect_v_1-fn.IN" [label=ARG2]
	_wiry_a_1 -> "named(Campaneris)" [label=ARG1]
	unspec_manner -> _slide_v_1 [label=ARG1]
	"_know_v_1-fn.IN" -> _slide_v_1 [label="ARG2-fn.Theme"]
	compound -> _mister_n_1 [label=ARG2]
	_if_x_then -> "_know_v_1-fn.IN" [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_expect_v_1-fn.IN" -> _base_n_1 [label="ARG2-fn.Theme"]
	"_know_v_1-fn.IN" -> pron [label="ARG1-fn.Agent"]
	parg_d -> _base_n_1 [label=ARG2]
	which_q -> manner [label=BV]
	udef_q -> _base_n_1 [label=BV]
	_be_v_id -> pron [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	parg_d -> "_steal_v_from-fn.Theft" [label=ARG1]
	pronoun_q -> pron [label=BV]
	_even_a_1 -> "_expect_v_1-fn.IN" [label=ARG1]
	_be_v_id -> _problem_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	"_expect_v_1-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	_if_x_then -> _be_v_id [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Campaneris)" [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "_expect_v_1-fn.IN" [label="ARG2-fn.Topic"]
	_the_q -> "named(Campaneris)" [label=BV]
	_fit_a_1 -> "named(Campaneris)" [label=ARG1]
	compound -> "named(Campaneris)" [label=ARG1]
	unspec_manner -> manner [label=ARG2]
	_colon_p_namely -> "named(Campaneris)" [label=ARG1]
	"_steal_v_from-fn.Theft" -> _base_n_1 [label="ARG2-fn.Theme"]
}
