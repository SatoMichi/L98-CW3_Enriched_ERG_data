digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Searle)" [label=BV]
	focus_d -> "_think_v_1-fn.IN" [label=ARG2]
	compound -> _chairman_n_of [label=ARG1]
	"_think_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	proper_q -> "named(Gilgore)" [label=BV]
	_take_v_1 -> _consumer_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Gilgore)" [label="ARG1-fn.Agent"]
	comp_equal -> "much-many_a" [label=ARG1]
	_possible_a_for -> ellipsis [label=ARG1]
	proper_q -> "named(Sheldon)" [label=BV]
	"_say_v_to-fn.IN" -> "_think_v_1-fn.IN" [label="ARG2-fn.Topic"]
	compound -> "named(Sheldon)" [label=ARG2]
	udef_q -> _chairman_n_of [label=BV]
	udef_q -> "_information_n_on-about" [label=BV]
	_the_q -> _drug_n_1 [label=BV]
	_very_x_deg -> _important_a_for [label=ARG1]
	pronoun_q -> pron [label=BV]
	_take_v_1 -> _drug_n_1 [label=ARG2]
	"_think_v_1-fn.IN" -> _important_a_for [label="ARG2-fn.NotExist"]
	comp_equal -> _possible_a_for [label=ARG2]
	"_provide_v_1-fn.Supply" -> "_information_n_on-about" [label="ARG2-fn.Theme"]
	udef_q -> _consumer_n_of [label=BV]
	"much-many_a" -> "_information_n_on-about" [label=ARG1]
	compound -> "named(Gilgore)" [label=ARG1]
	_on_p -> "_provide_v_1-fn.Supply" [label=ARG1]
	_on_p -> _drug_n_1 [label=ARG2]
	_important_a_for -> "_provide_v_1-fn.Supply" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(Searle)" [label=ARG2]
}
