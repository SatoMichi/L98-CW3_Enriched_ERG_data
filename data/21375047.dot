digraph {
	node [shape=circle style=filled]
	"_find_v_1-fn.IN" -> _loyalty_n_to [label="ARG2-fn.Theme"]
	poss -> pron [label=ARG2]
	udef_q -> _investor_n_1 [label=BV]
	compound -> _rival_n_1 [label=ARG1]
	compound -> "named(Street)" [label=ARG1]
	proper_q -> "named(Wall)" [label=BV]
	neg -> "_find_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Drexel)" [label=BV]
	poss -> _problem_n_of [label=ARG1]
	compound -> _bond_n_1 [label=ARG1]
	"_enjoy_v_1-fn.NF" -> "named(Drexel)" [label="ARG1-fn.Experiencer"]
	focus_d -> _despite_p [label=ARG2]
	compound -> _junk_n_1 [label=ARG2]
	"_continue_v_2-fn.Process_continue" -> "_enjoy_v_1-fn.NF" [label="ARG1-fn.NotExist"]
	_among_p -> _investor_n_1 [label=ARG2]
	proper_q -> "named(Street)" [label=BV]
	udef_q -> _junk_n_1 [label=BV]
	focus_d -> "_continue_v_2-fn.Process_continue" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_find_v_1-fn.IN" -> _rival_n_1 [label="ARG1-fn.Agent"]
	def_explicit_q -> _problem_n_of [label=BV]
	udef_q -> _bond_n_1 [label=BV]
	compound -> "named(Wall)" [label=ARG2]
	poss -> _market_n_1 [label=ARG2]
	_among_p -> _loyalty_n_to [label=ARG1]
	"_enjoy_v_1-fn.NF" -> _loyalty_n_to [label="ARG2-fn.Attribute"]
	compound -> _investor_n_1 [label=ARG1]
	def_explicit_q -> _rival_n_1 [label=BV]
	poss -> _rival_n_1 [label=ARG1]
	compound -> _market_n_1 [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	_despite_p -> "_continue_v_2-fn.Process_continue" [label=ARG1]
	_a_q -> _loyalty_n_to [label=BV]
	_despite_p -> _problem_n_of [label=ARG2]
}
