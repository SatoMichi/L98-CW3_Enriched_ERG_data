digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Cause_to_end" -> _and_c [label="ARG2-fn.Means"]
	_any_q -> "_impeachment/nn_u_unknown" [label=BV]
	_of_p -> _appeal_n_1 [label=ARG1]
	compound -> "named(Supreme)" [label=ARG2]
	_a_q -> _appeal_n_1 [label=BV]
	"_continue_v_2-fn.Competition" -> "_fight_v_1-fn.Competition" [label="ARG1-fn.Participant_1"]
	proper_q -> "named(Hastings)" [label=BV]
	"_contemplate_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	udef_q -> _judge_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> _court_n_of [label=ARG1]
	"_contemplate_v_1-fn.Competition" -> _appeal_n_1 [label="ARG2-fn.Participant_2"]
	_of_p -> "_impeachment/nn_u_unknown" [label=ARG2]
	_to_p -> _court_n_of [label=ARG2]
	_to_p -> "_contemplate_v_1-fn.Competition" [label=ARG1]
	_the_q -> _court_n_of [label=BV]
	"_say_v_to-fn.Cause_to_end" -> "named(Hastings)" [label="ARG1-fn.Process"]
	compound -> "named(Hastings)" [label=ARG1]
	"_fight_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_however_a_1 -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	proper_q -> "named(Supreme)" [label=BV]
	compound -> "named_n(US)" [label=ARG2]
	udef_q -> "named_n(US)" [label=BV]
	compound -> _judge_n_of [label=ARG2]
}
