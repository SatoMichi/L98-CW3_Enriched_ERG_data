digraph {
	node [shape=circle style=filled]
	_sue_v_1 -> "named(Hoelzer)" [label=ARG1]
	"_claim_v_1-fn.Statement" -> _and_c [label="ARG2-fn.Topic"]
	"_abandon_v_1-fn.Departing" -> _city_n_1 [label="ARG1-fn.Theme"]
	"_wait_v_1-fn.IN" -> time_n [label="ARG2-fn.Theme"]
	compound -> _mister_n_1 [label=ARG2]
	compound -> "named(Hoelzer)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	comp_too -> _long_a_1 [label=ARG1]
	"_wait_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_long_a_1 -> time_n [label=ARG1]
	pronoun_q -> pron [label=BV]
	_sue_v_1 -> "named(Stamford)" [label=ARG2]
	"_abandon_v_1-fn.Departing" -> _artwork_n_1 [label="ARG2-fn.Initial_Location"]
	subord -> _sue_v_1 [label=ARG1]
	proper_q -> "named(Stamford)" [label=BV]
	subord -> "_claim_v_1-fn.Statement" [label=ARG2]
	"_in+order+to_x" -> "_reclaim_v_1-fn.Statement" [label=ARG2]
	_the_q -> _city_n_1 [label=BV]
	"_reclaim_v_1-fn.Statement" -> pron [label="ARG2-fn.Topic"]
	_the_q -> _artwork_n_1 [label=BV]
	"_in+order+to_x" -> "_wait_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Hoelzer)" [label=BV]
	def_implicit_q -> time_n [label=BV]
}
