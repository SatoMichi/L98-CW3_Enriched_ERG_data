digraph {
	node [shape=circle style=filled]
	_large_a_1 -> _quake_n_1 [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Deukmejian)" [label="ARG1-fn.Agent"]
	udef_q -> _transportation_n_1 [label=BV]
	udef_q -> _governor_n_1 [label=BV]
	comp -> _large_a_1 [label=ARG1]
	udef_q -> _state_n_of [label=BV]
	"_call_v_for-fn.IN" -> _investigation_n_1 [label="ARG2-fn.Topic"]
	compound -> _transportation_n_1 [label=ARG2]
	compound -> _state_n_of [label=ARG2]
	compound -> "named(George)" [label=ARG2]
	_the_q -> _structure_n_1 [label=BV]
	"_assure_v_of-fn.Telling" -> pron [label="ARG2-fn.NotExist"]
	_even_x_deg -> comp [label=ARG1]
	"_say_v_to-fn.IN" -> "_assure_v_of-fn.Telling" [label="ARG2-fn.Topic"]
	parg_d -> pron [label=ARG2]
	parg_d -> "_assure_v_of-fn.Telling" [label=ARG1]
	"_assure_v_of-fn.Telling" -> _can_v_modal [label="ARG3-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	compound -> _governor_n_1 [label=ARG2]
	udef_q -> _official_n_1 [label=BV]
	_a_q -> _investigation_n_1 [label=BV]
	_can_v_modal -> _withstand_v_1 [label=ARG1]
	_withstand_v_1 -> _structure_n_1 [label=ARG1]
	proper_q -> "named(Deukmejian)" [label=BV]
	"_call_v_for-fn.IN" -> "named(Deukmejian)" [label="ARG1-fn.Agent"]
	proper_q -> "named(George)" [label=BV]
	compound -> "named(Deukmejian)" [label=ARG1]
	"_assure_v_of-fn.Telling" -> _official_n_1 [label="ARG1-fn.NotExist"]
	_immediate_a_1 -> _investigation_n_1 [label=ARG1]
	compound -> _official_n_1 [label=ARG1]
	_withstand_v_1 -> _quake_n_1 [label=ARG2]
	_a_q -> _quake_n_1 [label=BV]
}
