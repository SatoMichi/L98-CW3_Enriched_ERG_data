digraph {
	node [shape=circle style=filled]
	focus_d -> _be_v_id [label=ARG2]
	"_say_v_to-fn.IN" -> _would_v_modal [label="ARG2-fn.Topic"]
	comp_less -> _for_p [label=ARG2]
	comp_less -> _onerous_a_1 [label=ARG1]
	compound -> "named(Budget)" [label=ARG2]
	compound -> "named(James)" [label=ARG2]
	subord -> _onerous_a_1 [label=ARG2]
	udef_q -> _program_n_of [label=BV]
	_the_q -> _committee_n_of [label=BV]
	_the_q -> _cut_n_1 [label=BV]
	parenthetical -> "named(Sasser)" [label=ARG1]
	_simple_a_1 -> _be_v_id [label=ARG1]
	_of_p -> "named(Sasser)" [label=ARG1]
	_be_v_id -> _way_n_of [label=ARG2]
	_be_v_id -> pron [label=ARG1]
	compound -> "named(Tennessee)" [label=ARG1]
	udef_q -> _chairman_n_of [label=BV]
	_domestic_a_1 -> _program_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> _be_v_id [label="ARG2-fn.Topic"]
	proper_q -> "named(Sasser)" [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _defense_n_1 [label=BV]
	_the_q -> _request_n_for [label=BV]
	compound -> _chairman_n_of [label=ARG2]
	"_oppose_v_1-fn.NF" -> pron [label="ARG1-fn.Patient"]
	nominalization -> subord [label=ARG1]
	parenthetical -> "named(Tennessee)" [label=ARG2]
	_for_p -> _onerous_a_1 [label=ARG1]
	compound -> "named_n(Senate)" [label=ARG2]
	proper_q -> "named(James)" [label=BV]
	_for_p -> pron [label=ARG1]
	compound -> "named(D)" [label=ARG2]
	udef_q -> nominalization [label=BV]
	compound -> "named(Sasser)" [label=ARG1]
	udef_q -> "named_n(Senate)" [label=BV]
	proper_q -> "named(D)" [label=BV]
	udef_q -> "named(Tennessee)" [label=BV]
	proper_q -> "named(Budget)" [label=BV]
	_for_p -> _defense_n_1 [label=ARG2]
	_for_p -> _program_n_of [label=ARG2]
	subord -> "_make_v_1-fn.Earnings_and_losses" [label=ARG1]
	compound -> _committee_n_of [label=ARG1]
	_a_q -> _way_n_of [label=BV]
	"_oppose_v_1-fn.NF" -> _request_n_for [label="ARG2-fn.Co-Patient"]
	"_say_v_to-fn.IN" -> "named(Sasser)" [label="ARG1-fn.Agent"]
	_of_p -> _committee_n_of [label=ARG2]
	"_make_v_1-fn.Earnings_and_losses" -> _cut_n_1 [label="ARG2-fn.Theme"]
	_way_n_of -> nominalization [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_would_v_modal -> "_oppose_v_1-fn.NF" [label=ARG1]
}
