digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _business_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	poss -> _business_n_1 [label=ARG1]
	udef_q -> _line_n_of [label=BV]
	"_good_a_at-for-of" -> thing [label=ARG1]
	proper_q -> "named(Baum)" [label=BV]
	udef_q -> _order_n_of [label=BV]
	udef_q -> _profit_n_1 [label=BV]
	compound -> _bottom_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	neg -> "_good_a_at-for-of" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "named(Baum)" [label="ARG1-fn.Process"]
	free_relative_q -> thing [label=BV]
	comp_so -> "_good_a_at-for-of" [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _line_n_of [label=ARG1]
	poss -> pron [label=ARG2]
	udef_q -> _bottom_n_1 [label=BV]
	compound -> "named(Baum)" [label=ARG1]
	compound -> _profit_n_1 [label=ARG1]
	_the_q -> generic_entity [label=BV]
	"_have_v_1-fn.Competition" -> generic_entity [label="ARG1-fn.Participant_1"]
	"_focus_v_on-fn.Activity_ongoing" -> _profit_n_1 [label="ARG2-fn.Activity"]
	_order_n_of -> _and_c [label=ARG1]
	_a_q -> _look_n_at [label=BV]
	"card(2)" -> generic_entity [label=ARG1]
	"_take_v_1-fn.Competition" -> _look_n_at [label="ARG2-fn.Participant_2"]
	_hard_a_for -> _look_n_at [label=ARG1]
	"_have_v_1-fn.Competition" -> _order_n_of [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Cause_to_end" -> "_have_v_1-fn.Competition" [label="ARG2-fn.Means"]
	udef_q -> implicit_conj [label=BV]
	_look_n_at -> implicit_conj [label=ARG1]
}
