digraph {
	node [shape=circle style=filled]
	_from_p -> _quarter_n_temp [label=ARG2]
	"_note_v_to-fn.Cause_to_end" -> ellipsis_ref [label="ARG2-fn.Means"]
	subord -> "_note_v_to-fn.Cause_to_end" [label=ARG2]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	def_explicit_q -> "_backlog/nn_u_unknown" [label=BV]
	_the_q -> _quarter_n_temp [label=BV]
	parg_d -> pron [label=ARG2]
	_previous_a_1 -> _quarter_n_temp [label=ARG1]
	"_in+order+to_x" -> "_come_v_1-fn.Competition" [label=ARG2]
	"_position_v_1-fn.Competition" -> pron [label="ARG2-fn.Participant_2"]
	ellipsis_ref -> "_backlog/nn_u_unknown" [label=ARG1]
	parg_d -> "_position_v_1-fn.Competition" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	"_say_v_to-fn.Cause_to_end" -> "_in+order+to_x" [label="ARG2-fn.Means"]
	_through_p_dir -> "_come_v_1-fn.Competition" [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> _company_n_of [label=ARG2]
	_up_p -> ellipsis_ref [label=ARG1]
	"_come_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_in+order+to_x" -> "_position_v_1-fn.Competition" [label=ARG1]
	subord -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	_from_p -> _up_p [label=ARG1]
	poss -> "_backlog/nn_u_unknown" [label=ARG1]
	focus_d -> "_position_v_1-fn.Competition" [label=ARG2]
	_the_q -> _company_n_of [label=BV]
}
