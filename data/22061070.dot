digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Eastern)" [label=BV]
	parg_d -> "named(E)" [label=ARG2]
	poss -> "named(F)" [label=ARG1]
	"card(7)" -> _percent_n_of [label=ARG1]
	loc_nonsp -> "_rise_v_1-fn.Experiencer_obj" [label=ARG1]
	number_q -> "card(1)" [label=BV]
	compound -> _class_n_of [label=ARG2]
	"fraction(5/8)" -> generic_entity [label=ARG1]
	parg_d -> "named(F)" [label=ARG2]
	"_gain_v_1-fn.Change_position_on_a_scale" -> _or_c [label="ARG2-fn.Item"]
	compound -> "named(Class)" [label=ARG2]
	"_prefer_v_to-fn.Have_as_requirement" -> "named(F)" [label="ARG2-fn.Requirement"]
	compound -> "named(E)" [label=ARG1]
	parg_d -> "_prefer_v_to-fn.Have_as_requirement" [label=ARG1]
	proper_q -> "named(Class)" [label=BV]
	plus -> "card(1)" [label=ARG2]
	udef_q -> generic_entity [label=BV]
	plus -> "card(11)" [label=ARG2]
	udef_q -> _or_c [label=BV]
	_to_p -> "card(11)" [label=ARG2]
	poss -> "named(Eastern)" [label=ARG2]
	udef_q -> _percent_n_of [label=BV]
	_to_p -> "_gain_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	def_explicit_q -> "named(F)" [label=BV]
	"card(12)" -> _percent_n_of [label=ARG1]
	compound -> "named(F)" [label=ARG1]
	number_q -> "card(10)" [label=BV]
	udef_q -> _class_n_of [label=BV]
	plus -> "fraction(1/4)" [label=ARG3]
	_to_p -> "_rise_v_1-fn.Experiencer_obj" [label=ARG1]
	plus -> "fraction(3/4)" [label=ARG3]
	_the_q -> "named(E)" [label=BV]
	"_gain_v_1-fn.Change_position_on_a_scale" -> "named(E)" [label="ARG1-fn.Attribute"]
	number_q -> "card(11)" [label=BV]
	loc_nonsp -> _or_c [label=ARG2]
	_to_p -> "card(10)" [label=ARG2]
	"_prefer_v_to-fn.Have_as_requirement" -> "named(E)" [label="ARG2-fn.Requirement"]
	plus -> "card(10)" [label=ARG2]
	"_rise_v_1-fn.Experiencer_obj" -> "named(F)" [label="ARG1-fn.Experiencer"]
}
