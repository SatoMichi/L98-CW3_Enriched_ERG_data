digraph {
	node [shape=circle style=filled]
	compound -> "named(Treble)" [label=ARG1]
	_like_p -> _or_c [label=ARG2]
	udef_q -> _method_n_of [label=BV]
	nominalization -> _sound_v_1 [label=ARG1]
	parg_d -> _pattern_n_1 [label=ARG2]
	compound -> "named(Bob)" [label=ARG1]
	proper_q -> "named(Treble)" [label=BV]
	proper_q -> "named(Grandsire)" [label=BV]
	proper_q -> "named(Major)" [label=BV]
	proper_q -> "named(Bob)" [label=BV]
	compound -> "named(Kent)" [label=ARG2]
	"_know_v_as-fn.IN" -> _pattern_n_1 [label="ARG2-fn.Theme"]
	parg_d -> "_know_v_as-fn.IN" [label=ARG1]
	compound -> nominalization [label=ARG2]
	"_memorize_v_1-fn.NF" -> _ringer_n_1 [label="ARG1-fn.Agent"]
	udef_q -> _or_c [label=BV]
	udef_q -> _pattern_n_1 [label=BV]
	udef_q -> _change_n_of [label=BV]
	"_memorize_v_1-fn.NF" -> _pattern_n_1 [label="ARG2-fn.Topic"]
	udef_q -> nominalization [label=BV]
	_odd_a_to -> nominalization [label=ARG1]
	compound -> _name_n_of [label=ARG1]
	"_have_v_1-fn.IN" -> _method_n_of [label="ARG1-fn.Pivot"]
	compound -> "named(Grandsire)" [label=ARG2]
	compound -> "named(Major)" [label=ARG1]
	proper_q -> "named(Kent)" [label=BV]
	compound -> "named(Caters)" [label=ARG1]
	"_have_v_1-fn.IN" -> _name_n_of [label="ARG2-fn.Theme"]
	_of_p -> _pattern_n_1 [label=ARG1]
	udef_q -> _ringer_n_1 [label=BV]
	udef_q -> _name_n_of [label=BV]
	"_know_v_as-fn.IN" -> _method_n_of [label="ARG3-fn.Predicate"]
	proper_q -> "named(Caters)" [label=BV]
	_of_p -> _change_n_of [label=ARG2]
	_like_p -> _name_n_of [label=ARG1]
}
