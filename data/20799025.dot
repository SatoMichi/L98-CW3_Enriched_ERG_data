digraph {
	node [shape=circle style=filled]
	"_try_v_1-fn.Attempt" -> "_resume_v_1-fn.Attempt_suasion" [label="ARG2-fn.Goal"]
	_of_p -> _world_n_of [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	"_resume_v_1-fn.Attempt_suasion" -> "named(Technology)" [label="ARG1-fn.Content"]
	_tiny_a_1 -> "named(Technology)" [label=ARG1]
	_new_a_1 -> _world_n_of [label=ARG1]
	proper_q -> "named(Iverson)" [label=BV]
	focus_d -> "_try_v_1-fn.Attempt" [label=ARG1]
	udef_q -> nominalization [label=BV]
	_in_p_state -> _approach_n_to [label=ARG2]
	poss -> _growth_n_of [label=ARG1]
	udef_q -> _product_n_1 [label=BV]
	_of_p -> _product_n_1 [label=ARG2]
	_in_p_state -> "_try_v_1-fn.Attempt" [label=ARG1]
	compound -> "named(Iverson)" [label=ARG2]
	"_resume_v_1-fn.Attempt_suasion" -> _growth_n_of [label="ARG2-fn.Addressee"]
	pronoun_q -> pron [label=BV]
	"_brave_v_1-fn.Rite" -> _world_n_of [label="ARG2-fn.Member"]
	poss -> pron [label=ARG2]
	_by_p_means -> "_resume_v_1-fn.Attempt_suasion" [label=ARG1]
	proper_q -> "named(Technology)" [label=BV]
	_by_p_means -> nominalization [label=ARG2]
	_another_q -> _approach_n_to [label=BV]
	def_explicit_q -> _growth_n_of [label=BV]
	"_try_v_1-fn.Attempt" -> "named(Technology)" [label="ARG1-fn.Agent"]
	nominalization -> "_brave_v_1-fn.Rite" [label=ARG1]
	_commercial_a_1 -> _product_n_1 [label=ARG1]
	_the_q -> _world_n_of [label=BV]
	compound -> "named(Technology)" [label=ARG1]
}
