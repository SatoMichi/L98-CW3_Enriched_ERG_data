digraph {
	node [shape=circle style=filled]
	compound -> _reserve_n_1 [label=ARG2]
	udef_q -> _reserve_n_1 [label=BV]
	_the_q -> _seller_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	"_be_v_there-fn.Needing" -> _bid_n_1 [label="ARG1-fn.Cognizer"]
	"_be_v_nv-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	neg -> "_be_v_there-fn.Needing" [label=ARG1]
	neg -> "_be_v_nv-fn.Cause_to_end" [label=ARG1]
	"_set_v_1-fn.Change_position_on_a_scale" -> _seller_n_of [label="ARG1-fn.Attribute"]
	_any_q -> _bid_n_1 [label=BV]
	parg_d -> _price_n_of [label=ARG2]
	neg -> "_meet_v_1-fn.State_continue" [label=ARG1]
	"_meet_v_1-fn.State_continue" -> _bid_n_1 [label="ARG1-fn.Entity"]
	"_be_v_nv-fn.Cause_to_end" -> neg [label="ARG2-fn.Means"]
	_the_q -> _price_n_of [label=BV]
	_minimum_a_1 -> _reserve_n_1 [label=ARG1]
	"_meet_v_1-fn.State_continue" -> _price_n_of [label="ARG2-fn.State"]
	"_set_v_1-fn.Change_position_on_a_scale" -> _price_n_of [label="ARG2-fn.Item"]
	compound -> _price_n_of [label=ARG1]
	parg_d -> "_set_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	_the_q -> _bid_n_1 [label=BV]
}
