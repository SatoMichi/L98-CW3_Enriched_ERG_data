digraph {
	node [shape=circle style=filled]
	focus_d -> _on_p_temp [label=ARG2]
	_for_p -> _calculation_n_of [label=ARG2]
	_about_p -> _bug_n_1 [label=ARG2]
	proper_q -> "dofw(Fri)" [label=BV]
	"_begin_v_1-fn.Attack" -> "_notify_v_of-fn.State_continue" [label="ARG1-fn.Victim"]
	"_give_v_1-fn.State_continue" -> _chip_n_1 [label="ARG1-fn.Entity"]
	_mathematical_a_1 -> _calculation_n_of [label=ARG1]
	"_cause_v_1-fn.Change_of_quantity_of_possession" -> _chip_n_1 [label="ARG2-fn.Possession"]
	"_give_v_1-fn.State_continue" -> _answer_n_to [label="ARG2-fn.State"]
	_about_p -> "_notify_v_of-fn.State_continue" [label=ARG1]
	_on_p_temp -> "_begin_v_1-fn.Attack" [label=ARG1]
	proper_q -> "named(Intel)" [label=BV]
	"_cause_v_1-fn.Change_of_quantity_of_possession" -> _bug_n_1 [label="ARG1-fn.Owner"]
	_for_p -> "_give_v_1-fn.State_continue" [label=ARG1]
	_some_q -> _calculation_n_of [label=BV]
	"_cause_v_1-fn.Change_of_quantity_of_possession" -> "_give_v_1-fn.State_continue" [label="ARG3-fn.Time"]
	_on_p_temp -> "dofw(Fri)" [label=ARG2]
	focus_d -> "_begin_v_1-fn.Attack" [label=ARG1]
	_the_q -> _bug_n_1 [label=BV]
	"_notify_v_of-fn.State_continue" -> _customer_n_of [label="ARG2-fn.State"]
	_the_q -> _chip_n_1 [label=BV]
	udef_q -> _answer_n_to [label=BV]
	udef_q -> _customer_n_of [label=BV]
	"_notify_v_of-fn.State_continue" -> "named(Intel)" [label="ARG1-fn.Entity"]
	_wrong_a_with -> _answer_n_to [label=ARG1]
}
