digraph {
	node [shape=circle style=filled]
	"_allow_v_1-fn.IN" -> _agency_n_1 [label="ARG1-fn.NotExist"]
	_the_q -> _agency_n_1 [label=BV]
	udef_q -> _mushroom_n_1 [label=BV]
	"_in+order+to_x" -> "_implement_v_1-fn.Execute_plan" [label=ARG1]
	_in_p -> _brine_n_1 [label=ARG2]
	_chinese_a_1 -> _plant_n_1 [label=ARG1]
	udef_q -> _control_n_of [label=BV]
	_at_p -> _plant_n_1 [label=ARG2]
	_until_x_h -> neg [label=ARG1]
	_bacterial_a_1 -> _contamination_n_of [label=ARG1]
	"_allow_v_1-fn.IN" -> _enter_v_1 [label="ARG3-fn.NotExist"]
	parg_d -> "_pack_v_1-fn.Placing" [label=ARG1]
	"_pack_v_1-fn.Placing" -> _mushroom_n_1 [label="ARG2-fn.Destination"]
	parg_d -> "_implement_v_1-fn.Execute_plan" [label=ARG1]
	_until_x_h -> "_in+order+to_x" [label=ARG2]
	parg_d -> "_can_v_1-fn.Preserving" [label=ARG1]
	_the_q -> "named_n(US)" [label=BV]
	compound -> _measure_n_1 [label=ARG1]
	udef_q -> _sanitation_n_1 [label=BV]
	compound -> _control_n_of [label=ARG1]
	"_prevent_v_from-fn.Preventing" -> _measure_n_1 [label="ARG1-fn.NotExist"]
	_satisfactory_a_for -> _measure_n_1 [label=ARG1]
	udef_q -> _contamination_n_of [label=BV]
	"_allow_v_1-fn.IN" -> _mushroom_n_1 [label="ARG2-fn.NotExist"]
	udef_q -> _measure_n_1 [label=BV]
	compound -> _sanitation_n_1 [label=ARG2]
	udef_q -> _brine_n_1 [label=BV]
	proper_q -> "named(China)" [label=BV]
	_in_p -> "_pack_v_1-fn.Placing" [label=ARG1]
	_any_q -> _plant_n_1 [label=BV]
	neg -> "_allow_v_1-fn.IN" [label=ARG1]
	_enter_v_1 -> _mushroom_n_1 [label=ARG1]
	parg_d -> _mushroom_n_1 [label=ARG2]
	_at_p -> _or_c [label=ARG1]
	parg_d -> _measure_n_1 [label=ARG2]
	_in_p -> "named(China)" [label=ARG2]
	"_in+order+to_x" -> "_prevent_v_from-fn.Preventing" [label=ARG2]
	"_can_v_1-fn.Preserving" -> _mushroom_n_1 [label="ARG2-fn.Theme"]
	"_prevent_v_from-fn.Preventing" -> _contamination_n_of [label="ARG2-fn.Theme"]
	"_implement_v_1-fn.Execute_plan" -> _measure_n_1 [label="ARG2-fn.Theme"]
	_enter_v_1 -> "named_n(US)" [label=ARG2]
	_in_p -> "_implement_v_1-fn.Execute_plan" [label=ARG1]
}
