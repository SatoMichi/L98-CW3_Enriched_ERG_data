digraph {
	node [shape=circle style=filled]
	of_p -> _night_n_of [label=ARG1]
	"_check_v_out-fn.IN" -> _engineer_n_1 [label="ARG1-fn.Agent"]
	udef_q -> _engineer_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "named(Belli)" [label="ARG1-fn.Agent"]
	"_investigate_v_1-fn.Scrutiny" -> _engineer_n_1 [label="ARG1-fn.Agent"]
	_the_q -> _collapse_n_1 [label=BV]
	poss -> pron [label=ARG2]
	_at_p -> "named(Belli)" [label=ARG1]
	poss -> _building_n_1 [label=ARG1]
	parg_d -> _building_n_1 [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_the_q -> "named(Series)" [label=BV]
	_at_p -> "named(Park)" [label=ARG2]
	_civil_a_1 -> _engineer_n_1 [label=ARG1]
	"_check_v_out-fn.IN" -> _building_n_1 [label="ARG2-fn.Location"]
	compound -> "named(Series)" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _bridge_n_1 [label=BV]
	"_say_v_to-fn.IN" -> "_hire_v_1-fn.Hiring" [label="ARG2-fn.Topic"]
	"_damage_v_1-fn.Damaging" -> _building_n_1 [label="ARG2-fn.Patient"]
	compound -> _bridge_n_1 [label=ARG2]
	def_implicit_q -> "dofw(Tue)" [label=BV]
	parg_d -> "_damage_v_1-fn.Damaging" [label=ARG1]
	"_in+order+to_x" -> "_check_v_out-fn.IN" [label=ARG2]
	proper_q -> "named(Park)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_hire_v_1-fn.Hiring" -> pron [label="ARG1-fn.Agent"]
	_own_a_1 -> _building_n_1 [label=ARG1]
	"_hire_v_1-fn.Hiring" -> _engineer_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(World)" [label=ARG2]
	proper_q -> "named(Candlestick)" [label=BV]
	proper_q -> "named(World)" [label=BV]
	_for_p -> _at_p [label=ARG1]
	eventuality -> "_investigate_v_1-fn.Scrutiny" [label=ARG1]
	loc_nonsp -> _night_n_of [label=ARG2]
	of_p -> "dofw(Tue)" [label=ARG2]
	compound -> _collapse_n_1 [label=ARG1]
	compound -> "named(Park)" [label=ARG1]
	compound -> "named(Candlestick)" [label=ARG2]
	proper_q -> "named(Belli)" [label=BV]
	_mild_a_1 -> "_damage_v_1-fn.Damaging" [label=ARG1]
	"_investigate_v_1-fn.Scrutiny" -> _collapse_n_1 [label="ARG2-fn.Location"]
	compound -> "named(Belli)" [label=ARG1]
	def_explicit_q -> _building_n_1 [label=BV]
	_for_p -> "named(Series)" [label=ARG2]
	def_explicit_q -> _night_n_of [label=BV]
	loc_nonsp -> _at_p [label=ARG1]
}
