digraph {
	node [shape=circle style=filled]
	compound -> _manager_n_of [label=ARG1]
	_too_a_also -> _but_c [label=ARG1]
	subord -> _move_v_1 [label=ARG1]
	poss -> pron [label=ARG2]
	"_arouse_v_1-fn.Experiencer_obj" -> _suspicion_n_1 [label="ARG2-fn.Experiencer"]
	"_avoid_v_1-fn.Avoiding" -> "_arouse_v_1-fn.Experiencer_obj" [label="ARG2-fn.Theme"]
	_other_a_1 -> _manager_n_of [label=ARG1]
	compound -> _system_n_of [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	poss -> _system_n_of [label=ARG1]
	def_explicit_q -> _system_n_of [label=BV]
	udef_q -> _system_n_of [label=BV]
	_open_a_1 -> _system_n_of [label=ARG1]
	_move_v_1 -> _hacker_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_in+order+to_x" -> _call_v_up [label=ARG1]
	"_in+order+to_x" -> "_alert_v_to-fn.NF" [label=ARG2]
	"_keep_v_prd-fn.Cause_to_continue" -> _system_n_of [label="ARG2-fn.Theme"]
	"_in+order+to_x" -> "_keep_v_prd-fn.Cause_to_continue" [label=ARG1]
	"_keep_v_prd-fn.Cause_to_continue" -> _open_a_1 [label="ARG3-fn.NotExist"]
	_the_q -> _hacker_n_1 [label=BV]
	_own_a_1 -> _system_n_of [label=ARG1]
	proper_q -> "named(Stoll)" [label=BV]
	_move_v_1 -> "named(Stoll)" [label=ARG1]
	udef_q -> _manager_n_of [label=BV]
	_when_x_subord -> _move_v_1 [label=ARG2]
	_call_v_up -> _manager_n_of [label=ARG2]
	udef_q -> _suspicion_n_1 [label=BV]
	_when_x_subord -> subord [label=ARG1]
	"_alert_v_to-fn.NF" -> pron [label="ARG2-fn.Recipient"]
	subord -> _too_a_also [label=ARG2]
	"_in+order+to_x" -> "_avoid_v_1-fn.Avoiding" [label=ARG2]
	compound -> "named(Stoll)" [label=ARG1]
}
