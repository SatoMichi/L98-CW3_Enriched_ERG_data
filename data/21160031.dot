digraph {
	node [shape=circle style=filled]
	"_assert_v_to-fn.Statement" -> _state_n_of [label="ARG1-fn.Agent"]
	_by_p_means -> nominalization [label=ARG2]
	_the_q -> _man_n_1 [label=BV]
	udef_q -> _state_n_of [label=BV]
	_design_n_of -> _structure_n_1 [label=ARG1]
	udef_q -> _court_n_of [label=BV]
	"_know_v_1-fn.IN" -> _official_n_1 [label="ARG1-fn.Agent"]
	"_show_v_1-fn.IN" -> _or_c [label="ARG2-fn.NotExist"]
	_should_v_modal -> "_know_v_1-fn.IN" [label=ARG1]
	_defeat_v_1 -> _man_n_1 [label=ARG1]
	_often_a_1 -> "_assert_v_to-fn.Statement" [label=ARG1]
	_the_q -> _structure_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _change_n_of [label=BV]
	_in_p -> _court_n_of [label=ARG2]
	"_assert_v_to-fn.Statement" -> _immunity_n_1 [label="ARG2-fn.Theme"]
	_can_v_modal -> _defeat_v_1 [label=ARG1]
	udef_q -> _official_n_1 [label=BV]
	_make_v_1 -> pron [label=ARG1]
	"_fail_v_1-fn.NF" -> _make_v_1 [label="ARG1-fn.NotExist"]
	_defeat_v_1 -> _immunity_n_1 [label=ARG2]
	_by_p_means -> _defeat_v_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	_in_p -> "_assert_v_to-fn.Statement" [label=ARG1]
	udef_q -> _design_n_of [label=BV]
	_reasonable_a_for -> _change_n_of [label=ARG1]
	"_know_v_1-fn.IN" -> _and_c [label="ARG2-fn.Theme"]
	udef_q -> _immunity_n_1 [label=BV]
	nominalization -> "_show_v_1-fn.IN" [label=ARG1]
	_defective_a_1 -> _design_n_of [label=ARG1]
	_make_v_1 -> _change_n_of [label=ARG2]
}
