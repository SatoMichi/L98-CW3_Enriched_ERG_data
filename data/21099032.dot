digraph {
	node [shape=circle style=filled]
	"_get_v_state-fn.Residence" -> _settle_v_1 [label="ARG2-fn.Location"]
	"_begin_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_bare_a_1 -> "_begin_v_1-fn.Competition" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	poss -> _job_n_of [label=ARG1]
	_into_p -> _settle_v_1 [label=ARG1]
	_before_x_h -> "_have_v_1-fn.Competition" [label=ARG2]
	"_have_v_1-fn.Competition" -> _chance_n_of [label="ARG2-fn.Participant_2"]
	"_have_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_tough_a_for -> _decision_n_1 [label=ARG1]
	_new_a_1 -> _job_n_of [label=ARG1]
	_a_q -> _chance_n_of [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_face_v_1-fn.Expectation" -> "named(Corry)" [label="ARG1-fn.Cognizer"]
	_before_x_h -> "_face_v_1-fn.Expectation" [label=ARG1]
	proper_q -> "named(Corry)" [label=BV]
	pronoun_q -> pron [label=BV]
	focus_d -> "_begin_v_1-fn.Competition" [label=ARG1]
	poss -> pron [label=ARG2]
	_chance_n_of -> "_get_v_state-fn.Residence" [label=ARG1]
	def_explicit_q -> _job_n_of [label=BV]
	"_face_v_1-fn.Expectation" -> _decision_n_1 [label="ARG2-fn.Phenomenon"]
	compound -> "named(Corry)" [label=ARG1]
	"_in+fact_a_1" -> "_begin_v_1-fn.Competition" [label=ARG1]
	_for_p -> "named(Corry)" [label=ARG2]
	_into_p -> _job_n_of [label=ARG2]
	udef_q -> _decision_n_1 [label=BV]
	parg_d -> _settle_v_1 [label=ARG1]
	_for_p -> "_begin_v_1-fn.Competition" [label=ARG1]
}
