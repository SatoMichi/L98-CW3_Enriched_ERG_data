digraph {
	node [shape=circle style=filled]
	compound -> _program_n_of [label=ARG2]
	_a_q -> _plunge_n_of [label=BV]
	_because_x -> _defend_v_from [label=ARG1]
	proper_q -> "named(Jim)" [label=BV]
	_up_p -> place_n [label=ARG1]
	udef_q -> _program_n_of [label=BV]
	def_implicit_q -> place_n [label=BV]
	_defend_v_from -> nominalization [label=ARG2]
	_after_p -> "_bring_v_1-fn.Bringing" [label=ARG1]
	nominalization -> _trade_v_1 [label=ARG1]
	proper_q -> "named(Atlanta)" [label=BV]
	compound -> "named(Jim)" [label=ARG2]
	_can_v_modal -> "_bring_v_1-fn.Bringing" [label=ARG1]
	proper_q -> "named(Enzor)" [label=BV]
	loc_nonsp -> _market_n_1 [label=ARG1]
	"_believe_v_1-fn.Opinion" -> pron [label="ARG1-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	"_bring_v_1-fn.Bringing" -> _market_n_1 [label="ARG2-fn.Theme"]
	_of_p -> "named(Enzor)" [label=ARG1]
	_because_x -> "_believe_v_1-fn.Opinion" [label=ARG2]
	"_bring_v_1-fn.Bringing" -> pron [label="ARG1-fn.Instrument"]
	_defend_v_from -> "named(Enzor)" [label=ARG1]
	compound -> "named(Enzor)" [label=ARG1]
	"_believe_v_1-fn.Opinion" -> _can_v_modal [label="ARG2-fn.NotExist"]
	udef_q -> nominalization [label=BV]
	_after_p -> _plunge_n_of [label=ARG2]
	"_bring_v_1-fn.Bringing" -> loc_nonsp [label="ARG3-fn.NotExist"]
	_of_p -> "named(Atlanta)" [label=ARG2]
	loc_nonsp -> place_n [label=ARG2]
	_back_p -> place_n [label=ARG1]
	_the_q -> _market_n_1 [label=BV]
	compound -> nominalization [label=ARG1]
}
