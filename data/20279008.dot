digraph {
	node [shape=circle style=filled]
	_a_q -> _statement_n_of [label=BV]
	focus_d -> _in_p_state [label=ARG2]
	focus_d -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	udef_q -> _company_n_1 [label=BV]
	"_believe_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	compound -> "named(Edward)" [label=ARG2]
	def_explicit_q -> _decision_n_1 [label=BV]
	compound -> _company_n_1 [label=ARG1]
	_to_p -> _guilty_a_of [label=ARG1]
	poss -> _decision_n_1 [label=ARG1]
	_decision_n_1 -> "_plead_v_with-for-fn.Have_as_requirement" [label=ARG1]
	_in_p_state -> "_say_v_to-fn.Cause_to_end" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "named(Addison)" [label="ARG1-fn.Process"]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_these_q_dem -> _charge_n_of [label=BV]
	"_believe_v_1-fn.Competition" -> _and_c [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Addison)" [label=BV]
	_proper_a_1 -> _decision_n_1 [label=ARG1]
	proper_q -> "named(L)" [label=BV]
	compound -> "named(Southern)" [label=ARG2]
	proper_q -> "named(Edward)" [label=BV]
	compound -> _president_n_of [label=ARG1]
	_responsible_a_for -> _decision_n_1 [label=ARG1]
	_to_p -> _charge_n_of [label=ARG2]
	compound -> "named(L)" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> "_believe_v_1-fn.Competition" [label="ARG2-fn.Means"]
	proper_q -> "named(Southern)" [label=BV]
	_in_p_state -> _statement_n_of [label=ARG2]
	udef_q -> _president_n_of [label=BV]
	compound -> "named(Addison)" [label=ARG1]
	"_plead_v_with-for-fn.Have_as_requirement" -> _guilty_a_of [label="ARG2-fn.Requirement"]
}
