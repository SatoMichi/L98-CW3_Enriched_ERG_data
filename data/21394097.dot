digraph {
	node [shape=circle style=filled]
	_while_x -> _fly_v_1 [label=ARG2]
	"_have_v_qmodal-fn.Cause_to_end" -> _while_x [label="ARG1-fn.Process"]
	compound -> _union_n_of [label=ARG2]
	"_say_v_to-fn.Surpassing" -> "_have_v_qmodal-fn.Cause_to_end" [label="ARG2-fn.Profiled_item"]
	compound -> _harangue_n_1 [label=ARG1]
	"_say_v_to-fn.Surpassing" -> _pilot_n_of [label="ARG1-fn.Standard_item"]
	"_anti-_a_1" -> _union_n_of [label=ARG1]
	_senior_a_1 -> _pilot_n_of [label=ARG1]
	_by_p -> _pilot_n_of [label=ARG2]
	_young_a_1 -> _pilot_n_of [label=ARG1]
	udef_q -> _union_n_of [label=BV]
	udef_q -> _pilot_n_of [label=BV]
	_across_p_dir -> _country_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_endure_v_1-fn.Competition" -> _harangue_n_1 [label="ARG2-fn.Participant_2"]
	_the_q -> _country_n_of [label=BV]
	comp -> _young_a_1 [label=ARG1]
	_some_q -> _pilot_n_of [label=BV]
	_by_p -> _harangue_n_1 [label=ARG1]
	_across_p_dir -> _fly_v_1 [label=ARG1]
	udef_q -> _harangue_n_1 [label=BV]
	_while_x -> "_endure_v_1-fn.Competition" [label=ARG1]
	"_endure_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
}
