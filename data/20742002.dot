digraph {
	node [shape=circle style=filled]
	"_curb_v_1-fn.NF" -> _answer_n_to [label="ARG1-fn.Agent"]
	nominalization -> "_curb_v_1-fn.NF" [label=ARG1]
	udef_q -> _price_n_of [label=BV]
	compound -> _future_n_1 [label=ARG1]
	"_curb_v_1-fn.NF" -> _swing_n_1 [label="ARG2-fn.Patient"]
	focus_d -> _answer_n_to [label=ARG2]
	_real_a_1 -> _answer_n_to [label=ARG1]
	"_say_v_to-fn.IN" -> _might_v_modal [label="ARG2-fn.NotExist"]
	udef_q -> _index_n_1 [label=BV]
	_even_a_1 -> "_abolish_v_1-fn.NF" [label=ARG1]
	_wild_a_1 -> _swing_n_1 [label=ARG1]
	compound -> _stock_n_1 [label=ARG2]
	_in_p -> _swing_n_1 [label=ARG1]
	compound -> _index_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _swing_n_1 [label=BV]
	udef_q -> _stock_n_1 [label=BV]
	_answer_n_to -> nominalization [label=ARG1]
	_might_v_modal -> eventuality [label=ARG1]
	_the_q -> _answer_n_to [label=BV]
	"_abolish_v_1-fn.NF" -> _future_n_1 [label="ARG2-fn.Theme"]
	"_curb_v_1-fn.NF" -> _future_n_1 [label="ARG2-fn.Patient"]
	udef_q -> _future_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	eventuality -> _or_c [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_in_p -> _price_n_of [label=ARG2]
	compound -> _price_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_abolish_v_1-fn.NF" -> _answer_n_to [label="ARG1-fn.Agent"]
}
