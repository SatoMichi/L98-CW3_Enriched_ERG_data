digraph {
	node [shape=circle style=filled]
	neg -> _charge_v_1 [label=ARG1]
	"_allow_v_1-fn.IN" -> _zip_v_1 [label="ARG3-fn.NotExist"]
	_still_a_1 -> "_connect_v_to-with-fn.IN" [label=ARG1]
	_moreover_a_1 -> subord [label=ARG1]
	proper_q -> "named(Francisco)" [label=BV]
	"_connect_v_to-with-fn.IN" -> _bridge_n_1 [label="ARG1-fn.Agent"]
	compound -> "named(San)" [label=ARG2]
	_zip_v_1 -> _traffic_n_1 [label=ARG1]
	"card(2)" -> _bridge_n_1 [label=ARG1]
	_the_q -> _bridge_n_1 [label=BV]
	"_connect_v_to-with-fn.IN" -> "named(Bay)" [label="ARG3-fn.NotExist"]
	_charge_v_1 -> _bridge_n_1 [label=ARG1]
	_without_p -> _zip_v_1 [label=ARG1]
	subord -> neg [label=ARG1]
	"_allow_v_1-fn.IN" -> _traffic_n_1 [label="ARG2-fn.NotExist"]
	_the_q -> "named(Bay)" [label=BV]
	_through_p_dir -> _zip_v_1 [label=ARG1]
	compound -> "named(Francisco)" [label=ARG1]
	udef_q -> _toll_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	subord -> "_allow_v_1-fn.IN" [label=ARG2]
	_without_p -> nominalization [label=ARG2]
	nominalization -> _stop_v_1 [label=ARG1]
	compound -> "named(Bay)" [label=ARG1]
	udef_q -> _traffic_n_1 [label=BV]
	proper_q -> "named(San)" [label=BV]
	"_connect_v_to-with-fn.IN" -> "named(Francisco)" [label="ARG2-fn.Patient"]
	_charge_v_1 -> _toll_n_1 [label=ARG2]
	proper_q -> "named(East)" [label=BV]
	compound -> "named(East)" [label=ARG2]
	_main_a_1 -> _bridge_n_1 [label=ARG1]
}
