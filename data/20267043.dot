digraph {
	node [shape=circle style=filled]
	_under_p -> _taint_n_1 [label=ARG2]
	_the_q -> _taint_n_1 [label=BV]
	_the_q -> _process_n_of [label=BV]
	_ago_p -> "_speak_v_out-fn.Change_posture" [label=ARG1]
	"_be_v_id-fn.Residence" -> pron [label="ARG1-fn.Resident"]
	udef_q -> _or_c [label=BV]
	pronoun_q -> pron [label=BV]
	"_speak_v_out-fn.Change_posture" -> _or_c [label="ARG1-fn.Manner"]
	_a_q -> _banker_n_1 [label=BV]
	loc_nonsp -> "_be_v_id-fn.Residence" [label=ARG1]
	"_would_v_modal-fn.Cause_to_end" -> _under_p [label="ARG1-fn.Process"]
	_judicial_a_1 -> _process_n_of [label=ARG1]
	_ago_p -> _year_n_1 [label=ARG2]
	_today_a_1 -> time_n [label=ARG1]
	udef_q -> _year_n_1 [label=BV]
	_under_p -> _process_n_of [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_if_x_then -> "_speak_v_out-fn.Change_posture" [label=ARG2]
	_only_x_deg -> udef_q [label=ARG1]
	neg -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
	"_be_v_id-fn.Residence" -> _taint_n_1 [label="ARG2-fn.Location"]
	def_implicit_q -> time_n [label=BV]
	_a_q -> _lawyer_n_1 [label=BV]
	_if_x_then -> neg [label=ARG1]
}
