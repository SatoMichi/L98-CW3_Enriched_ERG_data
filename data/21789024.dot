digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Quina)" [label=BV]
	"_out+of_p" -> _perk_n_1 [label=ARG1]
	_benefit_v_from -> _system_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> "_get_v_state-fn.IN" [label="ARG2-fn.Topic"]
	proper_q -> "named(LA)" [label=BV]
	_simple_a_1 -> "_get_v_state-fn.IN" [label=ARG1]
	compound -> "named(LA)" [label=ARG2]
	idiom_q_i -> _hand_n_1 [label=BV]
	"_build_v_1-fn.Building" -> _system_n_of [label="ARG2-fn.Product"]
	proper_q -> "named(Guzman)" [label=BV]
	"_get_v_state-fn.IN" -> "_out+of_p" [label="ARG2-fn.Patient"]
	compound -> _mister_n_1 [label=ARG2]
	_also_a_1 -> _benefit_v_from [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	udef_q -> _union_n_of [label=BV]
	compound -> _perk_n_1 [label=ARG1]
	"_out+of_p" -> _hand_n_1 [label=ARG2]
	parg_d -> _system_n_of [label=ARG2]
	_benefit_v_from -> pron [label=ARG1]
	pronoun_q -> pron [label=BV]
	_long_a_1 -> _benefit_v_from [label=ARG1]
	"_build_v_1-fn.Building" -> "named(Quina)" [label="ARG1-fn.Agent"]
	_though_x -> "_say_v_to-fn.IN" [label=ARG1]
	compound -> "named(Guzman)" [label=ARG2]
	parg_d -> "_build_v_1-fn.Building" [label=ARG1]
	compound -> "named(Cabrera)" [label=ARG1]
	udef_q -> _perk_n_1 [label=BV]
	compound -> _union_n_of [label=ARG2]
	_though_x -> _also_a_1 [label=ARG2]
	_the_q -> _system_n_of [label=BV]
	"_say_v_to-fn.IN" -> "named(Cabrera)" [label="ARG1-fn.Agent"]
	"_get_v_state-fn.IN" -> _perk_n_1 [label="ARG1-fn.NotExist"]
	proper_q -> "named(Cabrera)" [label=BV]
	compound -> "named(Quina)" [label=ARG1]
}
