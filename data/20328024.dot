digraph {
	node [shape=circle style=filled]
	focus_d -> _hard_a_for [label=ARG2]
	_on_p -> "_gimmickry/nn_u_unknown" [label=ARG2]
	compound -> "named(Minnesota)" [label=ARG1]
	"_get_v_1-fn.IN" -> _attention_n_to [label="ARG2-fn.Theme"]
	"_say_v_to-fn.IN" -> "named(Frenzel)" [label="ARG1-fn.Agent"]
	proper_q -> "named(Frenzel)" [label=BV]
	compound -> "named(R)" [label=ARG2]
	_on_p -> _attention_n_to [label=ARG1]
	_whole_a_1 -> _agreement_n_1 [label=ARG1]
	compound -> "named(Frenzel)" [label=ARG1]
	parenthetical -> "named(Minnesota)" [label=ARG2]
	parenthetical -> "named(Frenzel)" [label=ARG1]
	poss -> _attention_n_to [label=ARG1]
	proper_q -> "named(Bill)" [label=BV]
	_because_x -> "_build_v_1-fn.Building" [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	poss -> _administration_n_of [label=ARG2]
	_hard_a_for -> "_get_v_1-fn.IN" [label=ARG1]
	compound -> _representative_n_1 [label=ARG2]
	_on_p -> "_build_v_1-fn.Building" [label=ARG1]
	_the_q -> _agreement_n_1 [label=BV]
	parg_d -> "_build_v_1-fn.Building" [label=ARG1]
	compound -> "named(Bill)" [label=ARG2]
	udef_q -> _representative_n_1 [label=BV]
	proper_q -> "named(R)" [label=BV]
	udef_q -> "named(Minnesota)" [label=BV]
	udef_q -> "_gimmickry/nn_u_unknown" [label=BV]
	parg_d -> _agreement_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _hard_a_for [label="ARG2-fn.NotExist"]
	_the_q -> _administration_n_of [label=BV]
	_because_x -> "_say_v_to-fn.IN" [label=ARG1]
	def_explicit_q -> _attention_n_to [label=BV]
	_any_q -> thing [label=BV]
	_on_p -> thing [label=ARG2]
	"_build_v_1-fn.Building" -> _agreement_n_1 [label="ARG2-fn.Product"]
}
