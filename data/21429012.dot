digraph {
	node [shape=circle style=filled]
	compound -> _chairman_n_of [label=ARG2]
	_although_x -> _control_v_1 [label=ARG2]
	_fierce_a_1 -> "_protect_v_1-fn.Assemble" [label=ARG1]
	proper_q -> "named(Dassault)" [label=BV]
	compound -> _government_n_of [label=ARG2]
	udef_q -> _government_n_of [label=BV]
	poss -> _son_n_of [label=ARG1]
	udef_q -> _chairman_n_of [label=BV]
	def_explicit_q -> _independence_n_1 [label=BV]
	def_explicit_q -> _son_n_of [label=BV]
	poss -> _independence_n_1 [label=ARG1]
	poss -> _founder_n_of [label=ARG2]
	compound -> "named(Serge)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_protect_v_1-fn.Assemble" -> _independence_n_1 [label="ARG2-fn.Group"]
	poss -> pron [label=ARG2]
	appos -> _son_n_of [label=ARG1]
	poss -> _company_n_of [label=ARG2]
	parg_d -> _control_v_1 [label=ARG1]
	_still_a_1 -> "_run_v_1-fn.Activity_start" [label=ARG1]
	parg_d -> "named(Dassault)" [label=ARG2]
	"_protect_v_1-fn.Assemble" -> "named(Dassault)" [label="ARG1-fn.Individuals"]
	_although_x -> "_run_v_1-fn.Activity_start" [label=ARG1]
	compound -> "named(Dassault)" [label=ARG1]
	"_run_v_1-fn.Activity_start" -> "named(Dassault)" [label="ARG2-fn.Purpose"]
	proper_q -> "named(Serge)" [label=BV]
	compound -> _control_v_1 [label=ARG1]
	def_explicit_q -> _company_n_of [label=BV]
	appos -> "named(Dassault)" [label=ARG2]
	parg_d -> "_run_v_1-fn.Activity_start" [label=ARG1]
	_the_q -> _founder_n_of [label=BV]
	"_run_v_1-fn.Activity_start" -> _son_n_of [label="ARG1-fn.Place"]
}
