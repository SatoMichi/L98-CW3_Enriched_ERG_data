digraph {
	node [shape=circle style=filled]
	_like_p -> _division_n_of [label=ARG2]
	_in_p -> _center_n_of [label=ARG2]
	_center_n_of -> _power_n_1 [label=ARG1]
	def_explicit_q -> _division_n_of [label=BV]
	"_other+than_p" -> _center_n_of [label=ARG1]
	"_other+than_p" -> _and_c [label=ARG2]
	_result_n_of -> _action_n_1 [label=ARG1]
	_just_x_deg -> _like_p [label=ARG1]
	udef_q -> _and_c [label=BV]
	pronoun_q -> pron [label=BV]
	udef_q -> _action_n_1 [label=BV]
	"_be_v_id-fn.Residence" -> _result_n_of [label="ARG2-fn.Location"]
	poss -> pron [label=ARG2]
	def_explicit_q -> _reunification_n_of [label=BV]
	"_be_v_id-fn.Residence" -> _reunification_n_of [label="ARG1-fn.Resident"]
	_ironic_a_1 -> pron [label=ARG1]
	poss -> "named(Germany)" [label=ARG2]
	_the_q -> _result_n_of [label=BV]
	poss -> _reunification_n_of [label=ARG1]
	_like_p -> _reunification_n_of [label=ARG1]
	poss -> _division_n_of [label=ARG1]
	udef_q -> _center_n_of [label=BV]
	proper_q -> "named(Berlin)" [label=BV]
	_if_x_then -> "_be_v_id-fn.Residence" [label=ARG2]
	proper_q -> "named(Bonn)" [label=BV]
	_in_p -> _action_n_1 [label=ARG1]
	"_would_v_modal-fn.Cause_to_end" -> _ironic_a_1 [label="ARG1-fn.Process"]
	_if_x_then -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
	_eventual_a_1 -> "_be_v_id-fn.Residence" [label=ARG1]
	udef_q -> _power_n_1 [label=BV]
	proper_q -> "named(Germany)" [label=BV]
}
