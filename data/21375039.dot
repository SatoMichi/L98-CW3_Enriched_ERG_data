digraph {
	node [shape=circle style=filled]
	def_explicit_q -> "named(School)" [label=BV]
	compound -> "named(Sloan)" [label=ARG2]
	compound -> "named(Massachusetts)" [label=ARG2]
	"_see_v_1-fn.Perception_experience" -> pron [label="ARG1-fn.Experiencer"]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	"_say_v_to-fn.IN" -> "named(Asquith)" [label="ARG1-fn.Agent"]
	_increase_v_1 -> _default_n_1 [label=ARG1]
	udef_q -> _professor_n_of [label=BV]
	_the_q -> _institute_n_of [label=BV]
	"_decline_v_1-fn.Change_position_on_a_scale" -> _rating_n_1 [label="ARG1-fn.NotExist"]
	udef_q -> _rating_n_1 [label=BV]
	udef_q -> _credit_n_1 [label=BV]
	_of_p -> "named(Management)" [label=ARG2]
	_if_x_then -> unknown [label=ARG2]
	compound -> _credit_n_1 [label=ARG2]
	proper_q -> "named(Management)" [label=BV]
	_institute_n_of -> "named(Technology)" [label=ARG1]
	_at_p -> "named(School)" [label=ARG2]
	"_going+to_v_qmodal" -> "_see_v_1-fn.Perception_experience" [label=ARG1]
	poss -> _institute_n_of [label=ARG2]
	udef_q -> _default_n_1 [label=BV]
	compound -> _professor_n_of [label=ARG1]
	udef_q -> _associate_n_of [label=BV]
	poss -> "named(School)" [label=ARG1]
	appos -> "named(Asquith)" [label=ARG1]
	proper_q -> "named(Paul)" [label=BV]
	pronoun_q -> pron [label=BV]
	compound -> _rating_n_1 [label=ARG1]
	compound -> "named(Paul)" [label=ARG2]
	_because_x -> "_decline_v_1-fn.Change_position_on_a_scale" [label=ARG2]
	_if_x_then -> _because_x [label=ARG1]
	proper_q -> "named(Asquith)" [label=BV]
	_of_p -> "named(School)" [label=ARG1]
	proper_q -> "named(Sloan)" [label=BV]
	compound -> "named(School)" [label=ARG1]
	_at_p -> _professor_n_of [label=ARG1]
	proper_q -> "named(Massachusetts)" [label=BV]
	compound -> "named(Asquith)" [label=ARG1]
	proper_q -> "named(Technology)" [label=BV]
	unknown -> thing [label=ARG]
	focus_d -> "_going+to_v_qmodal" [label=ARG2]
	appos -> _professor_n_of [label=ARG2]
	compound -> _associate_n_of [label=ARG2]
	compound -> _institute_n_of [label=ARG1]
	_because_x -> "_going+to_v_qmodal" [label=ARG1]
	"_see_v_1-fn.Perception_experience" -> _increase_v_1 [label="ARG2-fn.Stimulus"]
	_any_q -> thing [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
