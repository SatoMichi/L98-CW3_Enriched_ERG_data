digraph {
	node [shape=circle style=filled]
	_for_p -> "named(Scott)" [label=ARG2]
	compound -> "named(Scott)" [label=ARG1]
	_for_p -> _spokesman_n_1 [label=ARG1]
	poss -> _attorney_n_1 [label=ARG1]
	def_explicit_q -> _attorney_n_1 [label=BV]
	"_advise_v_1-fn.IN" -> neg [label="ARG3-fn.NotExist"]
	poss -> pron [label=ARG2]
	_to_p -> "_speak_v_to-fn.IN" [label=ARG1]
	_colon_p_namely -> "_speak_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _colon_p_namely [label="ARG2-fn.NotExist"]
	compound -> _mister_n_1 [label=ARG2]
	subord -> "_ask_v_1-fn.Request" [label=ARG2]
	_to_p -> _attorney_n_1 [label=ARG2]
	parg_d -> "_ask_v_1-fn.Request" [label=ARG1]
	"_advise_v_1-fn.IN" -> _attorney_n_1 [label="ARG1-fn.NotExist"]
	_to_p -> "_talk_v_about-fn.IN" [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	subord -> "_say_v_to-fn.IN" [label=ARG1]
	"_advise_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Scott)" [label=BV]
	"_speak_v_to-fn.IN" -> "named(Scott)" [label="ARG1-fn.NotExist"]
	neg -> "_talk_v_about-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _spokesman_n_1 [label="ARG1-fn.NotExist"]
	_a_q -> _spokesman_n_1 [label=BV]
	_any_q -> person [label=BV]
	"_ask_v_1-fn.Request" -> _comment_v_on [label="ARG3-fn.NotExist"]
	"_talk_v_about-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_to_p -> person [label=ARG2]
}
