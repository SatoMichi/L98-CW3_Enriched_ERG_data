digraph {
	node [shape=circle style=filled]
	"_stem_v_from-fn.NF" -> _failure_n_1 [label="ARG2-fn.Theme"]
	"_involve_v_1-fn.NF" -> _product_n_1 [label="ARG2-fn.NotExist"]
	compound -> "named(Egg)" [label=ARG2]
	"_say_v_to-fn.IN" -> "_stem_v_from-fn.NF" [label="ARG2-fn.Topic"]
	parg_d -> _break_v_cause [label=ARG1]
	"_stem_v_from-fn.NF" -> _handful_n_of [label="ARG1-fn.NotExist"]
	_adequate_a_1 -> "_cook_v_1-fn.Apply_heat" [label=ARG1]
	with_p -> _failure_n_1 [label=ARG2]
	udef_q -> "_salmonella/nn_u_unknown" [label=BV]
	_handful_n_of -> _case_n_of [label=ARG1]
	_the_q -> _handful_n_of [label=BV]
	_a_q -> "named(King)" [label=BV]
	compound -> "named(King)" [label=ARG1]
	_may_v_modal -> "_use_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Egg)" [label=BV]
	pronoun_q -> pron [label=BV]
	"_use_v_1-fn.IN" -> _product_n_1 [label="ARG1-fn.NotExist"]
	with_p -> "_cook_v_1-fn.Apply_heat" [label=ARG1]
	_a_q -> _failure_n_1 [label=BV]
	compound -> _case_n_of [label=ARG1]
	"_use_v_1-fn.IN" -> _egg_n_1 [label="ARG2-fn.NotExist"]
	compound -> "_salmonella/nn_u_unknown" [label=ARG2]
	"_involve_v_1-fn.NF" -> _case_n_of [label="ARG1-fn.NotExist"]
	_break_v_cause -> "named(King)" [label=ARG1]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_the_q -> _product_n_1 [label=BV]
	udef_q -> _product_n_1 [label=BV]
	udef_q -> _case_n_of [label=BV]
	udef_q -> _egg_n_1 [label=BV]
	"_cook_v_1-fn.Apply_heat" -> _product_n_1 [label="ARG2-fn.Product"]
	_break_v_cause -> _egg_n_1 [label=ARG2]
	parg_d -> _egg_n_1 [label=ARG2]
}
