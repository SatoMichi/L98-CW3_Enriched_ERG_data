digraph {
	node [shape=circle style=filled]
	"_make_v_cause-fn.Cause_to_end" -> "_happen_v_1-fn.Impact" [label="ARG2-fn.Means"]
	"_want_v_1-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	compound -> _takeover_n_of [label=ARG2]
	"_want_v_1-fn.State_continue" -> "_make_v_cause-fn.Cause_to_end" [label="ARG2-fn.State"]
	_just_a_1 -> "_want_v_1-fn.State_continue" [label=ARG1]
	udef_q -> _takeover_n_of [label=BV]
	"_say_v_to-fn.Have_as_requirement" -> _maybe_a_1 [label="ARG2-fn.Requirement"]
	_some_q -> thing [label=BV]
	_maybe_a_1 -> "_want_v_1-fn.State_continue" [label=ARG1]
	focus_d -> "_want_v_1-fn.State_continue" [label=ARG2]
	"card(1)" -> _expert_n_1 [label=ARG1]
	compound -> _expert_n_1 [label=ARG1]
	"_happen_v_1-fn.Impact" -> thing [label="ARG1-fn.Place"]
	pronoun_q -> pron [label=BV]
	udef_q -> _expert_n_1 [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	"_make_v_cause-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	"_say_v_to-fn.Have_as_requirement" -> _expert_n_1 [label="ARG1-fn.Dependent"]
}
