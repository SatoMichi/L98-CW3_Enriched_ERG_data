digraph {
	node [shape=circle style=filled]
	comp_too -> "_say_v_to-fn.IN" [label=ARG2]
	focus_d -> _after_p [label=ARG2]
	_after_p -> "_say_v_to-fn.IN" [label=ARG1]
	comp_too -> _early_a_1 [label=ARG1]
	_after_p -> _meeting_n_of [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	loc_nonsp -> pron [label=ARG1]
	_that_q_dem -> generic_entity [label=BV]
	udef_q -> _meeting_n_of [label=BV]
	"_say_v_to-fn.IN" -> "_happen_v_1-fn.Event" [label="ARG2-fn.Topic"]
	"_happen_v_1-fn.Event" -> generic_entity [label="ARG1-fn.NotExist"]
	_however_a_1 -> "_say_v_to-fn.IN" [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_with_p -> "named(Soviets)" [label=ARG2]
	"_say_v_to-fn.IN" -> _spokesman_n_1 [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> loc_nonsp [label="ARG2-fn.Topic"]
	_the_q -> "named(Soviets)" [label=BV]
	compound -> "named(State)" [label=ARG2]
	"card(2)" -> _meeting_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _spokesman_n_1 [label=ARG1]
	_early_a_1 -> time_n [label=ARG1]
	proper_q -> "named(State)" [label=BV]
	_a_q -> _spokesman_n_1 [label=BV]
	compound -> "named(Department)" [label=ARG1]
	proper_q -> "named(Department)" [label=BV]
	_with_p -> _meeting_n_of [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
