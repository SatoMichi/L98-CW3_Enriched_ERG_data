digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Art)" [label=BV]
	compound -> "named(Browns)" [label=ARG1]
	compound -> "named(Cleveland)" [label=ARG2]
	proper_q -> "named(Cleveland)" [label=BV]
	focus_d -> "_be_v_id-fn.Cause_to_end" [label=ARG2]
	udef_q -> _owner_n_of [label=BV]
	_a_q -> _circle_n_of [label=BV]
	focus_d -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	"_be_v_id-fn.Cause_to_end" -> _circle_n_of [label="ARG2-fn.Means"]
	"_say_v_to-fn.Have_as_requirement" -> "_be_v_id-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	compound -> "named(Art)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_be_v_id-fn.Cause_to_end" -> pron [label="ARG1-fn.Process"]
	_the_q -> "named(Browns)" [label=BV]
	appos -> _owner_n_of [label=ARG2]
	_owner_n_of -> "named(Browns)" [label=ARG1]
	appos -> "named(Modell)" [label=ARG1]
	compound -> "named(Modell)" [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Modell)" [label="ARG1-fn.Dependent"]
	proper_q -> "named(Modell)" [label=BV]
	_vicious_a_1 -> _circle_n_of [label=ARG1]
}
