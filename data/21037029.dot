digraph {
	node [shape=circle style=filled]
	_if_x_then -> "_be_v_there-fn.Cause_to_end" [label=ARG2]
	"_be_v_there-fn.Cause_to_end" -> _drive_n_1 [label="ARG1-fn.Process"]
	appos -> "named(Arai)" [label=ARG1]
	_at_p -> _economist_n_1 [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> "named(Arai)" [label="ARG1-fn.Dependent"]
	with_p -> _drive_n_1 [label=ARG2]
	_a_q -> _economist_n_1 [label=BV]
	with_p -> _export_v_1 [label=ARG1]
	compound -> "named(Bank)" [label=ARG1]
	appos -> _economist_n_1 [label=ARG2]
	"_say_v_to-fn.Have_as_requirement" -> "_be_v_id-fn.Cause_to_end" [label="ARG2-fn.Requirement"]
	_the_q -> "named(Bank)" [label=BV]
	compound -> "named(Arai)" [label=ARG1]
	_if_x_then -> "_say_v_to-fn.Have_as_requirement" [label=ARG1]
	_at_p -> "named(Bank)" [label=ARG2]
	proper_q -> "named(Japan)" [label=BV]
	"_be_v_id-fn.Cause_to_end" -> generic_entity [label="ARG1-fn.Process"]
	_a_q -> _drive_n_1 [label=BV]
	_a_q -> _problem_n_of [label=BV]
	"_be_v_id-fn.Cause_to_end" -> _problem_n_of [label="ARG2-fn.Means"]
	comp -> _further_a_1 [label=ARG1]
	proper_q -> "named(Nobuyuki)" [label=BV]
	_that_q_dem -> generic_entity [label=BV]
	proper_q -> "named(Development)" [label=BV]
	compound -> "named(Development)" [label=ARG1]
	compound -> "named(Nobuyuki)" [label=ARG2]
	_further_a_1 -> _drive_n_1 [label=ARG1]
	compound -> "named(Japan)" [label=ARG2]
	proper_q -> "named(Arai)" [label=BV]
}
