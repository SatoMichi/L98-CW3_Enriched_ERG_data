digraph {
	node [shape=circle style=filled]
	_because_x -> "_provide_v_for-fn.Supply" [label=ARG2]
	focus_d -> "_have_v_1-fn.IN" [label=ARG2]
	"_say_v_to-fn.IN" -> _official_n_1 [label="ARG1-fn.Agent"]
	_with_p -> _difference_n_1 [label=ARG1]
	compound -> _labor_n_1 [label=ARG2]
	_with_p -> _text_n_of [label=ARG2]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_still_a_1 -> "_have_v_1-fn.IN" [label=ARG1]
	_of_p -> _market_n_1 [label=ARG2]
	udef_q -> _labor_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	"_say_v_to-fn.IN" -> "_have_v_1-fn.IN" [label="ARG2-fn.NotExist"]
	_a_q -> _official_n_1 [label=BV]
	_the_q -> _text_n_of [label=BV]
	_british_a_1 -> _official_n_1 [label=ARG1]
	_serious_a_1 -> _difference_n_1 [label=ARG1]
	"_provide_v_for-fn.Supply" -> _regulation_n_1 [label="ARG2-fn.Theme"]
	"_have_v_1-fn.IN" -> _difference_n_1 [label="ARG2-fn.Theme"]
	_a_q -> _regulation_n_1 [label=BV]
	"_provide_v_for-fn.Supply" -> pron [label="ARG1-fn.Agent"]
	compound -> _market_n_1 [label=ARG1]
	udef_q -> _difference_n_1 [label=BV]
	_the_q -> _market_n_1 [label=BV]
	_because_x -> "_say_v_to-fn.IN" [label=ARG1]
	_of_p -> _regulation_n_1 [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
