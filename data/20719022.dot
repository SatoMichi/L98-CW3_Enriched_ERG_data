digraph {
	node [shape=circle style=filled]
	_late_p -> time_n [label=ARG1]
	udef_q -> generic_entity [label=BV]
	part_of -> _stock_n_1 [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	udef_q -> _trader_n_1 [label=BV]
	compound -> "named(Street)" [label=ARG1]
	"much-many_a" -> generic_entity [label=ARG1]
	_as_p -> _giant_n_1 [label=ARG1]
	proper_q -> "named(Elf)" [label=BV]
	_the_q -> _stock_n_1 [label=BV]
	_in_p_state -> "named(France)" [label=ARG2]
	comp -> part_of [label=ARG2]
	proper_q -> "named(Wall)" [label=BV]
	_rally_v_1 -> "named(Street)" [label=ARG1]
	focus_d -> _in_p_state [label=ARG2]
	proper_q -> "named(France)" [label=BV]
	_include_v_1 -> part_of [label=ARG1]
	udef_q -> _chip_n_1 [label=BV]
	_until_x_h -> neg [label=ARG1]
	compound -> "named(Elf)" [label=ARG2]
	compound -> _stock_n_1 [label=ARG1]
	compound -> nominalization [label=ARG2]
	nominalization -> _trade_v_1 [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_include_v_1 -> _giant_n_1 [label=ARG2]
	proper_q -> "named(Street)" [label=BV]
	compound -> _chip_n_1 [label=ARG2]
	proper_q -> "named(Aquitaine)" [label=BV]
	_the_q -> _day_n_of [label=BV]
	"card(25)" -> _stock_n_1 [label=ARG1]
	_in_p_temp -> _day_n_of [label=ARG2]
	_top_a_1 -> _stock_n_1 [label=ARG1]
	compound -> "named(Wall)" [label=ARG2]
	comp -> "much-many_a" [label=ARG1]
	_such_q -> _giant_n_1 [label=BV]
	focus_d -> "_open_v_1-fn.NF" [label=ARG1]
	neg -> "_open_v_1-fn.NF" [label=ARG1]
	_half_q -> part_of [label=BV]
	proper_q -> "named(BSN)" [label=BV]
	"_open_v_1-fn.NF" -> generic_entity [label="ARG1-fn.NotExist"]
	compound -> _day_n_of [label=ARG1]
	udef_q -> nominalization [label=BV]
	_blue_a_1 -> _chip_n_1 [label=ARG1]
	_as_p -> _and_c [label=ARG2]
	"_say_v_to-fn.IN" -> _until_x_h [label="ARG2-fn.Topic"]
	loc_nonsp -> _rally_v_1 [label=ARG1]
	_in_p_state -> "_open_v_1-fn.NF" [label=ARG1]
	_european_a_1 -> _day_n_of [label=ARG1]
	_in_p_temp -> time_n [label=ARG1]
	compound -> "named(Aquitaine)" [label=ARG1]
	udef_q -> _and_c [label=BV]
	_until_x_h -> _rally_v_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> _trader_n_1 [label="ARG1-fn.Agent"]
}
