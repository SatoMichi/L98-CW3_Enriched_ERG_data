digraph {
	node [shape=circle style=filled]
	"_contend_v_1-fn.Statement" -> "_inform_v_1-fn.Telling" [label="ARG2-fn.Theme"]
	compound -> "named(GE)" [label=ARG2]
	parg_d -> _suspect_v_of [label=ARG1]
	"_disclose_v_to-fn.Reveal_secret" -> "named(GE)" [label="ARG1-fn.Agent"]
	compound -> _mister_n_1 [label=ARG2]
	proper_q -> "named(GE)" [label=BV]
	_the_q -> _problem_n_of [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	"_inform_v_1-fn.Telling" -> "named(Orr)" [label="ARG2-fn.Recipient"]
	"_disclose_v_to-fn.Reveal_secret" -> _problem_n_of [label="ARG2-fn.Topic"]
	parg_d -> "named(Orr)" [label=ARG2]
	udef_q -> _management_n_1 [label=BV]
	_just_a_1 -> "_discover_v_1-fn.Becoming_aware" [label=ARG1]
	udef_q -> _prosecutor_n_1 [label=BV]
	"_discover_v_1-fn.Becoming_aware" -> _management_n_1 [label="ARG1-fn.Experiencer"]
	_when_x_subord -> "_contend_v_1-fn.Statement" [label=ARG1]
	"_inform_v_1-fn.Telling" -> "_discover_v_1-fn.Becoming_aware" [label="ARG3-fn.Topic"]
	_only_x_deg -> _just_a_1 [label=ARG1]
	_the_q -> _practice_n_of [label=BV]
	_final_a_1 -> "_disclose_v_to-fn.Reveal_secret" [label=ARG1]
	compound -> "named(Orr)" [label=ARG1]
	"_contend_v_1-fn.Statement" -> _prosecutor_n_1 [label="ARG1-fn.Agent"]
	_erroneous_a_1 -> "_inform_v_1-fn.Telling" [label=ARG1]
	_when_x_subord -> "_disclose_v_to-fn.Reveal_secret" [label=ARG2]
	parg_d -> "_discover_v_1-fn.Becoming_aware" [label=ARG1]
	"_discover_v_1-fn.Becoming_aware" -> _practice_n_of [label="ARG2-fn.Stimulus"]
	_suspect_v_of -> _practice_n_of [label=ARG2]
	proper_q -> "named(Orr)" [label=BV]
	compound -> _management_n_1 [label=ARG1]
	parg_d -> "_inform_v_1-fn.Telling" [label=ARG1]
	parg_d -> _practice_n_of [label=ARG2]
}
