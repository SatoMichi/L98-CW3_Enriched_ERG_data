digraph {
	node [shape=circle style=filled]
	compound -> _data_n_1 [label=ARG1]
	"_sign_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_sign_v_1-fn.Competition" -> _agreement_n_1 [label="ARG2-fn.Participant_2"]
	"_restrict_v_to-fn.Execution" -> _agreement_n_1 [label="ARG1-fn.Executioner"]
	_certain_a_of -> _move_n_1 [label=ARG1]
	udef_q -> nominalization [label=BV]
	parg_d -> pron [label=ARG2]
	udef_q -> _move_n_1 [label=BV]
	"_obtain_v_1-fn.Competition" -> _data_n_1 [label="ARG2-fn.Participant_2"]
	_hostile_a_1 -> _move_n_1 [label=ARG1]
	_from_p -> nominalization [label=ARG2]
	proper_q -> "named(UAL)" [label=BV]
	_confidential_a_1 -> _data_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_however_a_1 -> "_restrict_v_to-fn.Execution" [label=ARG1]
	_from_p -> "_restrict_v_to-fn.Execution" [label=ARG1]
	parg_d -> "_restrict_v_to-fn.Execution" [label=ARG1]
	_a_q -> _agreement_n_1 [label=BV]
	"_in+order+to_x" -> "_sign_v_1-fn.Competition" [label=ARG1]
	"_restrict_v_to-fn.Execution" -> pron [label="ARG2-fn.Instrument"]
	compound -> "named(UAL)" [label=ARG2]
	"_make_v_1-fn.Competition" -> _move_n_1 [label="ARG2-fn.Participant_2"]
	nominalization -> "_make_v_1-fn.Competition" [label=ARG1]
	"_obtain_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	udef_q -> _data_n_1 [label=BV]
	"_in+order+to_x" -> "_obtain_v_1-fn.Competition" [label=ARG2]
}
