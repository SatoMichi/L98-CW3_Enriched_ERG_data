digraph {
	node [shape=circle style=filled]
	compound -> _hitch_n_1 [label=ARG1]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	focus_d -> loc_nonsp [label=ARG2]
	_of_p -> _aid_n_1 [label=ARG1]
	_stuck_a_with -> pron [label=ARG1]
	"_pull_v_1-fn.Cause_motion" -> pron [label="ARG2-fn.Patient"]
	_the_q -> _hitch_n_1 [label=BV]
	_enlist_v_cause -> pron [label=ARG1]
	_in_p -> _stuck_a_with [label=ARG1]
	_the_q -> _car_n_1 [label=BV]
	_enlist_v_cause -> _aid_n_1 [label=ARG2]
	loc_nonsp -> implicit_conj [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	_a_q -> _farmer_n_1 [label=BV]
	compound -> _chase_n_1 [label=ARG2]
	_a_q -> _ditch_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	_of_p -> _farmer_n_1 [label=ARG2]
	"_drive_v_around-fn.Operate_vehicle" -> pron [label="ARG1-fn.Agent"]
	udef_q -> _chase_n_1 [label=BV]
	"_some+more_a_1" -> "_drive_v_around-fn.Operate_vehicle" [label=ARG1]
	udef_q -> _trailer_n_1 [label=BV]
	"_get_v_state-fn.IN" -> _stuck_a_with [label="ARG2-fn.Patient"]
	compound -> _trailer_n_1 [label=ARG2]
	_in_p -> place_n [label=ARG1]
	"_in+order+to_x" -> _enlist_v_cause [label=ARG1]
	"_out+of_p" -> pron [label=ARG1]
	"_out+of_p" -> _ditch_n_1 [label=ARG2]
	compound -> _car_n_1 [label=ARG1]
	focus_d -> implicit_conj [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	_back_p -> place_n [label=ARG1]
	_in_p -> _ditch_n_1 [label=ARG2]
	"_in+order+to_x" -> _and_c [label=ARG2]
	"_get_v_out-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_the_q -> _aid_n_1 [label=BV]
	_local_a_1 -> _farmer_n_1 [label=ARG1]
	"_pull_v_1-fn.Cause_motion" -> "_out+of_p" [label="ARG3-fn.Co-Patient"]
	"_get_v_out-fn.IN" -> _hitch_n_1 [label="ARG2-fn.Patient"]
	_in_p -> _car_n_1 [label=ARG2]
	_the_q -> _ditch_n_1 [label=BV]
}
