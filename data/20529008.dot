digraph {
	node [shape=circle style=filled]
	comp -> _presence_n_1 [label=ARG2]
	_here_a_1 -> place_n [label=ARG1]
	udef_q -> generic_entity [label=BV]
	"much-many_a" -> generic_entity [label=ARG1]
	focus_d -> _should_v_modal [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_enhance_v_1 -> nominalization [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	nominalization -> "_have_v_1-fn.IN" [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	_enhance_v_1 -> _and_c [label=ARG2]
	proper_q -> "named(Litvinchuk)" [label=BV]
	compound -> _relationship_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> _should_v_modal [label="ARG2-fn.Topic"]
	"_have_v_1-fn.IN" -> generic_entity [label="ARG2-fn.Theme"]
	comp -> "much-many_a" [label=ARG1]
	compound -> "named(Litvinchuk)" [label=ARG1]
	udef_q -> _communication_n_of [label=BV]
	udef_q -> _relationship_n_of [label=BV]
	_a_q -> _presence_n_1 [label=BV]
	udef_q -> nominalization [label=BV]
	compound -> _business_n_1 [label=ARG2]
	_token_a_1 -> _presence_n_1 [label=ARG1]
	loc_nonsp -> _presence_n_1 [label=ARG1]
	loc_nonsp -> place_n [label=ARG2]
	_should_v_modal -> _enhance_v_1 [label=ARG1]
	udef_q -> _business_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	"_say_v_to-fn.IN" -> "named(Litvinchuk)" [label="ARG1-fn.Agent"]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
