digraph {
	node [shape=circle style=filled]
	poss -> generic_entity [label=ARG1]
	udef_q -> _force_n_1 [label=BV]
	_a_q -> _chain_n_of [label=BV]
	"_have_v_1-fn.IN" -> _tie_n_1 [label="ARG2-fn.Theme"]
	"_join_v_1-fn.Cause_to_amalgamate" -> _force_n_1 [label="ARG2-fn.Patient"]
	udef_q -> _tie_n_1 [label=BV]
	"_have_v_1-fn.IN" -> _director_n_of [label="ARG1-fn.Pivot"]
	compound -> "named(James)" [label=ARG2]
	_to_p -> _tie_n_1 [label=ARG1]
	compound -> _chain_n_of [label=ARG1]
	def_explicit_q -> generic_entity [label=BV]
	_some_q -> _director_n_of [label=BV]
	udef_q -> _founder_n_of [label=BV]
	compound -> _company_n_of [label=ARG2]
	"_join_v_1-fn.Cause_to_amalgamate" -> _director_n_of [label="ARG1-fn.Agent"]
	_to_p -> generic_entity [label=ARG2]
	appos -> generic_entity [label=ARG1]
	pronoun_q -> pron [label=BV]
	_with_p -> "named(Patterson)" [label=ARG2]
	poss -> "named(Wendy)" [label=ARG2]
	"_assert_v_to-fn.Statement" -> "_have_v_1-fn.IN" [label="ARG2-fn.Theme"]
	"_assert_v_to-fn.Statement" -> pron [label="ARG1-fn.Agent"]
	_compete_v_1 -> _chain_n_of [label=ARG1]
	proper_q -> "named(James)" [label=BV]
	proper_q -> "named(Patterson)" [label=BV]
	appos -> _chain_n_of [label=ARG2]
	_with_p -> "_join_v_1-fn.Cause_to_amalgamate" [label=ARG1]
	compound -> "named(Patterson)" [label=ARG1]
	udef_q -> _hamburger_n_1 [label=BV]
	proper_q -> "named(Wendy)" [label=BV]
	udef_q -> _company_n_of [label=BV]
	compound -> _hamburger_n_1 [label=ARG2]
	compound -> _founder_n_of [label=ARG1]
}
