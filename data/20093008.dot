digraph {
	node [shape=circle style=filled]
	def_explicit_q -> _leader_n_of [label=BV]
	proper_q -> "named(Nixon)" [label=BV]
	compound -> _president_n_of [label=ARG2]
	udef_q -> generic_entity [label=BV]
	poss -> pron [label=ARG2]
	proper_q -> "named(Shangkun)" [label=BV]
	"card(100)" -> generic_entity [label=ARG1]
	"_remind_v_1-fn.NF" -> neg [label="ARG3-fn.Topic"]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	"_remind_v_1-fn.NF" -> "_host_n_of-to" [label="ARG2-fn.Recipient"]
	_instead_p -> "_remind_v_1-fn.NF" [label=ARG1]
	proper_q -> "named(Yang)" [label=BV]
	neg -> "_forgive_v_for-fn.Forgiveness" [label=ARG1]
	proper_q -> "mofy(Jun)" [label=BV]
	"_forgive_v_for-fn.Forgiveness" -> _american_n_1 [label="ARG1-fn.Agent"]
	_perhaps_x_deg -> udef_q [label=ARG1]
	udef_q -> _demonstrator_n_1 [label=BV]
	_the_q -> _assault_n_1 [label=BV]
	poss -> _leader_n_of [label=ARG1]
	focus_d -> "_remind_v_1-fn.NF" [label=ARG1]
	"card(1000)" -> generic_entity [label=ARG1]
	poss -> "named(China)" [label=ARG2]
	appos -> "_host_n_of-to" [label=ARG1]
	_chinese_a_1 -> _president_n_of [label=ARG1]
	compound -> "dofm(3-4)" [label=ARG1]
	compound -> "named(Shangkun)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_kill_v_1-fn.Killing" -> _and_c [label="ARG2-fn.Patient"]
	compound -> "named(Yang)" [label=ARG2]
	"_forgive_v_for-fn.Forgiveness" -> _leader_n_of [label="ARG2-fn.Theme"]
	_of_p -> _demonstrator_n_1 [label=ARG2]
	udef_q -> _president_n_of [label=BV]
	compound -> "named(Nixon)" [label=ARG1]
	udef_q -> _american_n_1 [label=BV]
	proper_q -> "dofm(3-4)" [label=BV]
	_of_p -> _and_c [label=ARG1]
	proper_q -> "named(China)" [label=BV]
	appos -> "named(Shangkun)" [label=ARG2]
	compound -> "mofy(Jun)" [label=ARG2]
	_of_p -> "dofm(3-4)" [label=ARG2]
	_military_a_1 -> _assault_n_1 [label=ARG1]
	udef_q -> _and_c [label=BV]
	"_remind_v_1-fn.NF" -> "named(Nixon)" [label="ARG1-fn.Agent"]
	poss -> "_host_n_of-to" [label=ARG1]
	"_forgive_v_for-fn.Forgiveness" -> _assault_n_1 [label="ARG3-fn.Attribute"]
	"_kill_v_1-fn.Killing" -> _assault_n_1 [label="ARG1-fn.Agent"]
	_of_p -> _assault_n_1 [label=ARG1]
	focus_d -> _instead_p [label=ARG2]
	def_explicit_q -> "_host_n_of-to" [label=BV]
}
