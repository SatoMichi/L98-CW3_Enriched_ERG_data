digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Travelers)" [label=BV]
	udef_q -> _state_n_of [label=BV]
	_the_q -> nominalization [label=BV]
	_in_p -> "_defend_v_from-fn.Event" [label=ARG1]
	compound -> _state_n_of [label=ARG2]
	nominalization -> _proceed_v_1 [label=ARG1]
	"_respond_v_to-fn.State_continue" -> "_insurer/nn_u_unknown" [label="ARG1-fn.Entity"]
	_in_p -> nominalization [label=ARG2]
	"_ask_v_1-fn.Competition" -> "named(Travelers)" [label="ARG2-fn.Participant_2"]
	"_defend_v_from-fn.Event" -> "named(Travelers)" [label="ARG1-fn.Event"]
	neg -> "_respond_v_to-fn.State_continue" [label=ARG1]
	"_ask_v_1-fn.Competition" -> "named(Avondale)" [label="ARG1-fn.Participant_1"]
	"_ask_v_1-fn.Competition" -> "_defend_v_from-fn.Event" [label="ARG3-fn.Participants"]
	compound -> nominalization [label=ARG1]
	proper_q -> "named(Avondale)" [label=BV]
	_the_q -> "_insurer/nn_u_unknown" [label=BV]
	pronoun_q -> pron [label=BV]
	"_defend_v_from-fn.Event" -> pron [label="ARG2-fn.Place"]
}
