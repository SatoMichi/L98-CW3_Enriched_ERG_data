digraph {
	node [shape=circle style=filled]
	udef_q -> _connection_n_of [label=BV]
	compound -> _net_n_1 [label=ARG2]
	times -> "card(50)" [label=ARG2]
	def_explicit_q -> _proceeds_n_1 [label=BV]
	_with_p -> _connection_n_of [label=ARG1]
	_from_p -> _offering_n_of [label=ARG2]
	times -> "card(1000000)" [label=ARG3]
	_from_p -> _proceeds_n_1 [label=ARG1]
	parg_d -> _proceeds_n_1 [label=ARG2]
	_in_p -> _connection_n_of [label=ARG2]
	proper_q -> "named(Berlitz)" [label=BV]
	_a_q -> _amount_n_of [label=BV]
	poss -> _proceeds_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_equal_a_to -> _amount_n_of [label=ARG1]
	"_expect_v_1-fn.Competition" -> _proceeds_n_1 [label="ARG2-fn.Participant_2"]
	_in_p -> "_borrow_v_from-fn.Verdict" [label=ARG1]
	udef_q -> _plus_c [label=BV]
	udef_q -> _net_n_1 [label=BV]
	_the_q -> _offering_n_of [label=BV]
	_a_q -> _agreement_n_1 [label=BV]
	compound -> _credit_n_1 [label=ARG2]
	udef_q -> _dollar_n_1 [label=BV]
	"card(1000000)" -> _dollar_n_1 [label=ARG1]
	udef_q -> _credit_n_1 [label=BV]
	parg_d -> "_expect_v_1-fn.Competition" [label=ARG1]
	_with_p -> "_lenders/nns_u_unknown" [label=ARG2]
	_equal_a_to -> _proceeds_n_1 [label=ARG2]
	"_borrow_v_from-fn.Verdict" -> _plus_c [label="ARG2-fn.Finding"]
	compound -> _proceeds_n_1 [label=ARG1]
	compound -> _agreement_n_1 [label=ARG1]
	"_borrow_v_from-fn.Verdict" -> "named(Berlitz)" [label="ARG1-fn.Judge"]
	udef_q -> "_lenders/nns_u_unknown" [label=BV]
	_with_p -> _agreement_n_1 [label=ARG1]
}
