digraph {
	node [shape=circle style=filled]
	_if_x_then -> "_regain_v_1-fn.Competition" [label=ARG2]
	_any_q -> _profit_n_1 [label=BV]
	_while_x -> "_would_v_modal-fn.Cause_to_end" [label=ARG1]
	"_report_v_to-fn.State_continue" -> _unit_n_of [label="ARG1-fn.Entity"]
	"_regain_v_1-fn.Competition" -> _unit_n_of [label="ARG2-fn.Participant_2"]
	proper_q -> "named(Integrated)" [label=BV]
	_even_x_deg -> _while_x [label=ARG1]
	"_report_v_to-fn.State_continue" -> _profit_n_1 [label="ARG2-fn.State"]
	_while_x -> _independent_a_of [label=ARG2]
	_the_q -> _unit_n_of [label=BV]
	"_receive_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	_if_x_then -> _while_x [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_regain_v_1-fn.Competition" -> "named(Integrated)" [label="ARG1-fn.Participant_1"]
	"_would_v_modal-fn.Cause_to_end" -> "_receive_v_1-fn.Competition" [label="ARG1-fn.Process"]
	_independent_a_of -> _unit_n_of [label=ARG1]
	"_receive_v_1-fn.Competition" -> _profit_n_1 [label="ARG2-fn.Participant_2"]
}
