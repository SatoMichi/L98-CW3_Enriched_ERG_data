digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.IN" -> _if_x_then [label="ARG2-fn.Topic"]
	_would_v_modal -> "_assume_v_1-fn.Adopt_selection" [label=ARG1]
	def_explicit_q -> _responsibility_n_1 [label=BV]
	proper_q -> "named(American)" [label=BV]
	neg -> "_find_v_1-fn.IN" [label=ARG1]
	_chairman_n_of -> "named(City)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	"_find_v_1-fn.IN" -> _successor_n_to [label="ARG2-fn.Theme"]
	_this_q_dem -> _month_n_1 [label=BV]
	poss -> "named(Russell)" [label=ARG2]
	"_assume_v_1-fn.Adopt_selection" -> _responsibility_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _mister_n_1 [label=BV]
	_a_q -> _successor_n_to [label=BV]
	compound -> "named(American)" [label=ARG2]
	udef_q -> _chairman_n_of [label=BV]
	proper_q -> "named(Ray)" [label=BV]
	compound -> "named(Russell)" [label=ARG1]
	_if_x_then -> neg [label=ARG2]
	appos -> "named(Shaw)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Shaw)" [label=BV]
	appos -> _chairman_n_of [label=ARG2]
	proper_q -> "named(City)" [label=BV]
	parg_d -> "_find_v_1-fn.IN" [label=ARG1]
	compound -> "named(Shaw)" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Shaw)" [label="ARG1-fn.Agent"]
	compound -> "named(Ray)" [label=ARG2]
	proper_q -> "named(Russell)" [label=BV]
	poss -> _responsibility_n_1 [label=ARG1]
	_if_x_then -> _would_v_modal [label=ARG1]
	parg_d -> _successor_n_to [label=ARG2]
	loc_nonsp -> _month_n_1 [label=ARG2]
	"_assume_v_1-fn.Adopt_selection" -> pron [label="ARG1-fn.Agent"]
	compound -> "named(City)" [label=ARG1]
	loc_nonsp -> "_find_v_1-fn.IN" [label=ARG1]
}
