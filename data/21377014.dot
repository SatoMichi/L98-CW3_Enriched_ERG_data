digraph {
	node [shape=circle style=filled]
	"_cause_v_1-fn.Causation" -> _number_n_of [label="ARG1-fn.Cause"]
	loc_nonsp -> "_cause_v_1-fn.Causation" [label=ARG1]
	"_cause_v_1-fn.Causation" -> _stress_n_1 [label="ARG2-fn.Theme"]
	udef_q -> _stress_n_1 [label=BV]
	_simple_a_1 -> _ignore_v_1 [label=ARG1]
	_lack_v_1 -> _model_n_of [label=ARG1]
	_today_a_1 -> time_n [label=ARG1]
	_ignore_v_1 -> _people_n_of [label=ARG1]
	_a_q -> _image_n_of [label=BV]
	_among_p -> _consumer_n_of [label=ARG2]
	_among_p -> "_cause_v_1-fn.Causation" [label=ARG1]
	udef_q -> _automobile_n_1 [label=BV]
	_the_q -> _number_n_of [label=BV]
	_lack_v_1 -> _image_n_of [label=ARG2]
	loc_nonsp -> time_n [label=ARG2]
	_well_x_deg -> _define_v_1 [label=ARG1]
	parg_d -> _define_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	udef_q -> _people_n_of [label=BV]
	compound -> _choice_n_of [label=ARG1]
	udef_q -> _choice_n_of [label=BV]
	compound -> _automobile_n_1 [label=ARG2]
	_ignore_v_1 -> _model_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	_new_a_1 -> _model_n_of [label=ARG1]
	udef_q -> _consumer_n_of [label=BV]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	_define_v_1 -> _image_n_of [label=ARG2]
	_number_n_of -> _choice_n_of [label=ARG1]
	udef_q -> _model_n_of [label=BV]
	parg_d -> _image_n_of [label=ARG2]
	def_implicit_q -> time_n [label=BV]
}
