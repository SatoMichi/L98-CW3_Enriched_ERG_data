digraph {
	node [shape=circle style=filled]
	"_say_v_to-fn.Cause_to_end" -> "named(KnowledgeWare)" [label="ARG1-fn.Process"]
	_with_p -> "_go_v_ahead-fn.State_continue" [label=ARG1]
	proper_q -> "named(KnowledgeWare)" [label=BV]
	_unless_x -> "_change_v_1-fn.Competition" [label=ARG2]
	proper_q -> "named(Atlanta)" [label=BV]
	_next_a_1 -> "_go_v_ahead-fn.State_continue" [label=ARG1]
	def_explicit_q -> "_ipo/nn_u_unknown" [label=BV]
	compound -> "named(KnowledgeWare)" [label=ARG1]
	compound -> _computer_n_1 [label=ARG2]
	"_go_v_ahead-fn.State_continue" -> pron [label="ARG1-fn.Entity"]
	appos -> _concern_n_1 [label=ARG2]
	loc_nonsp -> _week_n_1 [label=ARG2]
	"_plan_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	loc_nonsp -> "_go_v_ahead-fn.State_continue" [label=ARG1]
	_with_p -> "_ipo/nn_u_unknown" [label=ARG2]
	"_change_v_1-fn.Competition" -> _condition_n_1 [label="ARG1-fn.Participant_1"]
	pronoun_q -> pron [label=BV]
	udef_q -> _inc_n_1 [label=BV]
	poss -> "_ipo/nn_u_unknown" [label=ARG1]
	poss -> pron [label=ARG2]
	compound -> _inc_n_1 [label=ARG2]
	_a_q -> _concern_n_1 [label=BV]
	appos -> "named(KnowledgeWare)" [label=ARG1]
	"_say_v_to-fn.Cause_to_end" -> _unless_x [label="ARG2-fn.Means"]
	udef_q -> _computer_n_1 [label=BV]
	compound -> "named(Atlanta)" [label=ARG2]
	compound -> _concern_n_1 [label=ARG1]
	udef_q -> _condition_n_1 [label=BV]
	"_plan_v_1-fn.Competition" -> "_go_v_ahead-fn.State_continue" [label="ARG2-fn.Participant_2"]
	compound -> _software_n_1 [label=ARG1]
	_still_a_1 -> "_plan_v_1-fn.Competition" [label=ARG1]
	udef_q -> _software_n_1 [label=BV]
	_unless_x -> "_plan_v_1-fn.Competition" [label=ARG1]
	_this_q_dem -> _week_n_1 [label=BV]
}
