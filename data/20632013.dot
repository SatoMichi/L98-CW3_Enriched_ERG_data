digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Ford)" [label=BV]
	part_of -> "named(Jaguar)" [label=ARG1]
	proper_q -> "named(Sir)" [label=BV]
	compound -> "named(Sir)" [label=ARG2]
	udef_q -> _chairman_n_of [label=BV]
	_for_p -> part_of [label=ARG2]
	_for_p -> "_bid_v_1-fn.Change_position_on_a_scale" [label=ARG1]
	_other_a_1 -> _hand_n_1 [label=ARG1]
	compound -> "named(Egan)" [label=ARG1]
	"_bid_v_1-fn.Change_position_on_a_scale" -> pron [label="ARG1-fn.Attribute"]
	_willing_a_1 -> "_bid_v_1-fn.Change_position_on_a_scale" [label=ARG2]
	_all_q -> part_of [label=BV]
	_on_p -> _hand_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	_despite_p -> _objection_n_to [label=ARG2]
	_the_q -> _hand_n_1 [label=BV]
	proper_q -> "named(Egan)" [label=BV]
	compound -> "named(John)" [label=ARG2]
	compound -> "named(Jaguar)" [label=ARG2]
	_despite_p -> _willing_a_1 [label=ARG1]
	_willing_a_1 -> pron [label=ARG1]
	_on_p -> "named(Ford)" [label=ARG1]
	proper_q -> "named(Jaguar)" [label=BV]
	_of_p -> "named(Egan)" [label=ARG2]
	compound -> _chairman_n_of [label=ARG1]
	"_say_v_to-fn.Have_as_requirement" -> _willing_a_1 [label="ARG2-fn.Requirement"]
	"_say_v_to-fn.Have_as_requirement" -> "named(Ford)" [label="ARG1-fn.Dependent"]
	_the_q -> _objection_n_to [label=BV]
	_of_p -> _objection_n_to [label=ARG1]
	proper_q -> "named(John)" [label=BV]
}
