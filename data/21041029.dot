digraph {
	node [shape=circle style=filled]
	udef_q -> _child_n_1 [label=BV]
	"_release_v_1-fn.Releasing" -> "named_n(FDA)" [label="ARG1-fn.Cause"]
	_final_a_1 -> "_release_v_1-fn.Releasing" [label=ARG1]
	_while_x -> _pleased_a_with [label=ARG2]
	"_get_v_state-fn.IN" -> _to_p [label="ARG2-fn.Patient"]
	"_release_v_1-fn.Releasing" -> "named(AZT)" [label="ARG2-fn.Theme"]
	comp_too -> _long_a_1 [label=ARG1]
	_for_p -> "_release_v_1-fn.Releasing" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	_this_q_dem -> _point_n_of [label=BV]
	proper_q -> "named(Weiss)" [label=BV]
	"_say_v_to-fn.IN" -> "named(Weiss)" [label="ARG1-fn.Agent"]
	_long_a_1 -> time_n [label=ARG1]
	pronoun_q -> pron [label=BV]
	compound -> _representative_n_1 [label=ARG2]
	_the_q -> "named_n(FDA)" [label=BV]
	compound -> "named(Ted)" [label=ARG2]
	"_say_v_to-fn.IN" -> _while_x [label="ARG2-fn.Topic"]
	_while_x -> "_take_v_2-fn.Taking_time" [label=ARG1]
	proper_q -> "named(AZT)" [label=BV]
	proper_q -> "named(Ted)" [label=BV]
	focus_d -> "_take_v_2-fn.Taking_time" [label=ARG2]
	udef_q -> _representative_n_1 [label=BV]
	_pleased_a_with -> "_release_v_1-fn.Releasing" [label=ARG2]
	_pleased_a_with -> pron [label=ARG1]
	compound -> "named(Weiss)" [label=ARG1]
	_for_p -> _child_n_1 [label=ARG2]
	"_take_v_2-fn.Taking_time" -> time_n [label="ARG3-fn.NotExist"]
	_to_p -> _point_n_of [label=ARG2]
	def_implicit_q -> time_n [label=BV]
	"_take_v_2-fn.Taking_time" -> "_get_v_state-fn.IN" [label="ARG1-fn.NotExist"]
}
