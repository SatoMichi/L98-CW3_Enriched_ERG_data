digraph {
	node [shape=circle style=filled]
	_at_p -> place_n [label=ARG2]
	compound -> _organization_n_1 [label=ARG1]
	parg_d -> _deliver_v_to [label=ARG1]
	udef_q -> "_election_n_of-for" [label=BV]
	"_of+course_a_1" -> "_make_v_up-of-fn.IN" [label=ARG1]
	"_make_v_up-of-fn.IN" -> _organization_n_1 [label="ARG2-fn.Product"]
	udef_q -> _government_n_of [label=BV]
	"_get_v_state-fn.IN" -> _appeal_n_1 [label="ARG1-fn.NotExist"]
	_free_a_1 -> _market_n_1 [label=ARG1]
	_largely_a_1 -> "_make_v_up-of-fn.IN" [label=ARG1]
	parg_d -> _appeal_n_1 [label=ARG2]
	_free_a_1 -> _mind_n_1 [label=ARG1]
	_through_p -> _organization_n_1 [label=ARG2]
	_these_q_dem -> _principle_n_of [label=BV]
	udef_q -> _market_n_1 [label=BV]
	_at_p -> "_fear_v_1-fn.Experiencer_focus" [label=ARG1]
	def_implicit_q -> place_n [label=BV]
	_have_v_1 -> implicit_conj [label=ARG1]
	udef_q -> implicit_conj [label=BV]
	parg_d -> "_muddle_v_1-fn.NF" [label=ARG1]
	"_fear_v_1-fn.Experiencer_focus" -> _principle_n_of [label="ARG2-fn.Stimulus"]
	udef_q -> "named_n(UN)" [label=BV]
	_when_x_subord -> _deliver_v_to [label=ARG2]
	_free_a_1 -> "_election_n_of-for" [label=ARG1]
	_when_x_subord -> "_muddle_v_1-fn.NF" [label=ARG1]
	"_muddle_v_1-fn.NF" -> _appeal_n_1 [label="ARG2-fn.Experiencer"]
	compound -> "named_n(UN)" [label=ARG2]
	"_make_v_up-of-fn.IN" -> _government_n_of [label="ARG3-fn.NotExist"]
	_through_p -> _deliver_v_to [label=ARG1]
	parg_d -> _organization_n_1 [label=ARG2]
	udef_q -> _organization_n_1 [label=BV]
	parg_d -> "_make_v_up-of-fn.IN" [label=ARG1]
	_have_v_1 -> _appeal_n_1 [label=ARG2]
	"_get_v_state-fn.IN" -> _when_x_subord [label="ARG2-fn.Patient"]
	"_fear_v_1-fn.Experiencer_focus" -> _government_n_of [label="ARG1-fn.Experiencer"]
	udef_q -> _mind_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	_home_p -> place_n [label=ARG1]
	_a_q -> _appeal_n_1 [label=BV]
	_seem_v_to -> "_get_v_state-fn.IN" [label=ARG2]
	_only_x_deg -> _when_x_subord [label=ARG1]
}
