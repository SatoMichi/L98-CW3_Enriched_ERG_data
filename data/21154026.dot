digraph {
	node [shape=circle style=filled]
	parg_d -> _production_n_of [label=ARG2]
	_in_p -> _and_c [label=ARG2]
	compound -> "named(Stratas)" [label=ARG1]
	_the_q -> _production_n_of [label=BV]
	"_echo_v_1-fn.Activity_stop" -> _idea_n_of [label="ARG1-fn.Purpose"]
	"_echo_v_1-fn.Activity_stop" -> _movie_n_of [label="ARG2-fn.Place"]
	def_explicit_q -> _idea_n_of [label=BV]
	_with_p -> "_make_v_1-fn.Competition" [label=ARG1]
	poss -> _idea_n_of [label=ARG1]
	_in_p -> "_see_v_1-fn.Expectation" [label=ARG1]
	_already_a_1 -> "_see_v_1-fn.Expectation" [label=ARG1]
	parg_d -> "_see_v_1-fn.Expectation" [label=ARG1]
	udef_q -> _and_c [label=BV]
	_the_q -> _movie_n_of [label=BV]
	compound -> "named(Placido)" [label=ARG2]
	pronoun_q -> pron [label=BV]
	proper_q -> "named(Placido)" [label=BV]
	poss -> pron [label=ARG2]
	_this_q_dem -> generic_entity [label=BV]
	proper_q -> "named(Florence)" [label=BV]
	proper_q -> "named(Domingo)" [label=BV]
	"_make_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	"_be_v_id-fn.Name_conferral" -> _production_n_of [label="ARG2-fn.Name"]
	compound -> "named(Teresa)" [label=ARG2]
	_with_p -> _and_c [label=ARG2]
	compound -> "named(Domingo)" [label=ARG1]
	"_be_v_id-fn.Name_conferral" -> generic_entity [label="ARG1-fn.Entity"]
	"_see_v_1-fn.Expectation" -> _production_n_of [label="ARG2-fn.Phenomenon"]
	proper_q -> "named(Paris)" [label=BV]
	_scenic_a_1 -> _idea_n_of [label=ARG1]
	_same_a_as -> _production_n_of [label=ARG1]
	comp_equal -> _same_a_as [label=ARG1]
	proper_q -> "named(Stratas)" [label=BV]
	proper_q -> "named(Teresa)" [label=BV]
	"_make_v_1-fn.Competition" -> _movie_n_of [label="ARG2-fn.Participant_2"]
}
