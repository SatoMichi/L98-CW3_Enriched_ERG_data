digraph {
	node [shape=circle style=filled]
	compound -> "named_n(Bronx)" [label=ARG1]
	"card(16)" -> _year_n_1 [label=ARG1]
	compound -> "named(South)" [label=ARG2]
	poss -> pron [label=ARG2]
	_for_p -> _year_n_1 [label=ARG2]
	_despite_p -> _job_n_of [label=ARG1]
	_show_v_up -> _job_n_of [label=ARG1]
	_for_p -> _show_v_up [label=ARG1]
	"_keep_v_prd-fn.Storing" -> _principal_n_1 [label="ARG1-fn.Agent"]
	"_keep_v_prd-fn.Storing" -> _job_n_of [label="ARG2-fn.Theme"]
	compound -> _principal_n_1 [label=ARG1]
	udef_q -> "named_n(Bronx)" [label=BV]
	"card(1)" -> _principal_n_1 [label=ARG1]
	udef_q -> _principal_n_1 [label=BV]
	pronoun_q -> pron [label=BV]
	poss -> _job_n_of [label=ARG1]
	udef_q -> _work_n_1 [label=BV]
	def_explicit_q -> _job_n_of [label=BV]
	_serious_a_1 -> _problem_n_of [label=ARG1]
	udef_q -> _year_n_1 [label=BV]
	"_keep_v_prd-fn.Storing" -> _and_c [label="ARG3-fn.NotExist"]
	_for_p -> "_keep_v_prd-fn.Storing" [label=ARG1]
	_drink_v_1 -> _problem_n_of [label=ARG1]
	_rare_a_1 -> _show_v_up [label=ARG1]
	_for_p -> _work_n_1 [label=ARG2]
	proper_q -> "named(South)" [label=BV]
	_despite_p -> _problem_n_of [label=ARG2]
	_a_q -> _problem_n_of [label=BV]
}
