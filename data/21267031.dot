digraph {
	node [shape=circle style=filled]
	"_get_v_state-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	loc_nonsp -> _point_n_of [label=ARG2]
	_if_x_then -> neg [label=ARG1]
	"_say_v_to-fn.IN" -> "_get_v_state-fn.IN" [label="ARG2-fn.Topic"]
	_to_p -> pron [label=ARG1]
	_the_q -> _case_n_of [label=BV]
	"_in+order+to_x" -> _be_v_id [label=ARG1]
	neg -> "_in+order+to_x" [label=ARG1]
	"_use_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	"_get_v_state-fn.IN" -> _to_p [label="ARG2-fn.Patient"]
	_almost_x_deg -> udef_q [label=ARG1]
	comp_enough -> _large_a_1 [label=ARG1]
	_be_v_id -> "_malpractice/nn_u_unknown" [label=ARG2]
	"_in+order+to_x" -> "_use_v_1-fn.IN" [label=ARG2]
	_be_v_id -> pron [label=ARG1]
	udef_q -> "_malpractice/nn_u_unknown" [label=BV]
	pronoun_q -> pron [label=BV]
	_large_a_1 -> _case_n_of [label=ARG1]
	focus_d -> "_get_v_state-fn.IN" [label=ARG2]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	loc_nonsp -> _be_v_id [label=ARG1]
	_to_p -> _point_n_of [label=ARG2]
	_the_q -> _point_n_of [label=BV]
	_if_x_then -> _large_a_1 [label=ARG2]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
