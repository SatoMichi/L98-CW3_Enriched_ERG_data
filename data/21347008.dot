digraph {
	node [shape=circle style=filled]
	_the_q -> _and_c [label=BV]
	"_say_v_to-fn.IN" -> "named(Exxon)" [label="ARG1-fn.Agent"]
	_from_p -> _state_n_of [label=ARG2]
	poss -> pron [label=ARG2]
	_in_p -> "_say_v_to-fn.IN" [label=ARG1]
	proper_q -> "named(Exxon)" [label=BV]
	poss -> _state_n_of [label=ARG2]
	_from_p -> _reimbursement_n_of [label=ARG1]
	compound -> _claim_n_of [label=ARG1]
	_of_p -> _and_c [label=ARG2]
	poss -> _conduct_n_1 [label=ARG1]
	_the_q -> _state_n_of [label=BV]
	udef_q -> _cost_n_1 [label=BV]
	_for_p -> _seek_v_1 [label=ARG1]
	_of_p -> _part_n_1 [label=ARG1]
	def_explicit_q -> _suit_n_of [label=BV]
	_in_p -> _suit_n_of [label=ARG2]
	pronoun_q -> pron [label=BV]
	compound -> _damage_n_to [label=ARG2]
	poss -> _suit_n_of [label=ARG1]
	"_say_v_to-fn.IN" -> "_result_v_from-fn.NF" [label="ARG2-fn.Topic"]
	"_say_v_to-fn.IN" -> _seek_v_1 [label="ARG2-fn.Topic"]
	def_explicit_q -> _conduct_n_1 [label=BV]
	_seek_v_1 -> pron [label=ARG1]
	_that_q_dem -> _part_n_1 [label=BV]
	udef_q -> _damage_n_to [label=BV]
	udef_q -> _reimbursement_n_of [label=BV]
	compound -> _cost_n_1 [label=ARG1]
	"_result_v_from-fn.NF" -> _and_c [label="ARG1-fn.NotExist"]
	"_say_v_to-fn.IN" -> pron [label="ARG1-fn.Agent"]
	compound -> _cleanup_n_1 [label=ARG2]
	_seek_v_1 -> _reimbursement_n_of [label=ARG2]
	_for_p -> _part_n_1 [label=ARG2]
	udef_q -> _claim_n_of [label=BV]
	udef_q -> _cleanup_n_1 [label=BV]
	"_result_v_from-fn.NF" -> _conduct_n_1 [label="ARG2-fn.Theme"]
}
