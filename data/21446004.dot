digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Telelawyer)" [label=BV]
	_in_p -> "named(California)" [label=ARG2]
	_in_p -> _available_a_1 [label=ARG1]
	_though_x -> _available_a_1 [label=ARG2]
	_the_q -> _service_n_1 [label=BV]
	udef_q -> _state_n_of [label=BV]
	"_plan_v_1-fn.Purpose" -> pron [label="ARG1-fn.Experiencer"]
	proper_q -> "named(California)" [label=BV]
	udef_q -> _founder_n_of [label=BV]
	_in_p -> _state_n_of [label=ARG2]
	"_say_v_to-fn.IN" -> "_plan_v_1-fn.Purpose" [label="ARG2-fn.Topic"]
	proper_q -> "named(Michael)" [label=BV]
	compound -> "named(Cane)" [label=ARG1]
	_in_p -> _franchise_v_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_available_a_1 -> _service_n_1 [label=ARG1]
	_franchise_v_1 -> pron [label=ARG2]
	compound -> "named(Telelawyer)" [label=ARG2]
	_though_x -> "_say_v_to-fn.IN" [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Cane)" [label="ARG1-fn.Agent"]
	_other_a_1 -> _state_n_of [label=ARG1]
	_only_x_deg -> _in_p [label=ARG1]
	"_plan_v_1-fn.Purpose" -> _franchise_v_1 [label="ARG2-fn.NotExist"]
	proper_q -> "named(Cane)" [label=BV]
	compound -> "named(Michael)" [label=ARG2]
	compound -> _founder_n_of [label=ARG1]
}
