digraph {
	node [shape=circle style=filled]
	compound -> "named(Peters)" [label=ARG1]
	"_produce_v_1-fn.Cause_to_end" -> _number_n_of [label="ARG2-fn.Means"]
	proper_q -> "named(Peters)" [label=BV]
	compound -> "named(Guber)" [label=ARG2]
	_number_n_of -> _hit_n_1 [label=ARG1]
	udef_q -> _other_n_1 [label=BV]
	udef_q -> _and_c [label=BV]
	def_explicit_q -> _record_n_of [label=BV]
	_while_x -> "_produce_v_1-fn.Cause_to_end" [label=ARG2]
	neg -> _impressive_a_1 [label=ARG1]
	_impressive_a_1 -> _record_n_of [label=ARG1]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	_always_a_1 -> _impressive_a_1 [label=ARG1]
	_for_p -> "_produce_v_1-fn.Cause_to_end" [label=ARG1]
	poss -> _record_n_of [label=ARG1]
	"_produce_v_1-fn.Cause_to_end" -> "named(Peters)" [label="ARG1-fn.Process"]
	_while_x -> neg [label=ARG1]
	comp_so -> _impressive_a_1 [label=ARG1]
	proper_q -> "named(Guber)" [label=BV]
	proper_q -> "named(Warner)" [label=BV]
	_a_q -> _number_n_of [label=BV]
	udef_q -> _hit_n_1 [label=BV]
	_for_p -> _and_c [label=ARG2]
}
