digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Gates)" [label=BV]
	parg_d -> "named(Gates)" [label=ARG2]
	_if_x_then -> "_allow_v_1-fn.IN" [label=ARG2]
	"_allow_v_1-fn.IN" -> "named(Gates)" [label="ARG2-fn.NotExist"]
	_these_q_dem -> "_thing_n_of-about" [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_on_p -> _and_c [label=ARG1]
	_on_p -> "_policy_n_of-on" [label=ARG2]
	"_say_v_1-fn.IN" -> "named(Gates)" [label="ARG1-fn.Agent"]
	udef_q -> _mister_n_1 [label=BV]
	"_say_v_1-fn.IN" -> "_thing_n_of-about" [label="ARG2-fn.Topic"]
	udef_q -> "_discord/nn_u_unknown" [label=BV]
	"_hear_v_about-fn.IN" -> _and_c [label="ARG2-fn.Stimulus"]
	udef_q -> "_policy_n_of-on" [label=BV]
	pronoun_q -> pron [label=BV]
	_foreign_a_1 -> "_policy_n_of-on" [label=ARG1]
	_now_a_1 -> "_hear_v_about-fn.IN" [label=ARG1]
	udef_q -> "_disarray/nn_u_unknown" [label=BV]
	_would_v_modal -> "_hear_v_about-fn.IN" [label=ARG1]
	_if_x_then -> _would_v_modal [label=ARG1]
	compound -> "named(Gates)" [label=ARG1]
	"_hear_v_about-fn.IN" -> pron [label="ARG1-fn.Experiencer"]
	udef_q -> _and_c [label=BV]
	parg_d -> "_allow_v_1-fn.IN" [label=ARG1]
	"_allow_v_1-fn.IN" -> "_say_v_1-fn.IN" [label="ARG3-fn.NotExist"]
}
