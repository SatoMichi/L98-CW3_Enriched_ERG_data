digraph {
	node [shape=circle style=filled]
	_say_v_to -> "named(Sanford)" [label=ARG1]
	neg -> _would_v_modal [label=ARG1]
	_if_x_then -> neg [label=ARG1]
	_say_v_to -> _think_v_1 [label=ARG2]
	"_allow_v_1-fn.IN" -> pron [label="ARG2-fn.NotExist"]
	_if_x_then -> "_allow_v_1-fn.IN" [label=ARG2]
	compound -> _mister_n_1 [label=ARG2]
	_the_q -> _problem_n_of [label=BV]
	"_have_v_1-fn.IN" -> _problem_n_of [label="ARG2-fn.Theme"]
	_think_v_1 -> _if_x_then [label=ARG2]
	_go_v_ahead -> pron [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	"_have_v_1-fn.IN" -> pron [label="ARG1-fn.Pivot"]
	_think_v_1 -> pron [label=ARG1]
	loc_nonsp -> time_n [label=ARG2]
	_then_p_temp -> time_n [label=ARG1]
	parg_d -> pron [label=ARG2]
	pronoun_q -> pron [label=BV]
	"_allow_v_1-fn.IN" -> _go_v_ahead [label="ARG3-fn.NotExist"]
	_now_a_1 -> time_n [label=ARG1]
	compound -> "named(Sanford)" [label=ARG1]
	_would_v_modal -> "_have_v_1-fn.IN" [label=ARG1]
	proper_q -> "named(Sanford)" [label=BV]
	focus_d -> _think_v_1 [label=ARG2]
	parg_d -> "_allow_v_1-fn.IN" [label=ARG1]
	loc_nonsp -> "_have_v_1-fn.IN" [label=ARG1]
	loc_nonsp -> _go_v_ahead [label=ARG1]
	def_implicit_q -> time_n [label=BV]
	focus_d -> _say_v_to [label=ARG1]
}
