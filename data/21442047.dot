digraph {
	node [shape=circle style=filled]
	proper_q -> "named(Interstate)" [label=BV]
	compound -> "named(Interstate)" [label=ARG1]
	proper_q -> "named(Arizona)" [label=BV]
	"_achieve_v_1-fn.Competition" -> _result_n_of [label="ARG2-fn.Participant_2"]
	"_say_v_to-fn.Taking" -> _as_x_prd [label="ARG2-fn.Theme"]
	_the_q -> _quarter_n_temp [label=BV]
	"_outside+of_p" -> "named(Arizona)" [label=ARG2]
	poss -> _operation_n_of [label=ARG1]
	proper_q -> "named(First)" [label=BV]
	"_specify_v_1-fn.Competition" -> "named(Interstate)" [label="ARG1-fn.Participant_1"]
	"_specify_v_1-fn.Competition" -> _result_n_of [label="ARG2-fn.Participant_2"]
	"_achieve_v_1-fn.Competition" -> _operation_n_of [label="ARG1-fn.Participant_1"]
	pronoun_q -> pron [label=BV]
	compound -> "named(First)" [label=ARG2]
	poss -> pron [label=ARG2]
	_as_x_prd -> "_achieve_v_1-fn.Competition" [label=ARG1]
	_for_p -> _quarter_n_temp [label=ARG2]
	parg_d -> _expect_v_1 [label=ARG1]
	_the_q -> _result_n_of [label=BV]
	"_outside+of_p" -> _operation_n_of [label=ARG1]
	neg -> "_specify_v_1-fn.Competition" [label=ARG1]
	_as_x_prd -> _expect_v_1 [label=ARG2]
	def_explicit_q -> _operation_n_of [label=BV]
	"_say_v_to-fn.Taking" -> "named(Interstate)" [label="ARG1-fn.Agent"]
	udef_q -> _result_n_of [label=BV]
	_for_p -> "_achieve_v_1-fn.Competition" [label=ARG1]
}
