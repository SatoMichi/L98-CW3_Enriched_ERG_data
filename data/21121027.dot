digraph {
	node [shape=circle style=filled]
	_a_q -> _engineer_n_1 [label=BV]
	poss -> pron [label=ARG2]
	"_say_v_to-fn.IN" -> "named(George)" [label="ARG1-fn.Agent"]
	appos -> "named(George)" [label=ARG1]
	nominalization -> _mine_v_1 [label=ARG1]
	compound -> nominalization [label=ARG2]
	compound -> "named(Tony)" [label=ARG2]
	def_explicit_q -> _course_n_of [label=BV]
	proper_q -> "named(Tony)" [label=BV]
	"_say_v_to-fn.IN" -> "_good_a_at-for-of" [label="ARG2-fn.Topic"]
	pronoun_q -> pron [label=BV]
	compound -> _course_n_of [label=ARG1]
	compound -> _golf_n_1 [label=ARG2]
	_no_q -> thing [label=BV]
	proper_q -> "named(George)" [label=BV]
	udef_q -> nominalization [label=BV]
	"_good_a_at-for-of" -> thing [label=ARG1]
	poss -> _course_n_of [label=ARG1]
	appos -> _engineer_n_1 [label=ARG2]
	focus_d -> "_good_a_at-for-of" [label=ARG2]
	"_good_a_at-for-of" -> _course_n_of [label=ARG2]
	udef_q -> _golf_n_1 [label=BV]
	comp_too -> "_good_a_at-for-of" [label=ARG1]
	compound -> _engineer_n_1 [label=ARG1]
	compound -> "named(George)" [label=ARG1]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
}
