digraph {
	node [shape=circle style=filled]
	udef_q -> _insurance_n_1 [label=BV]
	_a_q -> _project_n_1 [label=BV]
	proper_q -> "named(Hunter)" [label=BV]
	_the_q -> _business_n_1 [label=BV]
	poss -> _resource_n_1 [label=ARG1]
	_hazardous_a_1 -> _waste_n_of [label=ARG1]
	"_want_v_1-fn.State_continue" -> "_concentrate_v_on-fn.Needing" [label="ARG2-fn.State"]
	with_p -> "_store_v_cause-fn.Cause_to_end" [label=ARG1]
	compound -> _dome_n_1 [label=ARG1]
	_in_p -> _dome_n_1 [label=ARG2]
	pronoun_q -> pron [label=BV]
	poss -> pron [label=ARG2]
	"_concentrate_v_on-fn.Needing" -> "named(Hunter)" [label="ARG1-fn.Cognizer"]
	"_want_v_1-fn.State_continue" -> "named(Hunter)" [label="ARG1-fn.Entity"]
	"_store_v_cause-fn.Cause_to_end" -> _in_p [label="ARG3-fn.Place"]
	udef_q -> _dome_n_1 [label=BV]
	"_store_v_cause-fn.Cause_to_end" -> _waste_n_of [label="ARG2-fn.Means"]
	udef_q -> _waste_n_of [label=BV]
	compound -> _insurance_n_1 [label=ARG2]
	udef_q -> _salt_n_1 [label=BV]
	def_explicit_q -> _resource_n_1 [label=BV]
	_on_p -> "_concentrate_v_on-fn.Needing" [label=ARG1]
	compound -> _business_n_1 [label=ARG1]
	_in_p -> _waste_n_of [label=ARG1]
	_on_p -> _business_n_1 [label=ARG2]
	"_concentrate_v_on-fn.Needing" -> _resource_n_1 [label="ARG2-fn.Requirement"]
	_on_p -> _project_n_1 [label=ARG2]
	with_p -> _project_n_1 [label=ARG2]
	compound -> _salt_n_1 [label=ARG2]
}
