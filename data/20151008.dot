digraph {
	node [shape=circle style=filled]
	"_run_v_prd-fn.Undergo_change" -> "named(Edelman)" [label="ARG1-fn.Entity"]
	udef_q -> _market_n_1 [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	"_prove_v_to-fn.State_continue" -> _and_c [label="ARG1-fn.Entity"]
	proper_q -> "named(Ackerman)" [label=BV]
	compound -> _market_n_1 [label=ARG2]
	compound -> _buy_n_1 [label=ARG2]
	udef_q -> _buy_n_1 [label=BV]
	compound -> "named(Ackerman)" [label=ARG1]
	udef_q -> _and_c [label=BV]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _back_n_1 [label=BV]
	compound -> "named(Edelman)" [label=ARG1]
	"_say_v_to-fn.Taking" -> "named(Ackerman)" [label="ARG1-fn.Agent"]
	_scared_a_of -> "named(Edelman)" [label=ARG1]
	"_prove_v_to-fn.State_continue" -> "_run_v_prd-fn.Undergo_change" [label="ARG2-fn.State"]
	_above_a_1 -> _market_n_1 [label=ARG1]
	compound -> _back_n_1 [label=ARG1]
	parg_d -> _price_n_of [label=ARG2]
	"_run_v_prd-fn.Undergo_change" -> _scared_a_of [label="ARG2-fn.Final_category"]
	proper_q -> "named(Edelman)" [label=BV]
	"_pay_v_for-fn.Receiving" -> _price_n_of [label="ARG2-fn.Donor"]
	_the_q -> _price_n_of [label=BV]
	compound -> _price_n_of [label=ARG1]
	parg_d -> "_pay_v_for-fn.Receiving" [label=ARG1]
	"_say_v_to-fn.Taking" -> "_prove_v_to-fn.State_continue" [label="ARG2-fn.Theme"]
}
