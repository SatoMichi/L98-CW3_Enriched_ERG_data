digraph {
	node [shape=circle style=filled]
	"_license_v_to-fn.NF" -> _firm_n_1 [label="ARG1-fn.Agent"]
	appos -> "named(Beyond)" [label=ARG2]
	proper_q -> "named(Information)" [label=BV]
	compound -> "named(Massachusetts)" [label=ARG2]
	udef_q -> _inc_n_1 [label=BV]
	poss -> pron [label=ARG2]
	"_plan_v_1-fn.Purpose" -> _firm_n_1 [label="ARG1-fn.Experiencer"]
	udef_q -> _use_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	_institute_n_of -> "named(Technology)" [label=ARG1]
	parg_d -> _technology_n_1 [label=ARG2]
	_from_p -> _institute_n_of [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	proper_q -> "named(Lens)" [label=BV]
	parg_d -> "_know_v_as-fn.IN" [label=ARG1]
	compound -> "named(Information)" [label=ARG2]
	_from_p -> "_license_v_to-fn.NF" [label=ARG1]
	_for_p -> "_develop_v_cause-fn.IN" [label=ARG1]
	compound -> "named(Beyond)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_license_v_to-fn.NF" -> _technology_n_1 [label="ARG2-fn.Theme"]
	compound -> "named(Lens)" [label=ARG1]
	proper_q -> "named(Beyond)" [label=BV]
	"_know_v_as-fn.IN" -> _technology_n_1 [label="ARG2-fn.Theme"]
	proper_q -> "named(Digate)" [label=BV]
	def_explicit_q -> _firm_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _and_c [label="ARG2-fn.Topic"]
	"_know_v_as-fn.IN" -> "named(Lens)" [label="ARG3-fn.Predicate"]
	"_develop_v_cause-fn.IN" -> _firm_n_1 [label="ARG1-fn.Agent"]
	"_say_v_to-fn.IN" -> "named(Digate)" [label="ARG1-fn.Agent"]
	poss -> _firm_n_1 [label=ARG1]
	udef_q -> _technology_n_1 [label=BV]
	proper_q -> "named(Massachusetts)" [label=BV]
	proper_q -> "named(Technology)" [label=BV]
	_commercial_a_1 -> _use_n_of [label=ARG1]
	compound -> _institute_n_of [label=ARG1]
	"_develop_v_cause-fn.IN" -> pron [label="ARG2-fn.Product"]
	_for_p -> _use_n_of [label=ARG2]
	compound -> _inc_n_1 [label=ARG2]
	"_plan_v_1-fn.Purpose" -> "_develop_v_cause-fn.IN" [label="ARG2-fn.NotExist"]
	udef_q -> _institute_n_of [label=BV]
	compound -> "named(Digate)" [label=ARG1]
	appos -> _firm_n_1 [label=ARG1]
}
