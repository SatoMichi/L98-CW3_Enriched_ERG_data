digraph {
	node [shape=circle style=filled]
	"_hope_v_1-fn.Desiring" -> pron [label="ARG1-fn.Pivot"]
	_for_p -> _equality_n_1 [label=ARG2]
	_of_p -> _equality_n_1 [label=ARG1]
	compound -> "named(Allen)" [label=ARG1]
	compound -> "named(Rights)" [label=ARG1]
	_brave_a_1 -> _head_n_of [label=ARG1]
	compound -> "named(Commission)" [label=ARG1]
	proper_q -> "named(Allen)" [label=BV]
	nominalization -> "_make_v_1-fn.IN" [label=ARG1]
	_for_p -> _case_n_of [label=ARG1]
	_the_q -> _case_n_of [label=BV]
	compound -> _mister_n_1 [label=ARG2]
	comp_equal -> _brave_a_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_the_q -> _head_n_of [label=BV]
	proper_q -> "named(Civil)" [label=BV]
	_of_p -> _right_n_1 [label=ARG2]
	proper_q -> "named(Rights)" [label=BV]
	_in_p -> _brave_a_1 [label=ARG1]
	_head_n_of -> "named(Commission)" [label=ARG1]
	pronoun_q -> pron [label=BV]
	"_make_v_1-fn.IN" -> _case_n_of [label="ARG2-fn.Product"]
	compound -> "named(Civil)" [label=ARG2]
	udef_q -> _right_n_1 [label=BV]
	_civil_a_1 -> _right_n_1 [label=ARG1]
	udef_q -> _equality_n_1 [label=BV]
	comp_equal -> "named(Allen)" [label=ARG2]
	udef_q -> nominalization [label=BV]
	"_hope_v_1-fn.Desiring" -> _brave_a_1 [label="ARG2-fn.Theme"]
	_next_a_1 -> _head_n_of [label=ARG1]
	_in_p -> nominalization [label=ARG2]
	_the_q -> "named(Commission)" [label=BV]
}
