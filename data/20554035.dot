digraph {
	node [shape=circle style=filled]
	"_in+order+to_x" -> "_prepare_v_for-fn.Activity_prepare" [label=ARG2]
	_the_q -> _agency_n_1 [label=BV]
	_decide_v_1 -> "named(Klein)" [label=ARG1]
	"_remove_v_1-fn.Removing" -> "named(Klein)" [label="ARG1-fn.NotExist"]
	udef_q -> _reaction_n_1 [label=BV]
	_a_q -> "_memo/nn_u_unknown" [label=BV]
	poss -> pron [label=ARG2]
	poss -> _defense_n_1 [label=ARG1]
	_negative_a_1 -> _reaction_n_1 [label=ARG1]
	"_in+order+to_x" -> "_remove_v_1-fn.Removing" [label=ARG1]
	compound -> "named(Kroll)" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	focus_d -> _in_p_state [label=ARG2]
	_minimize_v_1 -> "named(Klein)" [label=ARG1]
	_from_p -> _reaction_n_1 [label=ARG1]
	udef_q -> _mister_n_1 [label=BV]
	_in_p_state -> "_memo/nn_u_unknown" [label=ARG2]
	_prospective_a_1 -> _client_n_1 [label=ARG1]
	"_prepare_v_for-fn.Activity_prepare" -> "named(Klein)" [label="ARG1-fn.Agent"]
	"_prepare_v_for-fn.Activity_prepare" -> _defense_n_1 [label="ARG2-fn.NotExist"]
	compound -> "named(Alex)" [label=ARG2]
	proper_q -> "named(Kroll)" [label=BV]
	focus_d -> "_say_v_to-fn.IN" [label=ARG1]
	udef_q -> _other_n_1 [label=BV]
	"_say_v_to-fn.IN" -> _decide_v_1 [label="ARG2-fn.NotExist"]
	pronoun_q -> pron [label=BV]
	_minimize_v_1 -> _reaction_n_1 [label=ARG2]
	appos -> _chairman_n_of [label=ARG2]
	_decide_v_1 -> _and_c [label=ARG2]
	appos -> "named(Kroll)" [label=ARG1]
	poss -> _agency_n_1 [label=ARG2]
	udef_q -> _client_n_1 [label=BV]
	"_in+order+to_x" -> _minimize_v_1 [label=ARG2]
	"_say_v_to-fn.IN" -> "named(Kroll)" [label="ARG1-fn.NotExist"]
	proper_q -> "named(Alex)" [label=BV]
	compound -> "named(Klein)" [label=ARG1]
	"_remove_v_1-fn.Removing" -> pron [label="ARG2-fn.NotExist"]
	proper_q -> "named(Klein)" [label=BV]
	_from_p -> _and_c [label=ARG2]
	udef_q -> _and_c [label=BV]
	def_explicit_q -> _chairman_n_of [label=BV]
	_in_p_state -> "_say_v_to-fn.IN" [label=ARG1]
	def_explicit_q -> _defense_n_1 [label=BV]
	poss -> _chairman_n_of [label=ARG1]
	_internal_a_1 -> "_memo/nn_u_unknown" [label=ARG1]
}
