digraph {
	node [shape=circle style=filled]
	"_be_v_id-fn.Residence" -> _option_n_1 [label="ARG1-fn.Resident"]
	_with_p -> _conversation_n_1 [label=ARG1]
	def_explicit_q -> _option_n_1 [label=BV]
	_the_q -> _future_n_1 [label=BV]
	"_have_v_1-fn.Competition" -> _conversation_n_1 [label="ARG2-fn.Participant_2"]
	"_be_v_id-fn.Residence" -> thing [label="ARG2-fn.Location"]
	_in_p -> _people_n_of [label=ARG1]
	_interesting_a_for -> _partner_n_1 [label=ARG1]
	_with_p -> _people_n_of [label=ARG2]
	poss -> _option_n_1 [label=ARG1]
	"_be_v_id-fn.Residence" -> _people_n_of [label="ARG1-fn.Resident"]
	_in_p -> _future_n_1 [label=ARG2]
	"_prove_v_to-fn.Receiving" -> "_be_v_id-fn.Residence" [label="ARG2-fn.Donor"]
	"_consider_v_1-fn.Competition" -> _other_n_1 [label="ARG1-fn.Participant_1"]
	poss -> pron [label=ARG2]
	ellipsis_ref -> pron [label=ARG1]
	"_might_v_modal-fn.Cause_to_end" -> "_prove_v_to-fn.Receiving" [label="ARG1-fn.Process"]
	udef_q -> _partner_n_1 [label=BV]
	"_prove_v_to-fn.Receiving" -> _people_n_of [label="ARG1-fn.Recipient"]
	udef_q -> _people_n_of [label=BV]
	pronoun_q -> pron [label=BV]
	"_consider_v_1-fn.Competition" -> "_be_v_id-fn.Residence" [label="ARG2-fn.Participant_2"]
	"_be_v_id-fn.Residence" -> _partner_n_1 [label="ARG2-fn.Location"]
	"_have_v_1-fn.Competition" -> pron [label="ARG1-fn.Participant_1"]
	which_q -> thing [label=BV]
	_sure_a_of -> pron [label=ARG1]
	udef_q -> _other_n_1 [label=BV]
	udef_q -> _conversation_n_1 [label=BV]
	_sure_a_of -> "_consider_v_1-fn.Competition" [label=ARG2]
}
