digraph {
	node [shape=circle style=filled]
	_forever_a_1 -> time_n [label=ARG1]
	_speak_v_out -> pron [label=ARG1]
	"_say_v_1-fn.IN" -> time_n [label="ARG2-fn.NotExist"]
	neg -> "_say_v_1-fn.IN" [label=ARG1]
	compound -> _mister_n_1 [label=ARG2]
	udef_q -> _mister_n_1 [label=BV]
	_every_q -> _property_n_1 [label=BV]
	"_a+few_a_1" -> _year_n_1 [label=ARG1]
	pronoun_q -> pron [label=BV]
	_ago_p -> _year_n_1 [label=ARG2]
	"_say_v_to-fn.IN" -> _when_x_subord [label="ARG2-fn.NotExist"]
	"_say_v_1-fn.IN" -> _property_n_1 [label="ARG2-fn.NotExist"]
	compound -> "named(Pilson)" [label=ARG1]
	_when_x_subord -> _and_c [label=ARG1]
	"_say_v_1-fn.IN" -> pron [label="ARG1-fn.NotExist"]
	_when_x_subord -> _speak_v_out [label=ARG2]
	proper_q -> "named(Pilson)" [label=BV]
	udef_q -> _year_n_1 [label=BV]
	_ago_p -> _speak_v_out [label=ARG1]
	"_say_v_to-fn.IN" -> "named(Pilson)" [label="ARG1-fn.NotExist"]
	def_implicit_q -> time_n [label=BV]
}
